<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>位运算</title>
      <link href="/2021/05/19/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
      <url>/2021/05/19/%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<div style='text-align: center;'><h1> <font size=5em color='#ff7f50'>位运算</font></h1></div><hr><h2 id="常见位运算技巧"><a href="#常见位运算技巧" class="headerlink" title="常见位运算技巧"></a><font size=4em color='#afdd22'>常见位运算技巧</font></h2><ol><li><p><strong>计算一个数里二进制 1 的个数</strong></p><p>比如二进制数 <code>n= 10001100 </code> 进行操作<code>n&amp;(n-1)</code>结果如下</p><p>1.<code>n   =   10001100 </code></p><p>2.<code>n-1 =   10001011</code></p><p>3.<code>n&amp;(n-1)=10001000</code></p><p>每次进行上面的操作都能消除最低位的 1 则 :</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public int countBits(int num)&#123;    int count&#x3D;0;    while(num&gt;0)&#123;n&#x3D;n&amp;(n-1);        count++;    &#125;&#125;</code></pre><p>或</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public int countBits(int num)&#123;    int count &#x3D; 0;    while(num&gt;0)&#123;        if(num&amp;1&#x3D;&#x3D;1)&#123;            count++;        &#125;        num&gt;&gt;1;    &#125;    return count;&#125;</code></pre></li></ol><ol start="2"><li><p><strong>可以用二进制记录 0-9 每个数字是否出现过</strong></p><p>用一个数 sign 记录 , 当每出现一个数n则将1 左移n位 ,  然后和 sign 相与&amp; </p><p>例 :</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">&#x2F;&#x2F;判断一个数字里面是否有重复数字public boolean judge(int num)&#123;    int sign&#x3D; (1&lt;&lt;10) -1 ;&#x2F;&#x2F; 一开始sign &#x3D; 1111111111    while(num&gt;0)&#123;        int n &#x3D; 1&lt;&lt;(num%10);  &#x2F;&#x2F;取出最末尾那个数(num%10), 并将 1 &lt;&lt; num%10    if((n&amp;sign) &#x3D;&#x3D; 0)&#123; &#x2F;&#x2F;想与 等于0 的话说明 n 没有出现过            sign|&#x3D;n; &#x2F;&#x2F; 将 n 并入 sign        &#125;else&#123;            return false; &#x2F;&#x2F;说明出 sign 现过 n         &#125;        num&#x2F;&#x3D;10;    &#125;    return true;&#125;</code></pre></li></ol><h2 id="位运算小知识"><a href="#位运算小知识" class="headerlink" title="位运算小知识"></a><font size=4em color='#afdd22'>位运算小知识</font></h2><ul><li>n 位 1 的二进制表示的数是 $2^n-1$</li><li>有的题有两个变量 ，则可以用 0 1 表示这两个变量 ,则可以用位位运算来表示这两个变量的排列 ( 挺好用 )</li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特殊数据结构</title>
      <link href="/2021/05/18/%E7%89%B9%E6%AE%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2021/05/18/%E7%89%B9%E6%AE%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<div style='text-align: center;'><h1> <font size=5em color='#ff7f50'>常用数据结构</font></h1></div><hr><h2 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a><font size=4em color='#afdd22'>单调栈</font></h2><blockquote><p>单调栈只是用了一些巧妙的逻辑 , 使得每次新元素入栈后 , 栈内的元素都保持单调 ; 单调栈的用途并不广泛 , 只处理一种典型的问题 , </p><p>叫做 Next Greater Element  . 看例题</p></blockquote><p><strong>例</strong> : 输入一个数组 , 返回一个等长的数组 , 对应索引存储着下一个更大的元素 , 如果没有更大的元素 ,就存 -1 .</p><p>比如输入一个数组<code>nums = [2,1,2,4,3]</code> , 算法返回<code> [4,2,4,-1,-1]</code> </p><p>解释 : 第一个 2 后面比2 大的数是4 ; 后面比1大的数是2 ; 第二个 2 后面比2 大的数是4 . . . . </p><p>抽象思路 : 将数组元素看成并列站立的人,元素大小看成人的身高</p><p>✨<strong>单调栈模板</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">vector &lt;int&gt; nextGreaterElement(vector&lt;int&gt;&amp; nums)&#123;    vector&lt;int&gt; ans(nums.size());    stack&lt;int&gt; s;    for(int i&#x3D;nums.size()-1;i&gt;&#x3D;0;i--)&#123;&#x2F;&#x2F;倒着往栈里放东西        while(!s.empty()&amp;&amp;s.top()&lt;&#x3D;nums[i])&#123;&#x2F;&#x2F;判定个子高矮,如果栈不为空且进来的数比栈顶元素大            s.pop();&#x2F;&#x2F;矮个子出列 ,被挡住了,没啥用                    &#125;        ans[i]&#x3D;s.empty()?-1:s.top();        s.push(nums[i]);&#x2F;&#x2F;进队    &#125;    return ans;&#125;</code></pre><p><em>for循环要从后往前扫描元素 , 因为借助的是栈的结构 , 倒着入栈 ,正着出栈</em> ,while 循环则是把两个 “高个儿” 元素之间的元素排除 , 因为他们的存在没有意义了 , 因为前面有着更高的元素 , 所以不可能被作为后续进来的元素的Next Greater Element 了 .</p><h2 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a><font size=4em color='#afdd22'>单调队列</font></h2><p>暂未写 . . .</p><h2 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a><font size=4em color='#afdd22'>二叉搜索树</font></h2><p>暂未写 . . .</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语生词</title>
      <link href="/2021/05/09/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/"/>
      <url>/2021/05/09/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<div class="note green icon modern"><i class="note-icon fas fa-rocket"></i><p>🎈<a href="/2021/04/27/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/">考研英语</a> - 📚 <a href="/2020/09/09/%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90%E6%91%98%E6%8A%84/">英语句子摘抄</a></p></div><hr><table><thead><tr><th align="center">单词</th><th align="center">释义</th><th align="center">单词</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">grievance</td><td align="center">n.不满，委屈</td><td align="center">grieve</td><td align="center">vt.使悲伤，使苦恼</td></tr><tr><td align="center">harness</td><td align="center">v.利用，治理</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背包问题</title>
      <link href="/2021/05/07/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2021/05/07/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<div style='text-align: center;'><h1> <font size=5em color='#ff7f50'>背包问题🎒</font> </h1></div><hr><div class="note blue modern"><p>背包问题是指在一个有容积或重量限制的背包中放入物品，物品有体积 , 重量 , 价值等属性。要求在满足背包限制的情况下，如何放置物品使背包的价值之和最大。根据物品限制条件的不同，可分为:</p><p>​                                                        <strong>01 背包</strong> ,<strong>完全背包</strong>,<strong>多重背包</strong>,<strong>分组背包</strong></p></div><h2 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a><font size=4em color='#afdd22'>01背包</font></h2><blockquote><p>问题描述:</p><p>​    给定n个物品，每个物品有重量wi和价值vi,<strong>每种物品有且只有一个</strong> , 背包容量为W,要求在不超过背包容量的情况下,如何放置物品,使背包中物品价值之和最大,可以对每个物品依次检查是否放入或者不放入。看图理解: dp[ i ] [ j ]表示限制容量为 j 时，前 i 个物品可以取得的最大价值</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HsDodo/blogImage/images/study/dp01.png"></p><p>🐳核心代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">int knapsack01()&#123;&#x2F;&#x2F;01背包for(int i&#x3D;0;i&lt;n;i++)&#123;for(int j&#x3D;W;j&gt;&#x3D;weight[i];j--)&#123; &#x2F;&#x2F;注意这里要逆向推dp[j]&#x3D;max(dp[j],dp[j-weight[i]]+value[i]);&#125;&#125; return dp[W];&#125;</code></pre><h2 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a><font size=4em color='#afdd22'>完全背包</font></h2><blockquote><p>问题描述:</p><p>​    给定n个物品，每个物品有重量wi和价值vi,<strong>每种物品的数量没有限制</strong> , 背包容量为W,要求在不超过背包容量的情况下,如何放置物品,使背包中物品价值之和最大,可以对每个物品依次检查是否放入或者不放入。看图理解: dp[ i ] [ j ]表示限制容量为 j 时，前 i 个物品可以取得的最大价值</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HsDodo/blogImage/images/study/dp02.png"></p><p>🦞核心代码</p><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">int knapsack2()&#123;&#x2F;&#x2F;完全背包 for(int i&#x3D;0;i&lt;n;i++)&#123;for(int j&#x3D;weight[i];j&lt;W;j++)&#123; &#x2F;&#x2F;注意这里要正向推，正向推可以放多次dp[j]&#x3D;max(dp[j],dp[j-weight[i]]+value[i]);&#125; &#125; return dp[W];&#125;</code></pre><h2 id="多重背包"><a href="#多重背包" class="headerlink" title="多重背包"></a><font size=4em color='#afdd22'>多重背包</font></h2><blockquote><p>问题描述:</p><p>​    给定n个物品，每个物品有重量wi和价值vi,<strong>每种物品的数量可以大于1但是有限制</strong> , 背包容量为W,要求在不超过背包容量的情况下,如何放置物品,使背包中物品价值之和最大,可以对每个物品依次检查是否放入或者不放入。看图理解: dp[ i ] [ j ]表示限制容量为 j 时，前 i 个物品可以取得的最大价值</p></blockquote><p> 🐙核心代码</p><ul><li>方法一 ( 使用数组优化，用数组记录物品使用个数 )</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">int knapsack3()&#123;&#x2F;&#x2F;多重背包 for(int i&#x3D;0;i&lt;n;i++)&#123;memset(x,0,sizeof(x));for(int j&#x3D;weight[i];j&lt;&#x3D;W;j++)&#123;if(dp[j]&lt;(dp[j-weight[i]]+value[i])&amp;&amp;x[j-weight[i]]&lt;num[i])&#123; &#x2F;&#x2F;用数组优化，数组记录物品使用个数&#x2F;&#x2F;更新dp[j]&#x3D;dp[j-weight[i]]+value[i];x[j]&#x3D;x[j-weight[i]]+1;&#125;&#125;&#125;return dp[W];&#125;</code></pre><ul><li>方法二 ( 二进制分组,有些题会超时 )</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void multi_knapsack2(int n,int W)&#x2F;&#x2F;二进制拆分 &#123;    for(int i&#x3D;1;i&lt;&#x3D;n;i++)    &#123;if(c[i]*w[i]&gt;&#x3D;W)&#x2F;&#x2F;转化完全背包         &#123;            for(int j&#x3D;w[i];j&lt;&#x3D;W;j++)                dp[j]&#x3D;max(dp[j],dp[j-w[i]]+v[i]);        &#125;        else        &#123;            for(int k&#x3D;1;c[i]&gt;0;k&lt;&lt;&#x3D;1)&#x2F;&#x2F;二进制拆分        &#123;            int x&#x3D;min(k,c[i]);            for(int j&#x3D;W;j&gt;&#x3D;w[i]*x;j--)&#x2F;&#x2F;转化01背包                 dp[j]&#x3D;max(dp[j],dp[j-w[i]*x]+x*v[i]);            c[i]-&#x3D;x;        &#125;     &#125;&#125;&#125;</code></pre><h2 id="分组背包"><a href="#分组背包" class="headerlink" title="分组背包"></a><font size=4em color='#afdd22'>分组背包</font></h2><blockquote><p>问题描述:</p><p>​    给定n组物品,第 i 组第 j 个物品有重量  wij 和 vij ,背包容量为W, 要求在不超过背包容量的情况下,每组至多选择一个物品,如何放置物品,使背包中物品的价值之和最大。 <strong>因为每组至多选择一个物品,可以将每组看作一个整体,这样就类似于 01 背包</strong></p></blockquote><p>🐡核心代码</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">void group_knapsack(int n,int W)&#x2F;&#x2F;分组背包&#123;    for(int i&#x3D;1;i&lt;&#x3D;n;i++)for(int j&#x3D;W;j&gt;&#x3D;0;j--) for(int k&#x3D;1;k&lt;&#x3D;c[i];k++)&#123;if(j&gt;&#x3D;w[i][k])&#123;&#x2F;&#x2F;枚举组内各个物品dp[j]&#x3D;max(dp[j],dp[j-w[i][k]]+v[i][k]);                                                    &#125;            &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研英语</title>
      <link href="/2021/04/27/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
      <url>/2021/04/27/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="考研英语"><a href="#考研英语" class="headerlink" title="考研英语"></a>考研英语</h1><div class="note green icon modern"><i class="note-icon fas fa-rocket"></i><p>🎈<a href="/2020/09/09/%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90%E6%91%98%E6%8A%84/">英语句子摘抄</a> - 📚 <a href="/2021/05/09/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/">英语生词</a></p></div><h2 id="完型填空"><a href="#完型填空" class="headerlink" title="完型填空"></a><font color='#ff7f50'>完型填空</font></h2><p>暂未复习。。</p><h2 id="阅读理解"><a href="#阅读理解" class="headerlink" title="阅读理解"></a><font color='#ff7f50'>阅读理解</font></h2><h3 id="作者态度题"><a href="#作者态度题" class="headerlink" title="作者态度题"></a><font size="3px">作者态度题</font></h3><blockquote><ol><li><strong>标志</strong> ：attitude、deem、consider、tone <font color="#f07c82">题干暗示全文中心 </font></li><li>方法：选项词汇归纳</li><li><strong>正面</strong> ：<br>positive 积极、optimistic 乐观、approval 支持、supportive 支持</li><li><strong>负面</strong> ：<br>negative 消极、pessimistic 悲观、disapproval 反对、critical 批评<br>doubtful 怀疑、suspicious 怀疑、skeptical 怀疑、questionable 怀疑<br>conceited 自负的、desperate 绝望的</li><li><strong>中立</strong> ：<br>neutral 中立、objective 客观的、impartial 整体,公正的、disinterested 公正的（非不感兴趣）</li><li><strong>墓碑选项</strong> ：<br>Uninterested 不感兴趣的、unconcerned 不感兴趣的 、indifferent 冷漠的、confused 迷惑<br>puzzled 迷惑、biased 偏见、prejudice 偏见、contemptuous 偏见,可鄙的、subjective 偏见的,主观的</li></ol></blockquote><h3 id="中心思想题"><a href="#中心思想题" class="headerlink" title="中心思想题"></a><font size="3px">中心思想题</font></h3><blockquote><ol><li><strong>标志</strong> ：mainly about  、discuss 、the best title</li><li><strong>方法</strong> ：<ul><li>串线：将各段首末句串联成一个整体，注意转折处</li><li>中心句：问题开头的提问，对他的回答，是文章的中心独句段</li><li>中心词：文中反复高频出现的词，注意同义改写</li></ul></li></ol></blockquote><h3 id="书评题-Book-review"><a href="#书评题-Book-review" class="headerlink" title="书评题(Book review)"></a><font size="3px">书评题(Book review)</font></h3><blockquote><p><strong>常见结构</strong> :<br>    1. 书的内容及作者的介绍–书名<br>    2. 给予评价 书/作者<br>    3. 主系表结构表达评价</p></blockquote><h3 id="词汇题"><a href="#词汇题" class="headerlink" title="词汇题"></a><font size="3px">词汇题</font></h3><blockquote><ol><li><strong>标志</strong>: By saying “……….” ,the author means that(   )</li><li><strong>方法</strong>: <ul><li>上下文逻辑关系(本句内)，提炼出不断重复的内容，(被不断重复的同义词，近义词，but 之后的反义词)</li><li>排除表面意思外</li><li>全文中心主旨</li></ul></li></ol></blockquote><h3 id="例证题"><a href="#例证题" class="headerlink" title="例证题"></a><font size="3px">例证题</font></h3><blockquote><ol><li><strong>标志</strong> : example 、case、illustrate、demonstrate、to show、to</li><li>例子本身不重要，重要的是例子所支持的观点；观点一般在例子前，有时也在例子后</li><li><strong>干扰选项</strong> ：就事论事 –讲例子本身 ❌</li><li>找观点:<ul><li>观点可以跨越段落</li><li>上下都可以考虑</li><li>排除干扰选项</li></ul></li><li>例证题之实验<ul><li>实验的重点在于结论</li><li>审题清楚：提问对象–过程/结论</li></ul></li><li>推理 ( infer ) 答案多在转折处</li></ol></blockquote><h3 id="常见转折词"><a href="#常见转折词" class="headerlink" title="常见转折词"></a><font size="3px">常见转折词</font></h3><table><thead><tr><th>转折词</th><th>释义</th><th>转折词</th><th>释义</th></tr></thead><tbody><tr><td>however</td><td>然而</td><td>or else</td><td>否则</td></tr><tr><td>otherwise</td><td>否则</td><td>❗ Instead</td><td>反而</td></tr><tr><td>in case of</td><td>万一</td><td>❗ Instead of</td><td>不是</td></tr><tr><td>but for/that</td><td>要不是</td><td>identical</td><td>相同的</td></tr><tr><td>or rather</td><td>或者说</td><td></td><td></td></tr></tbody></table><h2 id="新题型"><a href="#新题型" class="headerlink" title="新题型"></a><font color='#ff7f50'>新题型</font></h2><hr><p>暂未复习。。</p><h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a><font color='#ff7f50'>翻译</font></h2><hr><p>暂未复习。。</p><h2 id="作文"><a href="#作文" class="headerlink" title="作文"></a><font color='#ff7f50'>作文</font></h2><hr><p>暂未复习。。</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性代数</title>
      <link href="/2021/04/24/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
      <url>/2021/04/24/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h1><h2 id="第一章-行-列-式"><a href="#第一章-行-列-式" class="headerlink" title="第一章 行  列  式"></a><font color='#ff7f50'>第一章 行  列  式</font></h2><hr><h2 id="第二章-矩-阵"><a href="#第二章-矩-阵" class="headerlink" title="第二章 矩     阵 "></a><font color='#ff7f50'>第二章 矩     阵 </font></h2><hr><h3 id="💫矩阵的秩"><a href="#💫矩阵的秩" class="headerlink" title="💫矩阵的秩"></a>💫矩阵的秩</h3><blockquote><p>个人理解: 关于秩可以把其想象为 维度数,设$A(α1,α2,α3)$ 若$R(A) =2$,则表示A可以表示一个二维平面,</p><p>若是$R(A)=3$,则可以表示一个三维空间,$ r(A) = r $表示A的非零子式最高阶为 r</p></blockquote><p> 🍖性质:</p><ul><li>经过初等变换矩阵的秩不变</li><li>如果A可逆，则$r(AB) = r(B)，r(BA) = r(A) $</li><li>$ r(A)=r(A^T) ;r(A^TA)=r(A)$   </li><li>当$k\ne0$时,$r(kA)=r(A);r(A+B)\eqslantless r(A)+r(B)$    这种用最简单的那种矩阵来记</li><li>$r(AB) \eqslantless min(r(A),r(B))$  这种用最简单的那种矩阵来记</li><li>若A 可逆，则$r(AB) = r(B) ,r(BA)=r(B)$  可逆矩阵不影响秩</li><li>💥 若A是 m * n 的矩阵, B是n * s 的矩阵，$AB= O$,则$r(A)+r(B)\eqslantless n$</li></ul><h2 id="第五章-特征值与特征向量"><a href="#第五章-特征值与特征向量" class="headerlink" title="第五章 特征值与特征向量"></a><font color='#ff7f50'>第五章 特征值与特征向量</font></h2><hr><h2 id="第六章-二次型"><a href="#第六章-二次型" class="headerlink" title="第六章 二次型"></a><font color='#ff7f50'>第六章 二次型</font></h2><hr><h3 id="一、二次型及其标准型"><a href="#一、二次型及其标准型" class="headerlink" title="一、二次型及其标准型"></a>一、二次型及其标准型</h3><h3 id="二、正定二次型"><a href="#二、正定二次型" class="headerlink" title="二、正定二次型"></a>二、正定二次型</h3><p>💫<strong>构造正定矩阵的必要条件：</strong></p><ul><li>必须是对称矩阵。</li><li>主对角线元素必须为正。</li><li>正定矩阵必须是可逆矩阵。</li><li>对应行列式必须为正。</li><li>矩阵$A$对称则$A^-,A^*,A^m$都是对称的，其次若$A,B$都正定，则$aA+bB (a,b&gt;0)$也一定正定。</li></ul><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a><font color='#ff7f50'>小技巧</font></h2><hr>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习小抄</title>
      <link href="/2021/04/21/Linux%E5%AD%A6%E4%B9%A0%E5%B0%8F%E6%8A%84/"/>
      <url>/2021/04/21/Linux%E5%AD%A6%E4%B9%A0%E5%B0%8F%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-学习小抄"><a href="#Linux-学习小抄" class="headerlink" title="Linux 学习小抄"></a>Linux 学习小抄</h1><h2 id="💫-JDK配置"><a href="#💫-JDK配置" class="headerlink" title="💫 JDK配置"></a>💫 <font color='#ff7f50'>JDK配置</font></h2><ul><li><p>网上下好Linux版本的JDK ，例如: jdk-8u181-linux-x64.tar.gz ,并放到Linux 系统下面/usr/local/jdk/</p><p>本地下好了JDK 可以用Xftp上传上去，或者用在cmd中用scp命令上传</p><pre class="line-numbers language-none"><code class="language-none">scp 源文件路径 用户名@目标主机名或IP地址: 目标文件路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><ul><li><p>解压JDK</p><pre class="line-numbers language-none"><code class="language-none">tar zxvf jdk-8u181-linux-x64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置环境变量</p><p>打开profile配置文件</p><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>尾部添加以下信息(根据自己需要改自己的实际目录)</p><pre class="line-numbers language-none"><code class="language-none">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk&#x2F;jdk1.8.0_181export CLASSPATH&#x3D;$:CLASSPATH:$JAVA_HOME&#x2F;lib&#x2F;export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>刷新配置使其生效</p><pre class="line-numbers language-none"><code class="language-none">source &#x2F;etc&#x2F;profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看是否安装成功 java -version</p><pre class="line-numbers language-none"><code class="language-none">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="💫-SSH远程连接服务器或者虚拟机"><a href="#💫-SSH远程连接服务器或者虚拟机" class="headerlink" title="💫 SSH远程连接服务器或者虚拟机"></a>💫 <font color='#ff7f50'>SSH远程连接服务器或者虚拟机</font></h2><ul><li><p>ssh 命令使用格式:</p><pre class="line-numbers language-none"><code class="language-none">ssh 用户名@目标主机名或IP地址例:ssh root@192.168.2.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>scp 从windows 上传文件到Linux系统 </p><pre class="line-numbers language-none"><code class="language-none">scp 源文件路径 用户名@目标主机名或IP地址: 目标文件路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP学习小抄</title>
      <link href="/2021/04/19/JSP%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/04/19/JSP%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="JSP学习"><a href="#JSP学习" class="headerlink" title="JSP学习"></a>JSP学习</h1><h2 id="🎯-Session"><a href="#🎯-Session" class="headerlink" title="🎯 Session"></a>🎯 <font color='#ff7f50'>Session</font></h2><table><thead><tr><th align="left"><strong>S.N.</strong></th><th align="left"><strong>方法</strong> <strong>&amp;</strong> <strong>描述</strong></th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>public Object getAttribute(String name)</strong> 返回session对象中与指定名称绑定的对象，如果不存在则返回null</td></tr><tr><td align="left">2</td><td align="left"><strong>public Enumeration getAttributeNames()</strong> 返回session对象中所有的对象名称</td></tr><tr><td align="left">3</td><td align="left"><strong>public long getCreationTime()</strong> 返回session对象被创建的时间， 以毫秒为单位，从1970年1月1号凌晨开始算起</td></tr><tr><td align="left">4</td><td align="left"><strong>public String getId()</strong> 返回session对象的ID</td></tr><tr><td align="left">5</td><td align="left"><strong>public long getLastAccessedTime()</strong> 返回客户端最后访问的时间，以毫秒为单位，从1970年1月1号凌晨开始算起</td></tr><tr><td align="left">6</td><td align="left"><strong>public int getMaxInactiveInterval()</strong> 返回最大时间间隔，以秒为单位，servlet 容器将会在这段时间内保持会话打开</td></tr><tr><td align="left">7</td><td align="left"><strong>public void invalidate()</strong> 将session无效化，解绑任何与该session绑定的对象</td></tr><tr><td align="left">8</td><td align="left"><strong>public boolean isNew()</strong> 返回是否为一个新的客户端，或者客户端是否拒绝加入session</td></tr><tr><td align="left">9</td><td align="left"><strong>public void removeAttribute(String name)</strong> 移除session中指定名称的对象</td></tr><tr><td align="left">10</td><td align="left"><strong>public void setAttribute(String name, Object value)</strong> 使用指定的名称和值来产生一个对象并绑定到session中</td></tr><tr><td align="left">11</td><td align="left"><strong>public void setMaxInactiveInterval(int interval)</strong> 用来指定时间，以秒为单位，servlet容器将会在这段时间内保持会话有效</td></tr></tbody></table><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;&lt;%@ page import&#x3D;&quot;java.io.*,java.util.*&quot; %&gt;&lt;%   &#x2F;&#x2F; 获取session创建时间   Date createTime &#x3D; new Date(session.getCreationTime());   &#x2F;&#x2F; 获取最后访问页面的时间   Date lastAccessTime &#x3D; new Date(session.getLastAccessedTime());   String title &#x3D; &quot;再次访问菜鸟教程实例&quot;;   Integer visitCount &#x3D; new Integer(0);   String visitCountKey &#x3D; new String(&quot;visitCount&quot;);   String userIDKey &#x3D; new String(&quot;userID&quot;);   String userID &#x3D; new String(&quot;ABCD&quot;);   &#x2F;&#x2F; 检测网页是否有新的访问用户   if (session.isNew())&#123;      title &#x3D; &quot;访问菜鸟教程实例&quot;;      session.setAttribute(userIDKey, userID);      session.setAttribute(visitCountKey,  visitCount);   &#125; else &#123;       visitCount &#x3D; (Integer)session.getAttribute(visitCountKey);       visitCount +&#x3D; 1;       userID &#x3D; (String)session.getAttribute(userIDKey);       session.setAttribute(visitCountKey,  visitCount);   &#125;%&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Session 跟踪&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;body&gt;&lt;h1&gt;Session 跟踪&lt;&#x2F;h1&gt;&lt;table border&#x3D;&quot;1&quot; align&#x3D;&quot;center&quot;&gt; &lt;tr bgcolor&#x3D;&quot;#949494&quot;&gt;   &lt;th&gt;Session 信息&lt;&#x2F;th&gt;   &lt;th&gt;值&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt; &lt;tr&gt;   &lt;td&gt;id&lt;&#x2F;td&gt;   &lt;td&gt;&lt;% out.print( session.getId()); %&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt; &lt;tr&gt;   &lt;td&gt;创建时间&lt;&#x2F;td&gt;   &lt;td&gt;&lt;% out.print(createTime); %&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt; &lt;tr&gt;   &lt;td&gt;最后访问时间&lt;&#x2F;td&gt;   &lt;td&gt;&lt;% out.print(lastAccessTime); %&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt; &lt;tr&gt;   &lt;td&gt;用户 ID&lt;&#x2F;td&gt;   &lt;td&gt;&lt;% out.print(userID); %&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt; &lt;tr&gt;   &lt;td&gt;访问次数&lt;&#x2F;td&gt;   &lt;td&gt;&lt;% out.print(visitCount); %&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt; &lt;&#x2F;table&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</code></pre><h2 id="🎯-Response"><a href="#🎯-Response" class="headerlink" title="🎯 Response"></a>🎯 <font color='#ff7f50'>Response</font></h2><table><thead><tr><th align="left"><strong>S.N.</strong></th><th align="left"><strong>方法</strong> <strong>&amp;</strong> <strong>描述</strong></th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>String encodeRedirectURL(String url)</strong> 对sendRedirect()方法使用的URL进行编码</td></tr><tr><td align="left">2</td><td align="left"><strong>String encodeURL(String url)</strong> 将URL编码，回传包含Session ID的URL</td></tr><tr><td align="left">3</td><td align="left"><strong>boolean containsHeader(String name)</strong> 返回指定的响应头是否存在</td></tr><tr><td align="left">4</td><td align="left"><strong>boolean isCommitted()</strong> 返回响应是否已经提交到客户端</td></tr><tr><td align="left">5</td><td align="left"><strong>void addCookie(Cookie cookie)</strong> 添加指定的cookie至响应中</td></tr><tr><td align="left">6</td><td align="left"><strong>void addDateHeader(String name, long date)</strong> 添加指定名称的响应头和日期值</td></tr><tr><td align="left">7</td><td align="left"><strong>void addHeader(String name, String value)</strong> 添加指定名称的响应头和值</td></tr><tr><td align="left">8</td><td align="left"><strong>void addIntHeader(String name, int value)</strong> 添加指定名称的响应头和int值</td></tr><tr><td align="left">9</td><td align="left"><strong>void flushBuffer()</strong> 将任何缓存中的内容写入客户端</td></tr><tr><td align="left">10</td><td align="left"><strong>void reset()</strong> 清除任何缓存中的任何数据，包括状态码和各种响应头</td></tr><tr><td align="left">11</td><td align="left"><strong>void resetBuffer()</strong> 清除基本的缓存数据，不包括响应头和状态码</td></tr><tr><td align="left">12</td><td align="left"><strong>void sendError(int sc)</strong> 使用指定的状态码向客户端发送一个出错响应，然后清除缓存</td></tr><tr><td align="left">13</td><td align="left"><strong>void sendError(int sc, String msg)</strong> 使用指定的状态码和消息向客户端发送一个出错响应</td></tr><tr><td align="left">14</td><td align="left"><strong>void sendRedirect(String location)</strong> 使用指定的URL向客户端发送一个临时的间接响应</td></tr><tr><td align="left">15</td><td align="left"><strong>void setBufferSize(int size)</strong> 设置响应体的缓存区大小</td></tr><tr><td align="left">16</td><td align="left"><strong>void setCharacterEncoding(String charset)</strong> 指定响应的编码集（MIME字符集），例如UTF-8</td></tr><tr><td align="left">17</td><td align="left"><strong>void setContentLength(int len)</strong> 指定HTTP servlets中响应的内容的长度，此方法用来设置 HTTP Content-Length 信息头</td></tr><tr><td align="left">18</td><td align="left"><strong>void setContentType(String type)</strong> 设置响应的内容的类型，如果响应还未被提交的话</td></tr><tr><td align="left">19</td><td align="left"><strong>void setDateHeader(String name, long date)</strong> 使用指定名称和日期设置响应头的名称和日期</td></tr><tr><td align="left">20</td><td align="left"><strong>void setHeader(String name, String value)</strong> 使用指定名称和值设置响应头的名称和内容</td></tr><tr><td align="left">21</td><td align="left"><strong>void setIntHeader(String name, int value)</strong> 指定 int 类型的值到 name 标头</td></tr><tr><td align="left">22</td><td align="left"><strong>void setLocale(Locale loc)</strong> 设置响应的语言环境，如果响应尚未被提交的话</td></tr><tr><td align="left">23</td><td align="left"><strong>void setStatus(int sc)</strong> 设置响应的状态码</td></tr></tbody></table><p>💫<strong>跳转页面</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">&lt;%    response.setHeader(&quot;refresh&quot;,&quot;2;url&#x3D;login.jsp&quot;);%&gt;</code></pre><h2 id="🎯-JavaBean"><a href="#🎯-JavaBean" class="headerlink" title="🎯 JavaBean"></a>🎯 <font color='#ff7f50'>JavaBean</font></h2><h2 id="🥑-课堂常用代码"><a href="#🥑-课堂常用代码" class="headerlink" title="🥑 课堂常用代码"></a>🥑 <font color='#ff7f50'>课堂常用代码</font></h2><h3 id="🛵登陆判断"><a href="#🛵登陆判断" class="headerlink" title="🛵登陆判断"></a>🛵登陆判断</h3><ul><li>login</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;form method&#x3D;&quot;post&quot; id&#x3D;&quot;form1&quot; action&#x3D;&quot;check.jsp&quot;&gt;        &lt;i&gt;用户名&lt;&#x2F;i&gt;        &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;user&quot; &gt;        &lt;i&gt;密&amp;nbsp;&amp;nbsp;码&lt;&#x2F;i&gt;        &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;pwd&quot; &gt;        &lt;input type&#x3D;&quot;button&quot; name&#x3D;&quot;login&quot; onclick&#x3D;&quot;check(form1,1)&quot; value&#x3D;&quot;Login&quot;&gt;&lt;&#x2F;form&gt;&lt;script language&#x3D;&quot;JavaScript&quot;&gt;    function check(form,n)&#123;        if(n&#x3D;&#x3D;1)&#123;            if(form.user.value&#x3D;&#x3D;&quot;&quot;)&#123;                alert(&quot;请输入用户名&quot;);                form.user.focus();                return false;            &#125;else if(form.pwd.value&#x3D;&#x3D;&quot;&quot;)&#123;                alert(&quot;请输入密码&quot;);                form.pwd.focus();                return false;            &#125;else&#123;                form.submit();            &#125;        &#125;else&#123;            alert(&quot;还没写!&quot;)        &#125;    &#125;&lt;&#x2F;script&gt;</code></pre><ul><li>check</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java">&lt;%    String user&#x3D;request.getParameter(&quot;user&quot;);    String pwd&#x3D;request.getParameter(&quot;pwd&quot;);    if(user!&#x3D;null&amp;&amp;pwd!&#x3D;null&amp;&amp;user.equals(&quot;LHS&quot;)&amp;&amp;pwd.equals(&quot;123456&quot;))&#123;        session.setAttribute(&quot;user&quot;,user);        session.setAttribute(&quot;password&quot;,pwd);        out.println(&quot;登陆成功，2秒后跳转到&quot;);        response.setHeader(&quot;refresh&quot;,&quot;2;url&#x3D;welcome.jsp&quot;);    &#125;else&#123;        out.println(&quot;登陆失败，2秒后跳转到login页面&quot;);        response.setHeader(&quot;refresh&quot;,&quot;2;url&#x3D;login.jsp&quot;);    &#125;%&gt;</code></pre><h3 id="⏰时间显示"><a href="#⏰时间显示" class="headerlink" title="⏰时间显示"></a>⏰时间显示</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">&lt;div id&#x3D;&#39;jnkc&#39;&gt;&lt;&#x2F;div&gt;&lt;script&gt;   setInterval(&quot;jnkc.innerHTML&#x3D;new Date().toLocaleString()+&#39; 星期&#39;+&#39;日一二三四五六&#39;.charAt(new Date().getDay());&quot;,1000);&lt;&#x2F;script&gt;</code></pre><h3 id="💥点击动效"><a href="#💥点击动效" class="headerlink" title="💥点击动效"></a>💥点击动效</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">var a_idx &#x3D; 0;jQuery(document).ready(function ($) &#123;    $(&quot;body&quot;).click(function (e) &#123;        var a &#x3D; new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);        var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);        a_idx &#x3D; (a_idx + 1) % a.length;        var x &#x3D; e.pageX,            y &#x3D; e.pageY;        var colors &#x3D; new Array(&quot;#5dcdc5&quot;, &quot;#c6ff82&quot;, &quot;#ffe192&quot;,&quot;#ffbd00&quot;,&quot;#FFA6DC&quot;,&quot;#7AFF7C&quot;);        var c &#x3D; parseInt(Math.random()*colors.length);        var d &#x3D; colors[c];        $i.css(&#123;            &quot;z-index&quot;: 5,            &quot;top&quot;: y - 20,            &quot;left&quot;: x,            &quot;position&quot;: &quot;absolute&quot;,            &quot;font-weight&quot;: &quot;bold&quot;,            &quot;color&quot;:d        &#125;);        $(&quot;body&quot;).append($i);        $i.animate(&#123;                &quot;top&quot;: y - 180,                &quot;opacity&quot;: 0            &#125;,            3000,            function () &#123;                $i.remove();            &#125;);    &#125;);    setTimeout(&#39;delay()&#39;, 2000);&#125;);function delay() &#123;    $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);&#125;</code></pre><h3 id="🌸樱花飘落"><a href="#🌸樱花飘落" class="headerlink" title="🌸樱花飘落"></a>🌸樱花飘落</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">var stop, staticx;var img &#x3D; new Image();img.src &#x3D;    &quot;data:image&#x2F;png;base64,iVBORw0KGgoAAAANSUhEUgAAAUgAAAEwCAYAAADVZeifAAAACXBIWXMAAACYAAAAmAGiyIKYAAAHG2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDIgNzkuMTYwOTI0LCAyMDE3LzA3LzEzLTAxOjA2OjM5ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9yaWdodHMvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtcFJpZ2h0czpNYXJrZWQ9IkZhbHNlIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NDFDMjQxQjYyNjIwNjgxMTgwODNEMjE2MDAzOTU1NDQiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDozNDVjOWViOC04NDc4LTFkNDctOGRjMi0yZDkyOGNhYTYxZWQiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YjAzN2ZiMGItNTU5Mi0xYjRkLWJjZGQtOWU4NGExMDJiMGM2IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDE4LTA1LTA5VDE0OjQ5OjM3KzA4OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxOC0wNS0wOVQxNDo1MToyNSswODowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxOC0wNS0wOVQxNDo1MToyNSswODowMCIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjEyMjVlZWE3LTEyY2QtMTY0NC04ZDAzLWFjOTE2ZTAxZDQ1YyIgc3RSZWY6ZG9jdW1lbnRJRD0idXVpZDoxRDIwNUFGNjZCRDlFNTExOUM5REMwMzg2RjlEQjFGNyIvPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDphYmMzNjIzMy1hOWNkLWNiNDQtODViYi0zZTgyMjEwYmIxMjYiIHN0RXZ0OndoZW49IjIwMTgtMDUtMDlUMTQ6NTE6MjUrMDg6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDQyAyMDE4IChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YjAzN2ZiMGItNTU5Mi0xYjRkLWJjZGQtOWU4NGExMDJiMGM2IiBzdEV2dDp3aGVuPSIyMDE4LTA1LTA5VDE0OjUxOjI1KzA4OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOCAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+XCpBoAAApBxJREFUeNrs&#x2F;cmSI8u2LIipLnMHosnc59Z7jyxhjSg1oggn&#x2F;EWO+SP8B34JhRyWCItk1at7786MBnBbWoNlZm4OOLrIvc8+t45bCjIQjibQuKuvTlUpCdva1ra2ta3zZdtHsK1tbWtbG0Bua1vb2tYGkNva1ra2tQHktra1rW1tALmtbW1rWxtAbmtb29rWBpDb2ta2trUB5La2ta1tbQC5rW1ta1sbQG5rW9va1gaQ29rWtra1AeS2trWtbW1rA8htbWtb29oAclvb2ta2NoDc1ra2ta0NILe1rW1tawPIbW1rW9vaAHJb29rWtjaA3Na2trWtDSC3ta1tbWsDyG1ta1vb2gByW9va1rY2gNzWtra1rW1tALmtbW1rWxtAbmtb29rWBpDb2ta2trUB5La2ta1tbQC5rW1ta1sbQG5rW9va1gaQ29rWtra1AeS2trWtbW0Aua1tbWtbG0Bua1vb2tY&#x2F;3xr+o7+Bf&#x2F;2&#x2F;&#x2F;z&#x2F;+1OfPAIgJErGbMj7M8fue+O1A7LLjcxyw+5hwZMbgQnLgKIftRsgMyYUjBYNhOn6AADiMOGDCyIQBCflwwNEdw24HHA5AzhjHJxyQwZTADLgmHJPhDRnfjo6PlPHbNOJDGZgEZsIgOAHPR&#x2F;yPwxv+28MONOBghIEAiXce8LkzuAG&#x2F;vRP7o+EzAcMRyNlxoJByxj4T&#x2F;8su4+UgPE3A++jg5yfe&#x2F;lvD73&#x2F;b4eVfM17&#x2F;zfE&#x2F;&#x2F;y3h6UjsJ8f&#x2F;9N8m&#x2F;Of&#x2F;Cnz&#x2F;d0cegHES&#x2F;t&#x2F;&#x2F;&#x2F;Q7HHfG&#x2F;+&#x2F;8JT0fABGQTzIEkYMyGf&#x2F;0vBh8N3&#x2F;99wv&#x2F;rP&#x2F;1&#x2F;sDs6&#x2F;i&#x2F;&#x2F;+t8DZhCATOFwzPj4&#x2F;R3&#x2F;MhkOmPBz&#x2F;47dB+CY8LZ&#x2F;w&#x2F;NnQh4cu88dppSRU4abQwbQCRPhdDx&#x2F;PCGbI9f7JLXbRfHpYw+n4MOkPAAUSacBmfv30f&#x2F;rf+f+8m+GpyPw8Zrhl0IMAmK5KgAOWCY4Ib6r8pO+&#x2F;hiV&#x2F;5c&#x2F;LyyVe6g8TnH5P&#x2F;3f&#x2F;q8bwv2zA+TfZ7HtvKbY4ScCOxCU4EaYE04hxb0hOYgEATAJTsGYkP2IQQBocAkkAGMBQcdgA47HA3aMg0cQkhmOGRhEZAMoIpdDhiREQYzXJQBDSQwygFGLdwET2&#x2F;3c2luLx9fXzjhKk4hs8QTmsd2OAiHkIR4wZmFKxNMRGI7C5xPxt3+Lv+0GvL47&#x2F;r&#x2F;fBgBCJpAcYPwVAICbsPsE&#x2F;v0VSJl49if8+&#x2F;C&#x2F;IEMwCIQBcCQLUBeBlOOFi4K5wanyGcgAiPEe5XSApInJsllCQkAVQNFStpTcUjoakxtNZqJIwtIx2XigpUyaG2xSdvPj9&#x2F;+aPy3zoORuorKVD7OCoZfLxAUgMhegrEBYf1p8x2pYdxUKITVEXIBhewFit21bG0D+HWoQDgJwiERSAF622CFNgpsh5YypHPck4S7YEEcjQQhAsoRj&#x2F;ixARHiBOVpAhsthNkCKPZwCvNvTB1Ugi7&#x2F;dnpunr9mQYJjoGGWLOooVUAcDbAWV6CleN9sxJwzOeE&#x2F;lczgakQ4OkzCNhBuwOwo&#x2F;n+M+u4Pwsbd4dQLciJefwvR&#x2F;CLDsgyWVP+SMxx0HgSCe8h7&#x2F;037CwY7YY1cPeyQzwAxe3j9FeBKSwOf3p7Q7cuQ7d0oYCbPkifvDnqaULNvOhAE0c7p2ACEbTBwIjhCMYIJhAJggWICsMuQTnEdCB7m&#x2F;7f6rv2XLb2781ITP6bdpSgcrgNhFhTqJChnv9eGosILijKAnCIvlxQsQbwC5AeTfM4IkACdhHtHUlBTxjYSjEYMATxHGEQyQK5GFlZ3daOWsLxgjyiphYAMVJIv9XsIC9xgHg4HIDFBzUxyM5QCUShxBYifDwYSXErlkCkmEkaAcEDFRERUKmCxA0ARMiIN5EHBIcT2JkapPgmVhShHRjZOQU5xExqPw43uNQCOqffp0iEAegDShe9Nz4DUcK6Aa9nmACLylT+ynXYlwC4CbYWLGHoTJzFxj8rTfH8ZnE14pfqP4Ctke0EBoEG0gMJLcK3J2Lx9XIrFz2kjBIhSvpx9NgI6QPgR&#x2F;B&#x2F;Qu6YNIo8kHTpYcU0IWcRw+NJ9HIoAjIAroTja&#x2F;FhWeRIblUoGQHShSZV9J3A7bDSD&#x2F;jil2xHQgiOTCNJRoToISW9rYsi2tnMZZ7ieHwSINhSJyYyBc7N8J7hmkAS7IAhgFYRRxNGFww2SOEQm5&#x2F;e2IVZ3AToY3HiEMEfGWtJkIQGRJgfsIEuU1wAzKGUmEM0oHgwMYo3aWJuG4B3IidlNJlQnYFJ&#x2F;JNMxvfXcUxqNw2AHjJxalgPbpuDAchePOsJsGJAz4Mb7jPx2&#x2F;zyUAAPsUibbD0+v77nlwvEJ4pfEbHN9o9h20AEnoWcQe5FgvRrIU6wSjCRzNbIRAQBmug9wPcv+A9A66RR4vp7vk7hIyQTc3pckwCjo+C26atIj3r4PhalSIdSBswFeAsAEiojyjRGAgfGQ5LRBRTdjWBpB&#x2F;F2ic910i9r1oHnQ1vpoml9splFSZ7XkC&#x2F;AxZ7V5wCAMY4ZviEDMLgByGVEDTYSQkxyji04BnByY49khz8bBEgBkBkP9ucSBaV9+K9DRenxuQLeqC9TnqfZ3AWHJit7IBBmYgHQU8AXkE+AGYRxS5c4AufO6Ap&#x2F;d4CB14+hA+98Tr74LXskWLeuNV7Y7A5154+knsfI8fw0d&#x2F;WjIAw+uwG7lLT7T8QscLhb8B&#x2F;AbxVcI30r6J&#x2F;E7yReArpReSexhHGEeAVivEIBNrBUWYIP&#x2F;UlN&#x2F;o&#x2F;i53wN3hzHBM5UWCJheY4cwwy0lJOEKi++dTdqUOIS80TuZwv1z3C1FhD4g1KjQ0AFyAoZWovfyhRYq&#x2F;rQ0g&#x2F;z4gyZq&#x2F;IpXTfyYxOqJpYRGZycqODUDuYBoiNS6NmkSDKyOVWqXkAIeIIl1wd1hKyIdPjGNt1EQEeSwR5E8DkgyfzC2lriktSp1y5ylSWyqaQl2xoDaacgHI9h47gFRJ+02R0gNAAiEwABJAHuMPDpOQzcBJSBn4fDK8&#x2F;MzwFK&#x2F;l5V34t78ZYHMzCTWYKwXO3Qfw&#x2F;h349jux0w7&#x2F;y+7f4HASHEzpaWB64WivML0y41mO7yC+B0DiheR3AN9p9h3CK4QXCi8AX5H4DHJHlWoHlAMUNcl1gPs7MsiELKNzQgaZReS4rwQgR9GYmcQEV3bQkTnZu3Y05fyEI7y8rXujQs2NHdQSiUWKrH0PhoASAwgLxrfnyIiGliKjadu3tQHk32upprGtURN1O2SWRg1hU9QFkUsTptQRo&#x2F;tNTCU6nKYJYzl8MoQdAJiBk8PlGC1hUmnBqEal0egZakMFbMEHu2OwrgSDIeqMQ9c3NtROdjwyW3SAWdPs2jcuzzeUjj0AmBMTiXSIDnNOhEod8rADcIiGy&#x2F;ue+M&#x2F;lL7oRr2+O&#x2F;&#x2F;9&#x2F;SS3qHnwZmTuF&#x2F;Yfwb&#x2F;9ZSJ7sv3x8p&#x2F;yZlnZ7s+HVYP9C2t8A+4aBz3A8EfwO4G8k&#x2F;ybhO8hvAL4B&#x2F;BvEVwLfALwAeIH4VEJ2h3SE6x3SO+QfpFPQEbIRwo6uSWY7yI9AGgmMyvkIcgA50JjgHEEOFAY6Bk5INJl2BubrjRMuosI5Rdae0EmKXKcJILXHm6sBKaVF&#x2F;RGurUGzAeRfC5Nexm&#x2F;MgamOwCgiqADN2qgpoz4EvKS50ahJLXIKkPNlJ7uApTpYLt2Z+LvluKpZcWaN8ro8vkSVgwxHCs9eRnvK7cYAdbQ6ZAC+swSjJYIUHENJ6VVGdI5G2NEjrR5YGjXA23O82vEg&#x2F;PitSzMNeH4XpgRMI8AM7HNL4xlRnWhZ9t&#x2F;9D3gaNDz&#x2F;H&#x2F;&#x2F;tvzxZGp990Ctov8HSfwbtPwH2G42vAJ8B&#x2F;Bbb8DfIvpN4AfgC4hniC4AR4gBglJQgOOSfdP0EPcN9kvMIMtFsiHOBEpgGAiZnYsTAiZCJTIASYANMBnmCmQmeIA12QMInjWU0oQGXz40zJEI7LFPkRMhWokKP&#x2F;SoATw1UI9LUIgI9LQWBceLa1gaQf5dlAHKNwkr9Owk4lu4t5ZBx0XwgCLjXqnzbgdkQyBsaqTRqWhWfAZju5a&#x2F;WbYzu+ABiStGVzgwQy2T721agdSfDkRkx+CNMc5INenRUss3znZlzJ9tLFJmc8DKuZCIwGGzKSEchjwZPMf9Yu7fjUTiOpVFTXs&#x2F;uIPvb756ePmT7AwgyARgH8WV0vg6y1+T2Yjb8liz9N0rDd5l9S7TfSuT4n0H7TzT7DeQLYDsAz2B6BflMYF&#x2F;qi0NpeZeOdE1bBbgTriTCYJYAGKUksv6eKCVQJiiRGkQNoCUQA+GDkBLgAwYlMg0gkkEDMAwpY0xHHc2RwZPGyVh+TwgwPI0Kc9lHSorMRdSpeZi8gqHmUiYsTlK5wLkb4WkDyA0g&#x2F;6JKpJMYSif7EzO4tC5wqQVaS7GWjRqQIC1mHjG0TraBoAWo9o0aszEaNXUApetk77Ih07HDUEqkpQ1T7r9TwrtN8KlEjCxRbN+oKSMp9HJQ1eiSbI0aMUoHqZQOWDrZ2gF5IMZPlXonbJxg338XRRikJHBH4uX&#x2F;&#x2F;P&#x2F;ML0jpGbRXks8mfjOkvxntO5L9zWz4jTb8N0zpPyGlb6Q9C&#x2F;YK8jst&#x2F;Q3kd4A7gClCdMb+a8b5xNNNcdaB+DZuVUYFDAMcCcYBsARggDSUKsYAVyIxKvuRRESgwAhwonGQ5QGZOwAThR2TJhsxjsDgUx4+&#x2F;xs7+rNpngo4AcNpJSos6fHNqLAAbE4xUuY2&#x2F;+zvvKXZG0D+5SuVs&#x2F;rMDomzd40ya51IcsASpEIFhJCY4HKk0qxwCKmM4sEFV4z6ZJ+Q0q7UIR1GQ9aEQYZPAs9u+BimBYbXCHIisHNDLiwTw3mjxrpO9pBxdlT27JpMRK1UMaRtk0MJOOwN40e2&#x2F;&#x2F;SveXg62n50e&#x2F;6XH3pS4p4Yni3ba5L9C2m&#x2F;Uek3Mr0AfKHZNzL9C8jfMNg32PAd5DeZ&#x2F;UZL30R7htmOiXvQ9rUBTVr5cNkiqPa61b3D2qwGoUhLCXII0NOoqCPumHiUcwQ0wG1E0g7EBGCMuiMGug2QBrmPzDiIHAAMoAYyJQMSpGEEh4MVNmUuJZK+cdJHhX2N8hQMLU5W2UpU2IGhuomFuRYJMKul3zWT2dYGkH&#x2F;n+LFSDlm6hsJkjPGW0pCwfEo5VJthrBGb0TB5xoCumUMAaaYcjmnAYTqU7nZEmQMNDmAsqbFhnXJYj46xDMNlRM0UXce6drLFZSe7giJKpgpUiuPcyXYDhk&#x2F;x+aenl5++e&#x2F;7g0+j2bEzfEu03o73S+ULwBbDvNPsbLf2NKX2D2Uu5vIL2HcbfmIZvMPuGZM8wvsDsqTRFDMlIszLmwnlWc65ZtGHyGh&#x2F;DS4W2lTe8zICnAe4DrKTMZgniyKwjqAGmJNcAq80YT8hIck9wGSkTUjIyRVVYKSJaJINScqTxmBNM2bwUiqUrUWFEhEolRbY5TZZhmSarn4EszRmfh9G9AGpO1kB1WxtA&#x2F;l0B0k872Q5MKcI18wDI4QhMiWXULiiHaEPlbNxqz3OjRpVewplyyDQuKIf9wWU6jfQ0N2G610sQA6JRM2ruZLNUJU872T3l0MrQuiNqnUcDMsRxorl24&#x2F;P&#x2F;7Pv&#x2F;&#x2F;f&#x2F;ozyBeYOnV0vDNLP1Gpt9g9g3kE2ivMH6Dpd8wDL8hpW80vsLsGcZXpHJfS68kn2C2gzHBzFCH560Dxu4zmqPIOts0b2ojRLWhYdZ6IDGFj1ZzFDxF+J4S5ImUyd1gTCUFTyQTzJMcieSAXMBRiQGSyaCo&#x2F;KWjp0xnPVedNk6WtcIZDE+jwqhNFhAsoFgJNW6lLpwMuYIp59Es1Kh1WxtA&#x2F;r1hMvrOAZCpKNO0up&#x2F;ZYgh6QTnEspONQuhgNyvMtoPPB39POWx8aUUkN1mkzo16eEI5FImxNGqoITrPIeew6GT3jZqpNmoATCUqHR1042hmuwTuTXjmgO9M9s2Mr6R9o9k3DMN3JPtOS99APsPSC82+I9lvGNJvsPQdZi+MKDHqkSk9wzjAaCyt&#x2F;Dpu1MqK5Gl42803laICT0QjyvuPOcHCdnJHNGAsmjXuibJSK1WCEF1rIkE00VNoXdAgJgJJ8ZEnSoOSBiolSQNTSiYNhog+RUxrjZOzFPk0KtQ8XF6jQt+xpNlzvVGljlxPoOYqDR6169vaAPLvn2KjU7tx4DCUtFkq2++jHAIGyWFIFyiHgplFo4ZWGjVapxxS2LcBoNJDL42avQw&#x2F;LEMeZYHcQX0cUGyNGpsbNZRcTjBDu72npxeMLzbaa4omyyuZvtHsN5KvoL0i2SstfUeyfynp8zONLyC&#x2F;YUi&#x2F;IdlvTOkVtBeQe5IDzAYYU4sEO3BbhLu12cE5bZ5BspxMvBuuNLaTT2OXKNJsmgFSIpkUnE6L35XgSKIMYoJ8IBlda5bGTulNCxpgliANMB8BO0ApUT6kbImUvX&#x2F;nQgptnmOMhgxPokIZMaWICltkyXlf6zvcdMHc599PwXDLrjeA&#x2F;CtX7SgndTxkYQZPLaXRYh4yaIOlxRCMGnfQUmvUNMqhA64TyqELSoKRIYsm4pPAixsOKeOpoxzWRk1QDhMmO8QsZn2Na5TDMr5EIhk5PCENL459Srvn0exvTOk7LX1jslcwvdL4Cto3pBI9WnSckdJvNLZaI81eo76YvpEstcX409FgYddUWUZXC0mcpuZhC5qINPPHu43dvFUB0FrQcxjkA+QDwSRwgJDgSjAOFEYJRzgToKF0vaPLHcdLuc4EMoE0kAOMiWZmE5MdkXiEcYTbpEXjRIz6YB4rGJ5EhZjrln1UOF&#x2F;O+lEzAHtXm9wCyA0g&#x2F;8pGDYqSD4r02Th1jRpFo6YBkgtMaKl4pRxmTaVRE3VHcACNsCy4hJQGTIcPjIzmjVI0ZhzCrlAOq7pPTzn0bvRo9FSkttY72RBwHIRjgo0TxidPz8PA55TshUwvNHvlkH4zS39DgF13YYhDmH2LdDkAEuQ3kC8lWnyC2UjaGKjcNVWkReS4TJuxLKrWcSl2qKD+ffeqOZ0ihs&#x2F;RKI0xhOU0CKkOiUseMmcOA5noPihAb4CYKCaZDYAKmHpEvuIAs5Hyg8xGmI3GNI5HH3cfPn1KftwRXrQsaxe6jwpbp9sjyrWabnfzszqNCl2LSLQ1fFhS+cEi1t3WBpB&#x2F;9+ixUuhOKYclovREpOM8OmOIiI9cUg5DG&#x2F;LQmimqrBkGBFbKobyqPtY0PFg2qaMcLnDg5LhIMRY+Uw5rdAtgkNnLgUP6tOF5sv3A9C1Z+s3S8MqUXkh7jXqifceQvsMsmixM30C+wvgK8htSeiH5rTRkvpfbngAOJAmjtWix6zjXmmKNaJvAQz803wPpXFxdnrUUz9X6NewjzWXXO05UMsBGSCNcx4gUbQS0g&#x2F;sEcgI5wmyEYwS1I5QV23cwTnBOJOu2PYEsINNsGvKQn96P+Zjgb&#x2F;&#x2F;ZcprYGicBgL6MCCsl9TRF1gyGfVSo0vDRYJGKr4z&#x2F;bGsDyL8kgmxipyVKi8ZGZUIE5TD4yx3l0NXogbVRQ1oLlAgid5TDFg0VdsxMOZxfR22keO2Ol0ZNTzms0dUow4GOZw9Gt4MmID35sN8d+ZxqpJjSb0zjbxxS7TTXkZzfmNJvsPQadcUWQb7C7HvUIUtaXSLGYJ90tUXyvLi4YIYQ6IByrvXqvKjGC8U2dpVilU+tpuOpfFjugJkRGuW+gyHTLUueg96ECVImmSXlKNsyI2jzU8AzXULcJmSILjED5jRNyZV3U&#x2F;KXn9nfPvRBufrGyXpUWHjWJ3xqWVAR887K6A9XGz3WcbzNN7GKDSD&#x2F;Qpis4rlDbdSMNX32og15QjnUFcqhO5g4n&#x2F;g519tUBqPdc6TSRRuyNnJqJzsJmOgYZI1y6F1cupPhwyYgJ9t5SkTaJeNLYnrhzl4taojfYKk0VNILaS8FAF+R7BtS+h6pdNlGey2&#x2F;RzptfCK5g1lapMEATnL7lQinn6w&#x2F;AfhirXAeWhXw8&#x2F;qZnQBph43tk6c3ewtAA4CnUqrNJF1kjujRIoRXqPqAnGBWwNK9gOZUznnRYyMdNAc9w+B0aH9E&#x2F;tu&#x2F;Kr+9+lEzvT5q0bk0V3yuJsRMZKTHbkXG7OQz6wGwB0V2Cj7asusNIP&#x2F;SGiTqzFmk1VWlJmlGBCLP0l41XSwNnBrZWaEcsnwNHkUwGAsYJsHSCeUQYQDmcOwq5XAyTCaMLYWtaucRNO2VeKQncngelJ5pw0tKqTZXXsg5GsQwfGdKtab4DNoLkn2D2d+i3sgy5M3XEjGGlBhhTXGjfUxcDfRaCl3nWQwz0J1OVGu2mJgbTDYDXzoJx9RHp&#x2F;GZN8ohu46GEZANkO9Bc8AzaBOoDMKjIMiQOKsgWPkwpIPI7ScoEi4iB5Aym5lrUt7&#x2F;nqfPQZ6TJssnUWGaxSrWUmSqsLRWokSsRKGN+SRujewNIP8xVqMclpojywFAzLYF9QCt9UMWyqEVyqEtKIcxGM1JrZOd8xEp7Zp1A0lkBaPm3YBnGY6cFplnsXYwN&#x2F;LZx6fvenrGwG9mwWYpIFi6z&#x2F;bCxG+gvZYI8ltJoV9gfIbFSA8s7kOzVwD7Uo9LbXrbeAEI+0YLunpi1502Ow8S+yutR8MFcAo6p6csOj5YgCWWQEkQO6iLBJeXDGACmRURY+hE1u3ABDBqlrIR1A7gRNok00TDbsx+fHrD9Pbd8uGbCcLVFPmeqLAHwrO3j3Ppu21tAPn3jyJLSpQ0Uw73uQjjJoKFctgyJPcYncMsLZaYcPTphHLIpk6e5dilAdPxs1EOM4SRhiOEQdEdPaUcgjAmSwlpN5JPNvAbad9Ya4fkK0qUWBoqLzD7VmqPpRljESEanyP9DjsDGF&#x2F;Aop7DhQrHEhA5lyPmkIjz9M5ippHLuqL6dPvk9xMcpDpFJMxNn&#x2F;aArs6rOvJTRY2NkGigxgB8ZJBHEDuQE8Bo3AQY7kBWwAwbB3CkcZRzB+IIsylE5tNIYGfExGncPR95PE4+fRimlNF8jf6IqLCnltJLXdznz2VbG0D+3VfrZFfRB5872dGoCSOq44Jy6G2HtmLb2iiH5T5tjLu5HAo0a5TDM7DWMtjyoBymIY27RD6b2XMRh&#x2F;ge9D&#x2F;7RvKlpcelpkizVyS8wtIrLH2PWUeWYW97QeJrqHenl7Au6LLeKsWGrhlzFsydjuU02t9y8PviGel2e7Y1d7qm1VyILN+DV0Xuyl2y+DKlAbCR9AFmO8EngCMzR1kBQnEEeJRspDTCtFPSERk7Jkwi9nTPgE&#x2F;FnWeitMPAPDqm17fJkVxTQvC0L0WF5ReufA5trLOPOisYllFPT8S027jYG0D+hRFk7UnX6mFSiOdWl8PJUjBeOINH72zXLLZoHeT2CuE8mRMMgOUJIFXKYTYVN0Ifnrh&#x2F;5pBezNIrYw7xpUSKdfzmhbRvAF9h+AZLLzP9j9+Q0jekcjvtOSJIfgP4XCInsAcq8nK9se9anwAie5Ds0+&#x2F;TGuXiOVdS9v6uNtcYAwwLCFbZotoeVjdyZARgpuwjyD2gieSoKB9kyjKArLBoyCHxWy5uOWZ2zEuLusSGWWB8KXSHAb4&#x2F;mPBD+v27Phor9EpU2INhBULT&#x2F;Bm7ET6iSfp6whmne1sbQP5lKXbTdsRMOawuh30kdY&#x2F;LoVpbZ6Yc1vk+L3ax7jlYN61+WcRzRXyY8zXvxmEYnxKGV6bgPAP2EmISjHojUBkwpdGCOvQdQ93G11DcwbfClnkR8EyzZwCpAZCwmk7fcWa5L2rsgXIBnKdpNpflxh5IF4SbWUC2DlbLrEz1lNCLGmC2j06ZZkNqoa8IYhYYK3VKQTPfvmj4EIGMQax2Mnki8+5Af&#x2F;7wfNj7wa14KXaZQANC74oTVgBwDBEUH9CJU8yPpUfcSg9bXubtWN0A8q9OtcNhCUlx1OXSlGlJX601VkrfCeXQgRn8aAvKIYvFgmvuZI&#x2F;DALqCUUMiy&#x2F;HkRgC7JxueacMrWSLASKVfCLwUEPxeosbCcLHXoqzzjU2CLH6PemM0aEjuEPqHJ5HahaLgSTFiFehqHH62eQU8yfWI8fLZa&#x2F;X5iE4+7EShe+Z7awQoSF7a3oI89HRi3CdH8E8HmNs2WgYxgdrDFHOVhuICzgnME4H9IOSnT005MWvQlKYKvWWkp6j0TEPRgExdQ6ebHaMDqdIKs5rqz2nJZVsbQP7ljRp0LoFT8WcxlEaNF23Iely7Qna&#x2F;iUlUvvU55TDm9RS86zRgmt6DEyNvquAC0rNsHDi8KKUXtHlG+4ZQ2SlyZEV2DGVMJwa7X1qjxkKyDAwhW6SWUu&#x2F;CyuDkzZ+2y09T7AZyXZTG7raODdNG4XtBitOU+xqAXsJmXkEKzlqYsBApDqYTCShSbbMM+QSzHeWThGPpWGcQI2g70CeQR5K7YNRogjiCGgnsREwghpmVo3Fw2+0&#x2F;NHFPPz7Da91QaaW7XaPJrPaTroUv9ql5Ysdu3w7UDSD&#x2F;ARo1JUK00smuHO1shOXiKV2sCrIcAzsPmEI5nK5RDov9gjT7ljhE0tLTsHsysxdZegHthWTrQkcEaOHqx0inafY9utB8IdMrUv97F0HGY8e+C3yxccKVSG8BZNbV&#x2F;dCJTixT7kXz5ioYnozqXIs411g4beZydu&#x2F;pRTMQJcORKHVIcoK4I3UUORGYRI4gpnafUIkbFaLrE4gjYBOJUcQuuuOaSB5Ndtxljdkx&#x2F;XiVW52uLN40lmd1cKtakDinIZ6CIRfSaZw52tvaAPKvadQAPeWQjqa6bRKOZhgVZl81nawmXrXmGOm01ZnFmG9slMMyDK04gIOAEY8fPA1DGp4xpG9geo5h79qd5rfSkAnQrCl2cKWDAYMuqmSpSSa+lLnIpwhh1wDn2jYsGttL5e9+5OYEKC81b26B5KXXsjA&#x2F;6wbDy3fULILMolzRasZR02AEvSlAkVMBvSOAEcQYGj3sxoBahLiDFCNAsB2gwtu2oCiaRkA7unKk2j69f&#x2F;rEo2T5clS4PA9xtlhozZslGHpRIs+77TjdAPIvhsnwoTEM7kgSDmVqBPKmvFNtEFpXeiYglqeZgbBu9drAqdqQlXKYM4dhGJiGZ6ThG9MQqTLw2mqIQKH&#x2F;pVdCRZiWryC+weqYj9VI8VsnYPuKiJjGRbh1Jz4uDmNqCZK6kvOuNG&#x2F;OQPJiyn3ltdWZSz9piplDnfBDWFUUcKwkd6cBGIE6D1l+kkeA8zbDEc49SC8d7glmR7jvC1jGdsOEzBxtlJwJ5HGCf&#x2F;s3Tp9ppiGupchtTrIAYT84HgrlgO&#x2F;QLBrax7YVIjeA&#x2F;MtrkF0SlzyuT12jpkrg991GnVAORcDKrGOl0Dm8MWrC5RBIw2gwjmm3e0EaXsPyFKW22NLpnh&#x2F;9ihpVlq513IbXIlz7isqeIZ9o3M8E8T5BXQO2C+IRutSn0QozRg8UDnUmc3b6Gshz5K6iwejEMNpAO3UuylsRMpBogHEHVaaMjgj2UDBsGj2RXpo3s8BFNHWmMvw6hdhF5XnT4XTA8tM7nvKLNCUdZyAErPiYz4IVRbNzDMk7txNBI3UfE+fHbGsDyH8YxKw87GzAmJeS&#x2F;wvKoQNMbJRDVZdDz0iaxXNHFGUeF9xz2j+&#x2F;7DkML7DU6IEgvoP2CvC5a768wvgbwDnt7uuLxhgIJ56RUhkI53DWjOkaKOuh2uXq7Hz1iv9oHyZWoLKV5s1a9ElejmJ5GuWrWGRrZtAUqbgFolQQrq8h1G1HsIBidKy9ux68a1dwtWdwzIXYlGH0xuUuEmmwlAFOnPLOsk37g46UT5aL9m+JCqN5M4&#x2F;znEaFvTf2ormDUoPcIsgNIP8hokiiyEfkuVGTo5OtRNh0QjksNgs95dBgOGqmHNYok8k4piGNaffEIYU2YwhEvBZ&#x2F;6W9zlMiQJwNLBGnfQMQ22jPIb0ypmGgFU4ZRb9xdjgZXLFV5IfVt7L5LIzxYkaY5AUlcS+d5IejklUbOaWNmQVcJ&#x2F;ndhOHXacUFBdAPoBtoOVqTOqAKMjPEdZybtKPqudLOjgSMbI&#x2F;G1ifQRxCgxapXhwR12ssQ4HDlOxun9VUesRYX9V2KnJwGe8LUFTw4fHJ62Ls0GkH&#x2F;xuko5LC6HScCxWTkXymE5SGfKYSqUQzTKoQAmS6Ol4cnSEGM4xm8QX4uvdIkWESk2AijJ2pCxlmaTpcaYwiYhHmv7JiPUj+rwJBLkJYZMB0Z+oeh1rX64FkneYh1eUgVae23dnUktM&#x2F;MEMBtkRYzYS0Rpc&#x2F;rPVIRFpKRozIwkByQOoQKkncyOSBopHlWoiNHZxgjwACAFKGIs9d0MsyPkExIzpMnc9uNR+Z3KVDHOxAkrBh3rprxEN4cPOQCxgqI5VBwqt7UB5F8eQVbKocpIT4BhoRy645gGjNVfmlpoQ85DJmod61nFkUZyZ2l8YhpeYYVPXaJFNh41OhC0l07l+3uxO4gh8Jpip3AgLAerLWt8p9YHvCOFxUK&#x2F;sfeROcNE&#x2F;YlfxAIQT8d65hdXbW6logvpAOhBpIkRn&#x2F;iubCZ8SiRlIwyjpFAYN02QTRCiW610hLiDFOmzsBMsQ17qjZhozIJN8LyL+iUUabjnQZaf35Q&#x2F;XvUZNPK5BinTDIJddOjmjcpawkeYE2lKSNmQctoO0g0g&#x2F;&#x2F;oUu8magUgufFaXQyxrQ+oyO501GaJjrXAZtKe026dhfMUwvIDptYsOq5rOa6UPkqWDDb5Eio0XgK80fgfTS5Esey2jQK+IjqytR3q4PHR9rdzYOtUn4KhL5lFdmn2JSrhIv3kHOHYAeVKTa7NYrnn+0dTKruEu2LhN85sTUeZ+UmvYBKI6pEwhS6UWaa66Pc50RY08OtlBIqSKOvnMxAndJ+T9IU3TPk+fTz7l8bgAxUVUWJg35gZza2AYF2sSaNvaAPIfDC1nl8PcXA6FUNPyNlAemKBqP9odlobJJ9sPL3sbdt8xDNFpZhn2BkrXGt&#x2F;mSBKRTgNl3KfYrLINfL8Go4ZhhQDu7qJYPCJ4cDev+s7nuxXFrgnytlopz9N&#x2F;aT5bEUAimHMrj7S&#x2F;Ue7DaqpVO9tWJ&#x2F;stIkSVOmTxD8SsQp5BTbWjXTrWRR4t5iIJTTI7AspwTlDVkfRxEHYvH3b8&#x2F;PbpP&#x2F;&#x2F;24Smz2MTaIipM2WCeELfPJYaqi6lSQyU3Js0GkP8gUWQ9GBvlMAG7Y2nUcHY5TPVYlYNIRcNHcDjHYZfM0pMNu1em4RuQvgF4IYpeIxAdaFhEiOQrYK+lKfNalL1fmSK1jm53BUd7KjJlt6PC0&#x2F;usCVGcguKicX1aT7wkNtEB1K0Zx9XIdm2SWkuwXESf9W&#x2F;5PPKjlaiVWvjoFM1IIIulNDGRnBRd6bEoHO1ozPI2EjQWDvskaRfzkxoBG2m+A+woaAyQ1L4qmSdhennf+TTiMOSkNFmLFNE1Ymrnmtap02MDxQ0g&#x2F;wHXrMVYhFClMOwCYS54MlhxOURxOcwusKj&#x2F;JIHZOI7j&#x2F;gnD+NpYL80Eq7BegjIY+o1FiKIo8lR71dqMCRuEVLQcgeewL30AHO850IRVIIxSAWbb1VvqPfdEoLzyurjyuk&#x2F;GgNqoUKcRWcewUJoz9Jmb3eYnuYxKCaSgH2Iq4rpTaL+HwjiJ4GQXaTQVNXJAuejdldS6EAhpcRYtRWk69fJjh&#x2F;Ew6v3Fj2U4do4KEeImVUVq&#x2F;QvhSclhWxtA&#x2F;oURZNOGZIx5mxcwLLWtnIjxEATdefylb9SkYbd7Kt4v6SXmF&#x2F;FcGDABkORzEY94otkTyKcSMbYLw02w3GbxO7CH2XBTBecRYDytPV7CO115XKvx6f5UfK0Jsxjb6cDx7KEl6gqD8Koc0qjYdQ4ovpvz+ZpOAZMQRgjPBCXWVgpV&#x2F;gjn1L4PaRWhKFQKoYlMZZzLqRD0cKeihjhm+XGStOPxelTIJpnXAPehesa2NoD8O8BkjUas1CEnq6M&#x2F;wpGz3L&#x2F;OFBmQOKQnDOMzhCeATySfQAS4oV7nHrQnxvYKkPvycwZN4xOMzzTW+4wXI8YzrcV7osaTIfCT6FG6cL9rKfc5nK2MDHH9PRjvfOm9M4SKnWy4UM7q5mi2XI1N0&#x2F;4O+lpkgrAvJkNFOBcOMxQdSQ&#x2F;JTjljLAGKAcYio1Z&#x2F;0ilJpEOMmiTcQU6JmJ4n5o8xu6g8fwbF5eK0KYXzkQFtEeQGkP9INci6i6aCG9mAsUnrn1AOBcidwzDuOe6foPwE8Bmw8jOiRViAJsBnEjVafAIQ95nB8gnWRZSw5wBVcE2k9zoonk6F6xzoFpHfnbJkZ2bQddDpWk59X6Tb61JcfHg&#x2F;62mITlpPOaxeNdWeQZ2orrMMlQcmKhwc90ghmkshy92RKmumMGrkEySnNAEaIeygdJS0AzxHJ5zHYOxwB6RQ&#x2F;Uk8DoZx0DRNzA4mXYoKtdgHefVr2dYGkH8tWrLrZBeAJBQuh4U1MzqQzEhLe9rwBOkJwhNoBfgUUWMAYWyjngtQ7su2JxBPjIhxD+Kp+FI&#x2F;wdI+6HEFfR4p3J+msTrpYtwY2VlV4lmjFN5VCL0PHMmVSPNarVKlzGEsNgy589U+oRuiu94MvwofUCKdOxknJAsZNGmibFRSKP84dtGx1g7QEdIEYEdogjBJOsIVohhmpeONEQyfmx0sS8c8UVMnhHceHZ7Ul0UCmyfNBpD&#x2F;eFFk7WTXRk0Rz7WgHGYL+4RkaWTa7WGpRIn2BHBPtNR5P6fZ2JWO6K7wgvfRNcUeZjuQeyQr221fHPkSfrWj2RcT9Ug4ogduuqNzdNqEIdfvwJO6JK5Ekb14BZfgR2cwbIQyN1ll0Agli3YMPRRGwpU7xHGFidKk0CuZypjPBCiLHt3qiCqPMWBuE6ESbTK3pg6UBTlhnkTfHZWnYXJPJedfqKDXRlPvrU1shoYbQP5DrUWjxkPZJxo1oTnoyTAegUMyaBjsWWnEYPui2B3gZngqPtO7th0FCAMw42K19lhA0Qpg0vaI+44Pz3vwxhjP4x&#x2F;I1Vrlw6+HNyJHPlBH7SNNI5AtZrl7S9iyrbf3jT5LQBeLwK6QEsE9oMzEo2A7Vt9sY0bmBHkmkVXqklFv9OhsU2WbHJSzno0IIZkAaaDpRaY3TJ9ucNkMiMBS1acGwEmcDb62tQHkXx1BqmvUpFKHPDTKoTAl1mkSM3EH2r6lywX4iC6tZkmnWaLLmGOMNLs1ZSy61i215nOJLtOXQOgWOJ42YLQEPOlK3fIesLr4Oy6o93AdPM&#x2F;ENFaA1oN2qJo+O8NeFyp9EsyptJe5SYtZRJrHXCQtABNMwLAHsoMUphDlgXtUMkXCS2fdPQDQoj2DuJQPrzPPiYF2FWEnH5h8T&#x2F;rbqEOmWn&#x2F;cOjBMiJ+zS&#x2F;hWhNwA8h8sxe4ph+ooh3Wa91nDSKUn0BrYRW3RajpdfscTWNwEaxMm&#x2F;GXKOE9cgmfNSifcL5TA7wXEe1LtVXC8kguf1h9P&#x2F;bFPX9OqVezaS+f1qPEaTbKl1&#x2F;PraWZZsJB2rNlA0eFkituoMEqbtccK&#x2F;yk63gS0K6QpaHAieNBOZJfMm64d4YAcromQwz1LyARzKJBjAjDBUAbQ46fRxh25m3TMWT6NMMw0bJW2uWMqFh0bOG4A+Y8Jlc3EK3bQyYB9Lmf03TBEGpyekCLyK9HiC&#x2F;uZxuIjQ5b7lJlHptLEKVFjzDxiX67vL36XjwDjGUPm&#x2F;gNt0aC59LgL5cPrjZcr4HitVolrf6uOJ6JjzljURtrrLypFVjjZjjbqQ5TRxdo9T6RgI1xOYBI0gtgh40hpJ8dU5idHACPoY2nYjNGw0RDbWTxtNACFpWMYAe6MnF6AacoH&#x2F;7Sjq8WJzfyj+alb+betDSD&#x2F;gaLIGiSx2bzmcsMoJRuG6FqHx&#x2F;QeQp1ZrHXIaNCgNF&#x2F;M9rUpQ2tD37sKiESpTQJj0Nh+sSuzNrt4mlqfDHpLK4+&#x2F;ixlza9ToCqrySgR670fApYDunKYzxnhaYDin2oTHPKOV8aRUHucRFNKYxDQAGEmNiu9lh6yJxhHwSW4jgVHCDtIx5lQ1wRXsHARoAtgXm&#x2F;QJQBYwkbYbwEnK0xEfbkEuREKCgTAWWKRFOcA2gNwA8h9uFRMvX7gccnSOGNK+RHq7SKWxh7iLg0HRfY665J5QgGMZEI&#x2F;HcNcAFK2bXZ+TFwGHJ3XBa3XFS2m0n9NjzqJFfaEBczNy5PUI9FdKCD0tEaUeWecdK+HFBPqsGxnzkQZZGbQxQVMZFzKBwgCkndwnShOYJtAnuU9AyjTV2ccJ0qRo0ITIBZSLj01QEUNQPsMQXW6ji&#x2F;DBzJ+y54Hm7MBQRrgx9jnDNii+AeQ&#x2F;VgRZlRwr5TA5cEwCmEYwBZhJT3O0aE8kS7OmMGWMzzGAXJkxFg2ZiBqfYfZEoDZnngt4jlebFOgpkV9Io3+VR32j5ngznb4FhsbHQbOfyyzAyPJcKu6SoXbGAnzsZiDLeUIxRM5kwc7xQsFh3pE2KTxpJpBOs6yoPZbh8RjnobsQoz+5FDWn+KrowfVGBjGRFkBpdHLIrwccPwb&#x2F;zKlojZ7MqVrYr29rA8h&#x2F;pBX5mpMYSh1yhCUbUpl3tKdCHXwGbE+zfakxPjcWTEodMNY6oz0h8Zm0+b7RvHmOOtVpGZRXE1VV0PA75hUvAKBuWbHeDZzCXfOPi0j4D4gmyeUQfN9EKr6vKCK66lPwWoP00GhsdcrUE4VSAn1PegYti8pw7MOIQxPEDCGLmMpw+B4qTRpoV8QsolZp2JE8hlsiM82OSBjT8Lwz&#x2F;8xZ05QU6XUCYcUJc2NibwD5D1uDrCuJ6bc87Gcwq6wYhsJOFaGoTZiIEJ9BvsR1vlZzLsaIT+lWl851FPQXbBleAged9DUvpcXSn&#x2F;8p3RMxPqrecylKvHeUqXc3NBYaYh+SYaZJ1qaNGaDcGY7NlgiiDTGwr0ziKCuRI0LlB9KR4C5Sa2RJRxA7gsX3JgbNy8B51CeNGYk7GDOGNO0nTfspTMSKTBAiDFULcv+2HZobQP4joqUIe9W4DwFbe4Y6Yy3wmSygSQT4mT0jxTaWn61RY71ARTBuYqRnNq3mIynyqUDF2u8rXtX3l2EvRJe90RTvONvwESfFC6&#x2F;hEkieqpV396vU0LaN8&#x2F;OEgpu6Jk83azlbnoM0KnMEfQKwD+Xx4q0tZbhCNDcEdZ3QMcCwptUMMI1tU6TXlklGqk1mI48ZyO&#x2F;5cOizBj74UW1rA8i&#x2F;WxSplmYPg7E0WIT9TBG0ffhP2x7GPRP3SGkP2B5WWDRmu5kxgx1phWbIXYx9cFd1rXhvSrkGDg&#x2F;nYV9kwdxMq08Ebe8N0&#x2F;mYoMWq4O7C0kHLKLcqkPcMG6F0h1WMvkpXuzZ15s+WHNIAZ4jhSjlSawWLxqIG2eYeiX00aJABHEuDLsNKoyaAMaLICp5mu2Q22dtxIgsNkdVJZwPIDSD&#x2F;QWHSgDSkFNEfuINxT7MdaDskq6M6e7JQDYNPvWNKMzAad4TtQOwa3xqoNMT0JWB8NI3mWp2yalpWa9o7sbM1jHkZ9b4kqvGF2gdPJsd7kKzvuc5F0os1RklcC1cb5mGlES5fpbFTHW87NQ6zEcl3yB4ptWOS5xj1gaLOGJeJqKM+2CG8tUcE72AE609O7THSjsbjmIYj5Idea4PaAHIDyH&#x2F;ICBI2wHahqMOSInMPS&#x2F;saHbLOMtZo0orARAx+72gFOIsoBYAAV+OeKEIUD4Kh1sDxFqjpNNqcQ0498jwXwYz3RYf31BxvDoavxKsNEM&#x2F;rlqTmURmvwGjFilWAF3YNZtpigNMchRYBIIMwyriDa4JppDBA5SdUZlgxgRyg8MsGkOKnxhJRhpd28HkSFD8lDQOYMBWieP06pPVG2rY2gPwLAZID0xApdNrDsGcKYIyOtdWZxT0shWdJ4pw+G4eWRofwRJ193MGwK+A43AuKvxRN9pqPq&#x2F;Pj&#x2F;PMaOuSvF9F4DnoXn&#x2F;I0Cu4iTJKhCVlR1LumjSMUfur8pDSfRBbVAhvoGgAfBA7wAnQqP6kBYgrwU4rvWAlCApliOl2p&#x2F;NUymEQrKrwGJpMmyiep6vVK2PrYG0D+dWDYFeQ1p4+WjCMtjUgWF9oA4xjgZ9XgaYQVsCMHoPwkRgL19qHwqseiCj4ATOCJOu8jlcNTJsw15syqWvgVHvYlZfJTIy3cEQF+iRXz+G1nJdhe7d0Qw9+Nb118bNgJ1KYaPWJm13hRK2&#x2F;lhyInTiQYE91NNKNkCoBLpS5DiEbQQFLu1kqJhEVxWzMwtt9BDoNp+jT&#x2F;OPjSqGxLsjeA&#x2F;ItCxWkAfIwJm927h0iumTGlAWkYkAL0aBxBG2EcCyAmsl5HEUrFDiw83SpQgHJbjHiMxa41PRoU6FKkeEuxZxVBrmznZdsE3hzVeSCVvicNP7mdVx4X5ly87o1TGzRFeYRC4WHrZHCcMQ95irphY2nyGFLkbOBgIK2oYaQicGyAjMYKoFYiyfgJDfU+BVwHGBOGXfJ0mEArehobOG4A+ffAQi41Wi0BBziOuwQfDGkqFLUJhHGHZDukQhlkAb6oHwXgFQHccmmWoQCLKG67rT52BLhjPP7XyLVfzrhOGjN3p7+88Tt+mT5+Czx5x99r7oY1NWi+NCuCwU1jt+hEOtbl1RbMzBBPA0vKzAJ6YJrBjgXwPLaLA6VB7kOAoyLLqD+BYU7R02jD7pjH4VgkNFone1sbQP6xZS9eEK3uliGMPlnECmQkiB1SKkK3KOM5AXyo3OngU4&#x2F;dyM6+AiKJuRaJrvZYQZNXmGPSdSy8Gj1ekDKTfg18O8vXuQTY6UX20mP1g+8z8YfNxPA1K9sSPXZVxw4IOxvbM+&#x2F;sApSmog1ZIshqs7MAyJgcJ5hgSJJGOo6CD6XGOBY7hgG0AEFogDCQHKTSqFFr0ARARkaRICUKw8jBIHn0kTaA3ADyF6PC0+t34UBT6FeR+AM0kLQ0YEi7ovK9Y9QNd4sLuSOxn9PnqsbD9jgQI8wWAEnw60o9a3XDi8PfXALm4ml0OQLVSV5+Zs71B5y57gXpC1Yt7L+8CyB5cUeRgn0IzN40laZoRPBYeuoiAjQbP5qIaNEHuI2UDjAkRmNmiGgSg4SBYhJLFGnZICa6EsTQxJ3rltaiUiE5xAFmyDmMa7VpQm4A+WCK&#x2F;Idkc4rOJeUNA0amMcAxOtBRY8S+ixR3MIvtZmNLrc0GgANrysSqB9jqlQPjerr5JrsDXGu3XRwKPwFFnYeDelS+rOLkNQXwRdj+i8C49hx1XOfK61sC64qxWKs9ls0dSBKaQdDURYroxn2slzwiYEmUQSpjOrWu6AmA0d0AJXoy0Q1uBriF900YLcDNBI&#x2F;naPVLkEZzIWE6HsGNib0B5B8YFX6lIkcBYwYSaGZWO9Q90M21ImAgNLRu9HzbSNYuNUMgFYxmjWEHcQcrvtbXIqCLDZcLmo6n97klcnsRhGrNYaWux2vK4Q8yYK7dfmV+kvfc&#x2F;+SxrWnTK483OmEAYz0zUjOaVnzkqUZmD7gSaR6gFl3qBJcBiapGN9HxNkZDx1TVMQxW5KJsblGrXI+fTAkKVd+tgb0BZPcG&#x2F;s7voA5Q2OQYLaV5DKcAnjCC6tPkWdKs2ioUx0IBT5T2MDyXbVXt5xnEc6k73QRD3QOO9wLrCtjpUpf3KjCuRYg36H+PjOzcy0rUHRRGnYIkTmwjsBCl6BBxlkqrVUyd2EzMNxlESgrZHclAFRsuWknkQ1ySMe6D2sQJDmupenO5LVL0xGFIPljxscWfGyVsALmta2l2MgJmI20oplpVrYcBbGG+9QyEYo9gz6xKPuQLwBfAXsr9Q9ACKD419sx4vuER0NaltHuOYG7XKq+A5EMp96Wi4C997idAJ6yn7F9J17lSp23beSKHdgKcpuUMJbCsSc7fA+GWSJnkBi+D34YEZyJkmoEwle&#x2F;&#x2F;jDnTmjRAbeiUcR8bOOwM8jAP29YGkH8JPgoY05CQdk+0IaTLtJAvewaKbmOA5p5W1Xj4VMy1omFjnJXBg01T2DYcFuhSDzZeBrbFMf4IFXAVYR8tcXwBCPkFIHs0erw3vV7ch3NTB7boSuuEU77obosnNcyz8wVb53nuQg8dGI5lznEGR2ko87ED5P32erFGPwQGmiVNPgnaypAbQP5lywDbFwHbJ0j7rimzbyl1a9hUr+syMA6OIV6BodALB7BrzLDOx50cuZcGtE&#x2F;51l8uHOhO1HxQoeLB2uHN7V9t6twKaO00NT4X0uBC&#x2F;af8Ts5Ne52re&#x2F;cKPyUljrEdMIGNUhiRYwVQ1rlJWLGGteiEy0p3qBhzK81VH4cEunubpNrWBpB&#x2F;fs2x1sRn&#x2F;2VDSkEFlAojJlgysZPTQCaalaYNE2gh+wwayaCRkWUouLgvRWXKVg9jPhjp3dJxvJom8wFQvXHbvdasX603XhCiWE3L7wFldrYUXAHW03lNzEDZmuF9CHmqOVlmuCkyOtp1XKcMjKr8XHzdbShTi9NhdCPLrJkXnrhhom&#x2F;1xw0g&#x2F;xQoLPtVB4ZsvvJRfspAolk545ezeJjKtR29zqhJhBnLfYNeRrGMZ3B+DIJjrQKY&#x2F;Bpj5o8f7tAV7NXt9NpOo7A&#x2F;MJ0mb9+NvBtYr95+OrzOlQ+9NHfOt+NUBINoTyMJjIFa95i3JCGSgYrtxCyYAe5xCoV1NWUS8jKWK8BlFGgubVXIDSB&#x2F;JSyctbhXgFAUvOxh6lhoMXRBErQQFKgRISsoVtCLCFFIhWdbo8WhCBeMUTdSAi0Vb5lyPz02p3Ft0Plsu9aBULeB8XrN8YKT4iPp8D3p9DVg5BfHh8g7ouprn&#x2F;MMknM0WbnoPI9mibC89Fbu5Dw42g2kspyxFyk1SroNwj24CiqD6xIJYcj4k60zNoD8326KjCUYegHDyhI79XCqwNiuG81gg1TmG9l3EzH0Iz8QhmL6XpV5BoEDIzVPqCl4KbwTLFqAN470K6Hi8qYbPtdn2++tN57pg11Opx+NGB+sL&#x2F;KR57p3jrSf1TxLtbl8rtNJgf57WB&#x2F;SVzG&#x2F;nOV2GkUHlPt8ShYgiY3DqFhF7LFPe+IOwxA6P0cD8nFLszeAvJYir0eFqiUbroBff8x3B5PIJmYwZJjYgGyUOHKuPRZJMo6k1WHwrkPJgf2wONBJoDVhitvptc4P8NU5yNUBcF4AO8xNilMwuUgb5IoSz+m2B6M6PQBsuNF3+cqUEU8+5C+m6GcBec+o0QnALd&#x2F;n7DfLk+InSRpNDkIl3fYyLG5R1yYH2n4H7HdhR7utDSAjQ12PCtu5+VJUuJDbZwFPzqDYgSMgmhfmy6z8XJkzvTx+6jrTPasmGjhWbouIMYEYCKujGnb3kXcPg+ZWqtiGn3GiIM4rEavujE7u6SzrHHAeALaH8O+ujjgvn4luTBEsyjenJ63ZZpYldSak+GmVHWOxzRHy5aDRRLkZVIbHi2aajISMoUOJMmAOg5HcDxS5dbE3gIx1HJcp8mlxmheiQnRAqH57N6ZBAKmoSJvLQvCspdKJxjTLWC3GdEpUiQSL+iNtTqeL1NUQ4MiQ14&#x2F;n5FVQPEv3tLR17g&#x2F;GPqpbOYjPUsirh5TuRCWtp6fXRn7uif5Wosi7qYRfHiBf4VaudbYXpmOYudv9&#x2F;qTF37NyojR6EG+KmTUZ0kAsjyNoRnoR5ymm1yajF+YNW&#x2F;sw6pIpmaaJG9dwA8h5t+VJinwSlaxFhOJJSFBEpM0FK&#x2F;oDptn8aKKQHBYAaKns5DHH2BTBm0J4iRyt&#x2F;R56joWvzSJYYZzT686p8CwK5LVj90KD4ZKd66Vo8lFfmVtAdJVeyMfCwXsbMw9NJz0CIPfRLBdNlr5hc16LtK4OWZy2C32QNBiIXFzDWFNoI1yRSjsMFg1Bqj4WRiKBljrtoW1tANkD5bWocN7RKcA8GomnQMgTycIWLAikONCsT5lDXKLWGFvKXRR4qPn2XsgCqhYLJaLkWNRZ&#x2F;rjT&#x2F;urICW&#x2F;PP+pe2s0VsLiHT303mF3zkuHjdcIvf8KXBukxa1+e1mD7z9JOuYow0AymBIGwAoSOUPThDHwwhTQakYSSkgtGIUGWGIrk&#x2F;aiZxQGwoeQGkADyMNxMkXsgbNRZ4YxxIK6DTXIlkDtBA6WhjeXM4DgCGJt0mTQuQJClo92zZsCui91Jml0DKd4ZMX7l2OdKREqe1wm&#x2F;0rj4EhXxzsfoDpDmpajwkVoq7wRPXa5Hxv5pkKWoM2IeFu91Ho0JXsbGWHxoiKo8Ps&#x2F;gAjXKjG2EGcyU86Z5tgFkLLdo+FEFDNEBoS5HhdeODXV1S&#x2F;OJgAXIteaMauQ3G2+BdXsFvXkUqHa40XFv5&#x2F;pjHBiXAO6s06uLL5h9HXIBdDitgy2FFewKcNyTxv5BPOqz90RexMA&#x2F;Bowvdfj5hcc&#x2F;9Ak08kDQCWmwwqxRFwkGOLL9nEE0tVTd0bTtY04SxLSN+WwAWdbT8Twq7Hdd8fZxeP1go4E2AJYgjFKbf0yd5mPqQHFu0MxjPgvQnB&#x2F;TUnTe9QJ1JeO7dbgu5pD14AdxAzOkP&#x2F;6AvJZeX3xdj6TVp&#x2F;Oc94Kj7svAL&#x2F;9ZFuZURH8qHOsZFFmHvsvJrvpWnEvhVtXezuZVBhzp3AByA8go7+jBqPCBIEcAYSmBqZgkoShCl2gxmi61ez2Uxk0vPNHVK2v90cYSPVbHwvRYoKIl6i&#x2F;k9blus3Dtg5BWZiVX&#x2F;rBuRGePguRaNLvaqeb1RtXNCPfRbvUDe8c1kY+T5vb8aTbB21rADAa2Y&#x2F;4ioxvOLpVe&#x2F;7wXX3yVIaLlTTN3A8gvR4VXoKAOkTvisiMY9aLqIseRxgp01dq1gKLNzZdeJTy8sUvE2SLHoUuV+Hj6ttJ51pXHPDIzeZaW4yaQPYota4rjIq+PJf5qTfOPqH8uPi9bfkDsPzeenzSk5dxEhIg1mmQbEq9CAIboXMeJKWYd1aXntTZZapJSMYkQaLOq77b+2QHyUTCsd6+kLqEMl+O81O6CJXBUrTHS0gx0HNFqiJyFTsnOxlPWakPzdjuPDPRARrfWkOHSJfAMYO7kG6&#x2F;1Gppg7B0D6GvVQi6UkC5yp+8Gx2sR62ogrMeemFfS7TUOum7UPU6mCBimg31qXT4dUqYY41EXPc71x46euGDicI5LCZqBoHKeNnTbAPL+qFAnoLh22NTj2CTICIrE1DyNizhplSsDQJiExFm6qqn7FJv5viBfo0VbKPl8hRN3j0DFPbKNq7YC10B2BZTWbBZOwfFugDulOGKdHdlTIi+Bl+6oT34Jmb9Yt7l8X56dmYoMRciZuYAOMpuquc+WOL04iMXsubtv6LYB5BIHBCBzmSpfih+s7VMsx7Ha9O5hHLH7PMIMJlZA88Q4PacuEizyZEyFDdFGNQTYkqfdUqOTbXdENLoNkjc72NeA9e763BdrjJcaLpcYPmtR4d0iu3du&#x2F;MPTdD12xz7gLkXI9rpcVRCX89kr2DSEF7k5XiiJOpMl2++f8wZvG0DiwPuiwqYt1YFhm4sIBYD2oB&#x2F;jC&#x2F;afR+Pk0b1m6DRKlbFQ5xlhbGl3qz+WGqSlpbshRzCUxFl52v1efrXWt5L7drOLPB3z+VLEswaouCNqvAaMV8DxV0aD+IvRIHm5pnpt21dwUme&#x2F;Fi72EiVrs3px0psp3IRbFH1IwJqlrOYsoLowpqZfsa0NIJG7E2kfFTatUVRAzFHJlhpAzjvtfDCYVIWaDY4EFukyVNWdWaWH4A7V55rdIDg4kph9sVGvY8fZ7XBYrQmsAcDpAX1Bv1H3pOE9uko3gOYXOtO883638OxeaiAfiHLXOvlfiW4vPXYxd7oMgVnGcjo6Q1ghigyd8bIne7FwDXL36Q67&#x2F;GvdmE8VDMKWYm8ACQCJpylyiQyltl&#x2F;VfUtLg86L2LH&#x2F;PNBypQpyrBauNNsBCN8Zsxn8gF340mBPYA8rBlzEvt2&#x2F;XcceAay8O51ezEKuN1x0K6I5HeW5ysZZYc18RYX7RmPmLNW8P2e+oXN2B1heGsDnF+rBa6UA6kQhafESy47JdTk6dc2Y5rsQE0FyoRfJbT&#x2F;bexDhkvKWYW8ACWDHY4sKy+n0fjA8jagAOA1Pb5+jkPYweyqgtouLdqAVUNSumHPtYWHa1UWHBTzbTGQqqfUsiXb+p3EzT66jPLpR&#x2F;bo1C4k7WTtfSalv1R1X73sniN2FXbz&#x2F;5hO5u19aC7C7cPJZloytT3xQxyCFogXZCeqqbicj2jx5N2xpE2snG1sXewPISIn95NDnHQWibla3tmbUthHwofKrq64j4&#x2F;cdemZMa7hYKIWH7Fk1dK&#x2F;d6jR3wUHQbrdpz7rJt7UJL+LqqljFhbGgPxg077ZD+EPAsRmAX3+AVj7TSxMBX0fL5d9YNsy4SAeqsk+Z&#x2F;xG7HZlGmLMIWbCNCVVVn8rL6XdgiUyJrfa0rX9ugLwnKqyKugsgXMPMODCsqPDOIraVI1tNucjEBnizswhqx7tuJQkjgyXGfrznygtYi8wYrnUV1E4aCGemh6fNnUuKPmu&#x2F;X&#x2F;0cb0WCvI1n&#x2F;IWvc7XWqMdS6z9zXfp8z8evoj8YquBVAr9IniHEcOmEifQQk2qRI0m6OH&#x2F;tZKMq1hkgS3bUBpAbQK4dOeJ5VHjxroxR7sL+EoHkIkWr6Uox5uIcAVZV6AKYpBGsoz7N9rUOlbPnZkc0ao+hRnnRlRxxqi94r+nUQxHiHSn4nZj5kMTZ3f7W&#x2F;PPB8F7q5EWlcb&#x2F;6RkPbWTXUbj41JZCs8va92s&#x2F;SETMAc75NRUKNSjAzsw0gN4AEil8WT&#x2F;jJK5hZTszhT3MlvpEPQNsxh9nUvamGJ4KpU+cJebPmca2hVwwXMYRgbk3NT10L7ykJ4Ob4SK1irT7naqNGjxUF76xD8lfS1EugxDsB&#x2F;HbH506Au6d+eSGj5ok82pmKSnUshAXf2sIopPqlCwZ4YV3V7QrFHyBhJiWksu&#x2F;V&#x2F;bPN6BJIiXMLfFv&#x2F;zBGk22pUWCNC8Xqoo05SyzwTk1LImFnQC10JVpwIyQHSKGKg2PxoNDsczp1vFWEKYWw+NPPA+OMBcg9w0nWsWHMrvGrt+ovRxq1o6+8WzDyozMNTEMPFsaKeP64awbMpRMzbVofyT9TGVeTJWKiq3tLrsAaGJdDjpAwZScqQiklXCnJse5FF+kzsMpxC5trWPz1AeloqiF88dDh7setCWsmMZMIoFFuEohAuYmR0pkvDxsIywZpi+FjmHMcmacbF3GQ19Upf1hpcUwk&#x2F;w6EiknVmWK91Tve90dZpFHTP4PZXx2UeCvluhXRrz3+RmnM9Ib7y++WXd6kmiSpO0UWDpc7YG7abAgtZOoq0SN2tRJ3ejQN1zSe5&#x2F;lCB+g0g&#x2F;0MHkHYeFTb&#x2F;64f8i5ico2wItR40t8KRVbexeV1rDMmz4o+96GxjBsTwu65GX8MsWVP3ZrsJemcH1+nBfNKNXoBk+1M8twZYmkrcD9r3sGp+ZWD8y3NB9848Pj46JF0GHOmKZ40uRKuVPCNCQYid3dfqV7XouGmefGDYxrJeiRfnZUaoDEIKWZuazwaQAGRcgOJXFiWkyQdkjS2VXgjhdhcV&#x2F;nWzcsWsCr6sVyY2znb5yXs7rTeYHbr1qD461B0NnBuva9EMwtd1H&#x2F;jAjOKXc3R+3ZPrSpAprZ1QrnwYZ&#x2F;Jz5xlAU7qdwbDTV5EroNJBeCGUFnkBOtpj58fEdUqkMnxDyA0gC0A+CIarx9Qhl0J4a7DM4MYGfkvAi&#x2F;GfVFKg0rjp71drRqj374I3XbVhvr3tRm2xDZX&#x2F;icfJWnPmq6K6X8mwLz7HtRT8yoe+ep7glRrnLbDvgHQ5dtPoL6IVcJMHJs5A18bIPdKOyLBNwYf1yBZK7LiY9fKA0G1tAPkYEK6AjaQoZwtUdqNZmVMMYCRP&#x2F;ENYZcpi7ILhIpfa0DiUoBjtERkD5EAq3iI3lLmvHP2L8Z4HdB1PZ&#x2F;CEO8ED66rdX60xfukxl17PtaBXD551eAEd&#x2F;6D5yiage8auEYxOD8LgLGWG6heLMuRaxAHiu6dFbAkxvA1rfbkSyIwCo7W9rQ0gr4Ph6X4uzYopXUOYkBmQZEWZp3aohehYg0Mx6Jq71IV6qHAzLE0dVvrhrt2XqmwcnqdmvP6ia71SVw74K6r&#x2F;NzFHVw78O2uHD2XFd4&#x2F;x3F95uIbv94ejK9+Fvo6JF6PJWXNzKT61vNYjnpbbOz4tIYii0ZVLHRJFCy2I2FsMuQHkBXAsALgAwwXIsDPOJDD5oBCcGKHCsxYHUDGmEw2bHRoQYoxokWnuWvdpOVhqk0Nzp2slpu6o46zAcl&#x2F;080gKvlK7&#x2F;MU0+tJLeIhSeEkJ&#x2F;I8Aopugtian&#x2F;EAn&#x2F;JGywZlljU7UfSpItp99XdEhOUOYJzTGQcHhkBykg&#x2F;BIyymaMkSX3CHP0M2hjm3900SQfh4VLk++TWm5sGYsrrNofrvMjrl4zqgyYJoPMecmTKUZ2syWQSKZYDSYRb3RYqCcjVVTa5RXOrvU3Zh4KVLUtcaO&#x2F;mDQ6UDhvDFzi5r4R7sfXgLGW2NMt8YGTk5e7GuJuuN0sVbWaFe8NVoIDyJpAT15Ab8KkswQPBo0AY4MSy8XrQBmbexQ8vi52XZtABm73NSFhyWLlYWoaBsaZ9fpLjtq7f2Zy5jdJBqNQ6EEhgCFWYBfAGKwaKzUG60waqqALjqmDdmeo&#x2F;jXnKo3rId7l2qEPHEt&#x2F;DNt4R8Yy7kYOf4ZPtlr970YMfL8hgVWfkWk4&#x2F;og+fl31mcK3UmbnKNHwaFIjVnEywCbz&#x2F;i19lhri8FOjG3mdQBIceYPnxBCFElY2tBtA0hAA5dRYZWw73ZslsEIkxfR3Dk1H4&#x2F;ZPCPNEV9REDdLsOJIWMd2mnpPsX61JmjRHAvZ0xKtWTA8UFC748B9NG3mFzLIlVnGi6rgizHDP7E9cFfPhdcdHk8&#x2F;mBrxrvgG19nHanFwxqY5+6iW85Y6He5fUnYCAJtu5On303X01LFkmoFXgceS6TSHQ0shZDEMG7ptAAnk3XBWj6Q7rIBgD4YrxwddiLTainyZMQFWALPUGclEa4yH1HnP9I6GBhYvGslmjZ8yyc47wFEXNuoLNcVrA8w3QeNPSodvFjEfuvH6+76HT306m7j4CHgGlGvguZpWN5nGc0AlyXK9eln3dq48uZw6Gp46YgZQxnhQsfqSYJTn6c&#x2F;MMzaA&#x2F;I+yzL2BYAXEi4d+BUvNdi4MSleCGZGSlf26SpOxjfbADLQibmZF4ac4fs3PVpV&#x2F;ak5vV6zfrwDjg&#x2F;7WX6kl6ko6eepw2PHVV7FngREX5NOuzUBeba58QXziUvR8IRXnH6L9+Gi9YAmG0upkeedSLM0&#x2F;1f+eQTgc0bmWe9bkRz9s4LgBJDBMvgqEqNFjtzuKgFI0ZzwRzMJwFGXNuJ3hXMim5QgjaVX+DAajFVwttcnZxpWzrWvXwb5w1FxNlS+RrU9mGr0eSbrjWDxt2PDOKOtGtHaNYXPL+6XXS7yKhV+YublBtebf2dRqEXESKjaGcSEcKqZJUgE9eeEhZoV2Wq6&#x2F;g20UPDMaOJqfR06XzLZJyA0g16LCCoala+1V79FWSnBGkyE1KalZt7E2WWIQPDKZ2qFOMzCWbjaaDuRyW7BoLqerp34li1rUyTykLoAkihL12X1XuqlnSHEqvou7vF5KRe48FD0zqlrDuC+6BT4KiLgs&#x2F;vvXCjm0dnjpSiNDyCRdXoASZZyn3E5Et1qUR+OGFUgFg+hwGRyCi5JMGLYmzQaQsbsJSCFt5la71idgWDvWJSmJpo2DjgTHrBzulWddtqnxsZv4RPzUiFD8GcLQCyOBHVS8a6CxGHqlS+DYWXqeBHo9YPIc4NZEc9GJVKxg4GVOMK9ni8Kyr3B3VFnPUmvOgCcozF8MY3mlhoq&#x2F;Nmq88AF5ix5Jh6uY0eCEl12iwlJX1GJESJWTXW5D7YoLDplxS683gIw1PdnZuRmO0qRpu9GZcTZJ45SHxpqpA+DCDqoApzDoUpEuqw6Gdai8SpyRO5jV7btuqJxtwucKW0+6lnrzel2yA7MFSN6Vyt9Rs1yJKolbKuG8An4XwPFXxn0Wf&#x2F;NaevsPkvOwgOL8ZblqxNgAsESKrdZYLl6hsNYiG4hW+HRgA8gNIMuyTt+kgeGlslV&#x2F;3TXAa8SHoA5WjUez6kg4CtzNWpDYlVnHIYCzsmwwRByLENlVEca90qOYfy8Ubd0ztHwFxNaz4a+B4yob8E7zrlVWyVdMsW4p5VyLcpdpfnzW1040f2cAVQXBGk0uBI57hk2fKFVQVJ8WqEalNS1nliH9uSIlG0D+BwLIw4V9fKV7qTIjScDsU4OEwrFuQrdBIZRi7AelPknFthiwTC0F78cupNLcOTHl6pBxrWcxzwI&#x2F;AGjSdcuFtZrlnRxo4lFJssvAdFY6uPakq32Yex0KT3FVN17jX5thY71bXSPFHiAdkAvKi&#x2F;ucAmywbkJ6xSUdPzd03ADyQgbaWS+0znWvE0GAWUxZqUmYVfMttmZNdZAraj5tdIctWLE2lF7+ryOPDYV5T6S0ihu6JFfzgHzZmar4bYxo9gFNE4G3Azud1DfuPTRPRojuxq4HS5ZcZcTcW9&#x2F;kymvm+kjT&#x2F;ZWLXtOxASJJV4seC2smrCyjBVc711oAqkhIEEhTONeEqt7GpNkAcg4+yNnW+oa5VN3FZXUEh8V&#x2F;2KqBfMhH22JbBURidjhsQEhyHuSdx35mhmFpTlzPovs0esXLpAeUX6UbCqtU5dP65UWgXO1IzyW2i5YHa6B4ExzvFLa45Fe2qgauO2qla5kIV&#x2F;je95zxzj6HCoTxzITgJbKMlGJu2BTAZFE4mzUi6&#x2F;6nOssbFgyWaC&#x2F;fsXGxN4AEAORhvTOpAmxVtb6Zc5FIx0N&#x2F;pHGOJGcv64UWZBGdYGXNWFUUX3Cwa0pe+dxnB+Tj&#x2F;RLhTyNDXO35PKD&#x2F;eM94zb12rldT+A7R7xkf5Z0fwrXONtd8ePQ1YDx&#x2F;iVzJCrrh8YrGoRYpNJvXer&#x2F;Um71LKrNsAty3GuQGkCtgeGLepc6wqqMsIOUc9UMVIy0plfQ6LFzFkVzImI0hfMulCVf1p0Hrco&#x2F;F9vVB58Lbhlz3HXwnXexbPlX31h5PRR74SO6LFVWha6LAN&#x2F;723X+aVyLHa4B&#x2F;h7&#x2F;u2gd699mvKegu+dWz2+HyzlqJn7VA1tK1DkVy5UnyjI1luAFkiSCHhZxir+NiVcG+bScsHxOFQUxhzmWMBg05NqtXY2ynjZ1d6wD2ornVpIvVqKuyZ9KXHP1upmZ&#x2F;wD5&#x2F;BShVHOlPr68Cxa2Gyj0WOLwRYd4Lwv0A&#x2F;NX0erVDhou2C3fVQ0+sFO4CyVY+7LQgq9CtuvGdnlqIbvynXTKADMil+AnPDmaBxy3F3gByXuatldzA8HTyo2mgOA2OAMcqU2YYGghajR41G3KxRpJVvWc25wqFn6oPaamfRr7lVKC7rBF+ATR1AZUu1etuiWjw2vNfaQRdA527mjT3AKge17ZY6+4&#x2F;7AqxpkPKi1+I1M0uFoADCl2QhU4YIz25aD2WrjVDIDfmHHOhFQqkk3A4Y5Yynn9bG0DGGl0LMKwsOy&#x2F;FbHG+mDuHrEEqijxmiUXDMWiEmPUeOdcbuRDJpVWNSLYOeDP3Cmner568V0HyJDzWSqSyBpT3AOwvWRXgPGy&#x2F;9MRnKTrP8&#x2F;9HP7Rbc673ft6&#x2F;XN956ENXAFvpYFfuC+BBNSwjO0AuXe4MZ24CFV7AUl0nXLEKrDozvXIUtrUBJICiNlophuyzHi2yGicBVxOZYDRkAtwC9NhGdyoQVlfCyr+e5x+LU6FCO7JSEzmrq50yZVaZMxfrdHfWLO+OLrl+261ZSF5Lp7+wbS3l5bUX9PUD&#x2F;SKD5lpK&#x2F;+hJozfbuvn9UXFqK5FhAFzhxhRlcK&#x2F;pNWfjrn4+cp4pnS0aamqefaXTvq1&#x2F;aoCcxhUwRG3YpKYs7pbw&#x2F;O9vJkcqQ91prh0yNdtWIYGyMjgeArhAgntEmVbuAyWhCO2q528vpHqv49rdncYb4HnLoEuXcYf4RRvWR2urWukc64Fojn&#x2F;Sa730XGs1kdNm0lod9MJ3q8aG6QAOHVGQlYKoZYtG1air&#x2F;ITUWjas&#x2F;pwSubVnNoA83elood5DK9dt7mq3QmVEj8xuIge4AhSNEQUCBlNv1Tor&#x2F;Aizko8asNaa5BD1TMRjtHKQ3Eu&#x2F;u1cX8lqAtsrHvvYUus2e+fIXc6mm6RdA8o&#x2F;A5Dv9cPilJ7+vPnHxxNc1XNTnNn2jpt5NfnZ78bDpeKnqTbw8IeeKrAReN3zbAPK4f17OPCJGeSw7UnaknJGmHDHl5ElQbbQEGNbmTHSyB6KCXlwEVMAs9ymKPlG&#x2F;HNs8pJgekoshz4Vp7wHD01T8zwgX&#x2F;ki8PIu0LoS1d81T&#x2F;kGvlV8BxItpwFKeTteUiWs6XJ5IRf9xaQMroNYdUW+fa44sgOheFYEESSSzAGXiLo3mbf0TRZBpygGIU0bKcd2yN53IMh9JuEZZkSkjB0ZKPDQPmRi+XUaJqBJo9fZmuVAFKazjZl8cX1mrP9JOJc&#x2F;0ZcDTFx94V&#x2F;T4q0fbaf2SvAGOXwPGu2qOvFAGeMhojJdnO9ttJyZfVTGcFOSzOk&#x2F;cEh1rMFwN4wWFhSuQQTojN3e4qud1GfOBE8hyd&#x2F;Pso4JUswHkBpAAgO&#x2F;&#x2F;9XfQQ0GqORcWwdxc0m2RGPKUMJWxHfWeMq12WFJpW6TXxblw3lYEdTtzruZbczP6wGXxmzYhYl1StSaa+1X5skejPq78fknz4dG5x7UH6aSW92DOzWszVbzzS3gkqlwTO16tvS46hl2HujZelAlkkRnS1EZ9oAyyiudOAiZIE8AM+YT4&#x2F;SjpCPcJ0zTR5WmDxg0gT5enqEF6cTaUnbFqOExT1BFDFDeRNszq4JzBLrrSQwd6qabfkUJzjjgDHOuw+Fm4yFu83e7IimboykjPpZy1YUh5vPqaol2sNfaRJq8XJ5cv&#x2F;StjRLhQsjtr62NF8fw+pfObUeMtcPy1guf8Xio&#x2F;+vR9zL8L0gQhLsAE6AjgWMEO0BHSJ6BPCAdIB7gfJB0W24RPAAep3N&#x2F;9U56Pmw7kBpBn6&#x2F;N5V8Z6Ouvp6iBXJiaSaMhIcnXWrR0DRphTbHbWC5I1a9e5822ts02VIfGiAHTxOOSN&#x2F;PESV&#x2F;tC6NYrj2vpvXzRAqcDR+JP8q2+67n460&#x2F;+iGXtrzZ&#x2F;bllE9Ldbdz+enJ0CAD&#x2F;ni39C+IR0EPAZQKcDgOMMhDoIOEA6QjjGNi9A6cfYrsmPH0cKXns3y5Lmtv7pI0ieNv1avhoTteMEQ5ZBSOGuXmYbGyMmhCoC+MxiqpJW9Mti7CfMvGqqXeXMbP6dC&#x2F;y6HwC0PPZ0MvG+Kvx4uwN+Sh3s7yNqFThXwXM1urtEmH5Ad5G8DwH5YFr95b955+23yhur340yoINchwKUBziOkI4Cjg0AI4KcCosmrkeEeQQ0xQUZqCm3H5F9gmtyuf6hdC83gPxHya+nJdB0sSSL6i2nCXKVKI8sAtPs6ooGyESLMdvCnAn716Z3ZiFs1plzwdgcEBe7Ja8Firfz1DVRh0td7K6Lekmu7OxPLWjTN1Ju3vGaz6hM&#x2F;ZnrEhCtjUDdoP3xVs1xBVx5AzBugaIe9ONZ&#x2F;biUpVJDjPQ6n4BhLtzqqQDjcVl3RI0gSyqOCcIBjklTPiq7B3izjKJzyRHf1j93BBm7fyphXS&#x2F;qbaBPpI6mascKVS51ifysPICh6GOFXNhRChu1cGbYVMphUBOvna7&#x2F;iP1UuANwq9&#x2F;TnxlFXJqvXKM96vbnwQs58BprZzERsMK86V8L+cd+Cfc2xtbv5129sUSBOqIBZr1eAbBFluU6Jni77xTCFIhmDe0IV+Y06E8tjWwA+R&#x2F;5DewaLC4Py6IFQBBmiUkGs6glwlIBvQRjpNxxfYDZwFJr7JoxVawilH5Y1H&#x2F;QzL7srvTwLBOdN8z9in7kh3MkpjVgPBe3OB8Uv8D+uLc+95UaHq+lsHdIgvfOiLiXOscLAPzFyLHVFXnh9fFyTXK5vUSGNRrUsVi7TiLL9ZY+RxcbFp1qVb9sOMQM2kQoKyLO2gnPs5Yf54SHG0JuAAmUjq1m&#x2F;v6CgABQMMgGmIZIk+sMYxhxhVgFxhn0GLeBxaWQI2A7Ll0NRwgjDDuBA8+Q5AaqrPKku0ZNa750Q8jU8qkXIz9d46YdLbqetp4Fg3&#x2F;Pxs2tz+ce1L6Rkv8KdfHa&#x2F;fq51btAUiWCRIztCA4pg3AKLiKAkJyNtyr4sSn&#x2F;eB0sb4o9ksuzABN3dr1EvK1&#x2F;4hRbhw4QV+gYk3bhXsgKbvsW+Tl2gu9oFo6FYe+6EzAGS6YAIYsd7GzutWuD5JLNDgR6DGS0fgTyNMjsGzYtEjw14ekroBfGxq+U+&#x2F;5UyuEquGkh6r4uxssruHnFW&#x2F;tekYq7rWk4s&#x2F;vOhgp4rbutEiF2M5DwOuuodjZvdciq8uMtNZcyXBOEEjnWGiYmuB&#x2F;L&#x2F;TZg3ADynmii832lwImGSaEEHkA3NPdCFf40rQJgGfvRQHIsjJo2ChSUQwxFQbyojyOtkwt5O5o5HwX5wwqUuizLvdJE4e0I8tLg+MMv9RI3vYt8r7m96s&#x2F;1uOYVcA2QrDXOcu&#x2F;bMk25gV&#x2F;Vd4wGTC51xwx5BceoOTqOqg0cV03LJ6l0wFVS8ZyPcB1Xm39bdr0B5LwzOLBmMwAQ8koJ7PjVTSh3gCGxCU8ggRqIVBV+hqb4Y8WPJlg0s1iunU5kn5hA8cGj80QBTCHPdn6nvra2oMmpzULqFBG1gjx6QBrrHpB8uD&#x2F;EyyDOL6TYpzXCO6LHBeDeaMbEzY+MXilDiFGeiPxqB&#x2F;ooV5lrxBHAAW1YHLEtRoLiAh2IyprBAfADPB9KpLkB4gaQ144xLVTsZ784gblZI6SZBYNZARyc5x2jITOL387zjbNj4Rny8TKN95Fh5j6i7A5A1oSbV+TOzM6HxtdA5M+wbBBuj0BeVde5p9N9y5EQWHSuLzFneB4RXkHBGyB5T8hfZhmhI6WD6vA3yhwkcADL8HcbDkdcJw4ga9c7AJM8wOwT1AHOg1zThowbQN4+Zo9+pmxTsILR3yMQBl02k51bRmkhhCJBFBT+muxTvarAZ12bmTBoFsa9O4q5lXp2L77ZxBKPmRt2jBpdYuA8gOSr7JtLwPhQLru2gV3aryvnlNPz1Bci9lvfw33FyUv1R5V5x0MBwwnEAWAZCMeR0FHAAeBnA8w6FK4aXepQR4BU0233I7IfQ&#x2F;FnWxtA3lrela8SIYtJR5tITAC85pHNpIlN1eLU0zqGOsKooabS89xk6lR76vULGKjHQfJXapEXvLLnuchr4eMXClhflR27aMTFk4hSq0pIt&#x2F;8Q74oeH4rsV0C0Rp&#x2F;qJwn6OmTImB1r9Cfw2FEDD5COoo7I&#x2F;Sxk&#x2F;BS81h5z2+YFGKUM9ymix21tAHnHmp5tNtEsO6iMGKaWFs8WCbX2uFDgYQKtn28cFiZdYacwLoBxlkI7H3r80qjJuhdNSP2t1yhX5yEbuGAxF4k+ab&#x2F;kRHiFw&#x2F;046OHBjrG+9rn17+dGzZH8ol&#x2F;3F3fLuaGiaKaoRoCaShMmQBMdtXBmzFQ+dtQdm6iFPkE&#x2F;gnRcqoX+qUKhG0D+x0uxGxIYNBAaEmzK4O&#x2F;HBC+qPNXHGp3mo5V65Oxa2AlVWCqPi+ZObdY0cV2kk+r+18HxztrX5XR6pTOs00YOznnZJy94bcxHXS0U96bY10SLeC+6PoDEQjfMfQFD&#x2F;whwPPluVuuQsTHP7BgdJU2AH1rq3FJobw2bkl4fCnDOQhVz5&#x2F;oQXG4&#x2F;UDqSRR1yA8MNIG9m2P&#x2F;yBCUL9xgLkLTfD8Z8nO0QwKrzWGTNMIamY4sYUxHQ7VkzKTyx63gPYjyIHGkc54mTC&#x2F;WwK&#x2F;XBy+BymiqfRJFroSR5&#x2F;lwL1sytdvP8vIKfgKQW&#x2F;7OPNM+e9nQuU3cOfK+NIC0fG091Wk&#x2F;l8iRB&#x2F;lpq&#x2F;YVT8wUgnapkWSjx1NpidKhVa40hThE1ygqkrgPcPwF8tqaNynX3A7IfJc&#x2F;96OO2NoC8DpAvI+gCJgc&#x2F;DrBDRvr0iBrnwe5xjiKDNUOWuciwTRhZwK88prJoBiJuh3EE4iLQVjUW7vE86UGSF0DS9QdFl10auqAiXjrQuYDE9UHNa&#x2F;7aK3OMp0ZXZySfJjF0Ho3dq6t5Lzj+Skp96TtYbnLUMZ1FswXdxQ9wfZbmzOcCBOvYT02tu2gSWdGcsQ20NoB85A38D&#x2F;8OfE7g0YHsIMDENEppBH0IlkxLjWcGTFAKi&#x2F;0C+tpkNzepoUu1E8LzOqlxr3&#x2F;BEfCa9estwYc1ZF1THL9rtId3bzsFVi6iyRUAxBVAuUXJPgPHr0WIJP+4euMaSHIRaJdutA4xx1ilygIcBR0A1qixgWE3+jMB7H+v85OTTlkz29oA8q599t8&#x2F;owZFADsLWbNPTyWtTmLpTLPYLKjVHYuTdtlmtZEDxM9WvCpajyQIqgqlrUUmq5HOSs3vhjXoldLXjed&#x2F;JOK8ZC7FO4qHfv46pMv12EdOII&#x2F;WKq&#x2F;InvGesscXQXJm1rTPzkMBPOqMRei21h472bKm6Vhpg5U6WH7XVOwWqlnXBOUMuD801L+tDSABQE+AzOdR7p8Oz8aUShIb1AeDe5U2qxaILKDImW1HFo&#x2F;rGVADNGtUWQaJuFJ7vDcauzD0rXPtxjMR3a8cCSuzj6dNFy3437r776h52dt5in32UxfqpZfqkXH&#x2F;q6XMS4ybZkXxdxukVtAFC9AFIHq7XoEweNmOxqmO29Ru96roE11s6AgqhsWJfNd5jjGYts2QbwAZ+8fYMWlcUFbxufZwJwwxiWK0pdqdHgQNFBOoAeIQu5UGVK8a1e42xy7FTgLTZQ1WXQfFh87+OteluJU2L+p7p1zhy2wc&#x2F;uLU90WhC30xijw7d+gKB&#x2F;sXgHDNTuEyr3plu&#x2F;qQulAJe6FbNb8ZoSmGH4DwlEFr4hQrhZqeS5+oPjSeP5w6inTzrnRSVZ9Wrm9R5AaQ8&#x2F;rwaGqENgpxQKKQJCay2LqiORmGKZercK2VIFaLhSFAUXVGcqYbNuXxe3yveSMdPh2KPk2&#x2F;1WWwhQ&#x2F;Dk71+ofBz5WiQ7gYs3YVmOolBr8mN3UiDr4HdWtR5+r7Iy+aH1&#x2F;72XUo&#x2F;V0zTVssXytVgC+EvcwDwgeo1IxzCg8Y&#x2F;IXwUIIzbomP9WWqTnw08VYCSJQW3IhRuOPc105ZebwB5aR1yJxYKs1DlMULWjLbAct2smGwt2DOFk113NyupuZFWZMlbQbI89pLU1o3h6F4cQpcOyEK36+mGF0HukqXCrwDjtZok78K3i0D9R5pprX3+Z6rjayDbvS&#x2F;eqAPfx1&#x2F;PDfDAg1TNuEqK3CJBHdq2efwnhCeqkddML2zNHicOcq&#x2F;8rg0MN4B88PjYpWIZQ+h9osGMZgGG8bNAYbFTICqNkFCxU5hBswJlZd70kaQBNJWk8r6o6BQwa4SkyzVJab2DrTVbgxtH8AUK4sWIUWsAchkbr2pIfgkAeWWKp4++2U6Kp+BIu3Oy4FID55pa+Mn3QFKdKs8B0JHAUdAB1AFZnxA+BR3n7nR1KVRv2rWgHAa1sNYfuek9&#x2F;oXrP&#x2F;5U1VCGxAkYzSwlo6UARzPCaDQbWP1larOFtNJdKOztav2qjk0j621g1SQreG6itboHC1e72Fcz87mBXpvo9USwvD8Xdal7S6C3DbqW7pAzcF95Dt4Z6Z3dd4XqeGYbcAKOa899z+zjLTsCPiRZ52iug40Rc+y8rzu2jFehimmejSxdbyH418BRxdpVjOfiowXbbW0R5GJ&#x2F;noeqabPBVqMNkhiaf3UFvgZ6TGHAhRkIK0ebSoD14hQ2d7BPIhDeAkDdTotuNGIemty50f2+Wm&#x2F;kWjSJs7opT8PLR3yyeKUksSpSwfO&#x2F;swJyXxPTvTUuheVY1vw3pBCQ6CPCT6mly58I+uAnpA84Ptp24UPuH4DeIb1DeoPwJukNQFyID6hEj18hCmxrA8ioALGzn0HiYkRH0XWOIydBMJhSeFyjDkMYYSGHZquqDXNnhAUNLx6kl6hzuA2ci6jt&#x2F;HZdtH29kAKe3E&#x2F;35GcPNdv78Z5H6oQrH8ZVcsyJ7uMjij28hwaq2&#x2F;jZK4mH7miNHN8AvTdQA94hvEF8A&#x2F;QzruMNqMCnN7h+SqiP+QnpHe5v3e8&#x2F;RXwQyDorpWyR5AaQj9YISmWQgvBujECvHA0x1xguIE3PkUXh8VTNwcpQXwPC0sohTw4VnnVZT6lz4mMAtKo5oJUMfsUTu0&#x2F;2TgFWt+qND65+hKgYpXE1Pb6vJPv1tOGOv8c7OfLkzVrjSUQvAJOkn5AC9GoECL0HYOoNKj&#x2F;h76iA6HiD9EZ43Dc62u+IjvcH5B8wfbqUU+Xiw0+G0re11SAfeQOjKhmQ5iEkXgbCOxvMDjAZDtddPaoU+3oFBNVHVVXxohP5F64FOAqL5o5OwFEXwFG4Lr4rLS&#x2F;9trPS6ok6kK6UXqWV7dc78NIDYIYV64SvAO09tcuQYQ4gdA9wE94h&#x2F;4AUaTP8A23Mp4AfFD&#x2F;JD8A+AH5A5feUPgB&#x2F;B&#x2F;wT7tOlevS2tgjy8eUejnNOIlUXhSJ+Ww2zSYJi8cCu7JhozvTjP8G&#x2F;jtojS42y1SA5T6DxzrraJXaNVmh+K4igs872pchTqym67qp96jYo87bqeFNh77UddeGxp9niPaOKq5xqfp3SSN4HoEtBTi8jPB8N+CI6&#x2F;ATxAcc7xAJ++oiIEnGRYpvwEdFliRxj+zukDxmOm074BpB&#x2F;bGDlpY491Q61J8CMTAFqrOITTICZiBggD6HcuG5NC9KKFmTtdtuSt80rMv93AOMaUtyTOpEX0+cz6bPFoHlnvXBt8PkaWJ4qZuMEBNs7rf7cK7XFS1x1YkXYdqX2yAuAZleix2up9SXVJV07kckrmKkAGsh3ZH+H9CZXSaXL71FvfIN7pOLSm2qt0fM7XFFzdH9TAOYn2H1zveRdzWm2PHsDyC+VoyiCKr4zMbsowVjtEjiP+LAOhluNIrs5x4gqZ&#x2F;fCGDInybToSNwyiLp48K0wYarp2ClbRmwaiE3af20o8XTOcUHW+QPSMq3YR3AJwOu89BsnkrvA8Zyb&#x2F;VAK&#x2F;QeehiH&#x2F;gONN8gA+6CdcPyF&#x2F;l1rNMYDP9Q55qUe2CPK9dK1r1PkO+bsT7xA+KeW6P9RznJ3tTBtAbjXIB1eMQBKQzeM6kpGaf2+K4epmHzmgDYNXhg0NZrUTXofF7aRpcxIlnhgeXioZ9ffXlRLTyuwfr3XNeULA7eqMKv&#x2F;W6466UHO8o1Z5Mde&#x2F;M429qWbUg7Ju1GN&#x2F;5ex663cCgVWfMaaD2oSpqfFHuV4aMnqLWqMHILoq3fBdro8ATr3D&#x2F;UM5vyvnGP2xEKKoPILZbk1BvpI2gNwiyK+tLECi8WhWhCZK5NdTCGuNsVi8miWYxb5IskWYNGNr5sQgOSsPe+m4ff3AWmRml0xl1hof511qnd7WR6OnNUi&#x2F;0JTB&#x2F;dTDPybgwhckzf6A+15K7R+pPfKstnssM43vgn8E6KmvKb61mqTrQ7W+qDL60yLKOvIzjwQ58GHHnH0&#x2F;gtnL2y2ptGEx4hOd7K1Rs0WQD67jETge3NxlkKKK46TUUwRVj436e+FVlzaO5u0z5bAdTWnOJHkCPKdRzUno5Vh4dp8Blq7dXp9jJbo7BcdyEe7oFusLYHdl8FxnrXPdPzT+iHNhrz7eRfEXu9e3GDQ8id65EtGTxxIhvrX0GfgJcZ5vjJ8&#x2F;44J3BjjW1PoNLPOR1BtYZiapN98PH++&#x2F;PU88PfHxsn3atjaAfHj5JOggImdTdsKzQTlOtyqgCYQEmkpxL&#x2F;LcLjJUE4xSO02HZqTQuSOdjbzocqqoS2i0NhZz&#x2F;pyX&#x2F;tQS8C50qa9R8dYuX4kQv3THP8or5gbS33p9vCsTmKK7vIz6ECM7AXQqg+JCzDRKb0LMOqJ2rt3fJY8aJfEO9w8of+YxrFv9SmQrbiC5AeSvLgrMgLwbfBQICXKVESBhYdAndpW5vpvKJh8ewCrd7d7HOw&#x2F;CP6qetsJlJjqhonrAmS0jqEsK3PeMy&#x2F;CLaHrJgkF64D12G8R1Tva15763AxzPmbtU+r3VGBstMK6rRYv1PmWER&#x2F;goM5LvAD5IvoN8h&#x2F;guw7uOPNokwQBPFlJ9Z4SDRRW6jfJudcgNIB88&#x2F;gikKtJTJa5ttqhqyi+n6SB7qdEGtkvQYC&#x2F;c3wHNnRHRvSC5Ej2uRn+4Ehl2f5S40e3lg+K2N0BmOSzOE2bQg3YJV+9zp9cOcbtBdPnG3KLEOs4DvSkaLrUL&#x2F;dkaNXUAPABznnFUHSDHu0okiZzfAXwSzMxB2vKUYO49RyFeSWfcJt7xWW5rA8jVlRIwGpjI6MWUoXAyBnjO9qzS9tZZTlrDMHUeo7Ng7mkN8mIYdhKOXaoHXuxac0XI5o6pagIrhc3zlPwSM+ZLafalfP0atfHe&#x2F;PfGbRfnOu8E49XoVCgqOx+l5hjgOA9zl3S6zkKiRZiS3gqn+h3yMgbkP+X5J6b8A+4&#x2F;M&#x2F;yD7i4jMAmUkAcDszdR5DrzSADe8c8JfVGMY1u&#x2F;sv7jM2liONrU8WZa8wWsLJly16L1KAbdcEYiNiyZc1ScbLsgvnriQb0Y51lTAF&#x2F;h+J5ZItTOJc5x&#x2F;OIws84juq+C3yUguSD2wLvsBbsrtxTDcf4R34yebjVobj6FVMDxDfKYcQxw&#x2F;AnXDyiEJgog&#x2F;oTjB+Q&#x2F;4rpmsQn3H5B+RNRZnsfw5gnHnM3TMUfGMzlMQh7SPMta369da9RsILkB5EMlSAKfYbsgiEwdvUJ9Os1uCLFFUiyD4pwLW7Bm3FVG0Ll2ILcDt5tR40oqiAuRyuUM+3Kt7rSxc0JF1L0K45dR6E5NxTVw1PVa5dnn9Wggecfj7vXCPt+US9r8E0K9&#x2F;IDwBsdPAD8A&#x2F;Kwd6xjlUWxz&#x2F;JACTDE3c4qQhf+E4S27Dlac0VTyEjpgckxp2KqKW4r9J69cGjJQHRarTZYiXrEQngj71joCpBZ3WgNSluexahlLnnWJ761D3lX7uqPk14PnJaD8cubKXwxO+Pgb1Ree+uxl8&#x2F;bzaeVktbzvVGqLP+D6HfAf8ADEAnw&#x2F;5yjR30u6HR3sOv5TfWXcP8t85CfcP+D6nAY7tsriaTk7x0nFjcVlg2ejsmJfW8ZfwCLaAPI&#x2F;9nIRZkXXkT0DhnX4u9QQa2ExBsIjJS&#x2F;WC6hMmTmSZFP8Ifo5yLV5vYV4Lq+ne9eOet6BCuq0AQn0g3NdjaEDvI5tc0tNG7g843lhpEiLB1xRnXj0hHIt8taF8alrQeb6ZJBDOMCLaERT39FneMtoeUEMg9f7QPhQ3d5Ue0qNkniX&#x2F;CDJK&#x2F;CRpa5YXBobQCYD3We1+PJ2rXy6vDcD2dYGkGd7OEGYrMWJ5FxHjNpeiR&#x2F;JYrOADi1mVKkPIM87D+R94HgWld0h338m6DC3vmdcK1YLaymqnUSAXMQb654r9wPIDaA&#x2F;tV040zm7O0y+aE62EABeRozShWbQtRGfudMeNUfXrKgTUV+hA84NmK6TXSJHfy&#x2F;36+qO+Sfcf8L9DdJPAB8yxSC4ca5AWBSWZQCn0skeEpDnTjZ7c7fynS8ph1sUuQHk&#x2F;YkoNbkBTnXGmKzRYMz5GJeodaoBybBqqGk4ToHyesTXBZv95TrAnIg8cA3oeN6fuCcK&#x2F;NrnONcReSMn&#x2F;qXZzpPbSPyhmeNdTfLarcY74D+hqriD2ph5gwrQlYvq&#x2F;GNjx+hNtYsNvEN8g6U30GIkSMikgYoZx9J7gYyooMkMJHl0st07e1+0gqVOPvStk70B5MOZl1zwRhdEh1JmcyiGTkT3RNeR61JlhZpd65ZLYOseuwqIJ4B5GVxuq49L1248j5CaSMUlAHwgQvylIuqvPt1qFPmF5z2NzoVjRIb+BqFEg0EPVFUEb8IUqOK25bp&#x2F;tBlHKFTA5R&#x2F;w&#x2F;KHp+CHPn2JRdSSBMuMYjWrBYfE2LFJsSvCUzt&#x2F;3RjncAPIPCRi8ZsblrIszQNIqKM2gSZBkY2dYBbfZWJnSzRrbH&#x2F;aGdBkle842dBEcV8HzHjXxvt54bVbykijvpec7y77PueTShTRdv&#x2F;h5n08fZMg&#x2F;y4B3SZ&#x2F;xIeld7nONcRageJd7Fad4g4f2o9zf4TlmH7MH2Hp+B3Xsx7dYRniEWa2nLyUyR7vQr4w9nVEOaRtybQB55zoqZnGiLzMPeVcz5T56YJuVLFhqs5xEISgWemEcsmHO5NCJ5tYciT6W8nDFovWe6PHUH+VujxldzzsvgeGlF3UPk0b3Fjh1JoQhXXpDDzB&#x2F;TlXMe+R1TQUQ30rNMcRt5TWlDvWdSKd&#x2F;yovTYMw&#x2F;&#x2F;oDrp2YR3JmnTfz0Ib37uD9erEU06ueMjgRgFSBtTscXZpHqObLEZgO7AeRjAYLDzcyN5hbAJRBeZLSLZVf5GfZdBfSUS5XfEfSy+rNen+I6w+kGd47CXKgR8pf4zLhguX0D+BaR4wX9x1vRrHTX61k3BtPV6HMtlZb6AFPr0W0HyFf&#x2F;7nJNQR8s9UYvIBhD30X8Vm8BhB6R4SyO+wHXZ6k3vjUnwsawwYfIg8xcZ8xUgvIGfIYY60FNs6cASh+sdLVPKIf9x0M8wEja1gaQAGwwYKCnZBlpyDTzADVmMMCOPQCKGWAG6304hRETc4AnM4CJLPcBpgKSCwAkVyKER42jLo2+XFLjuWigdVp35P3SZmusRN1ZAtAdkeQCqE&#x2F;BeaHu2+4jrQhc6EJN9aa1LsKmNUZ15igRKhzpTunb9Q7XAdLHnG4rdB7dSwpeZh2hz6g96gOuA13zFFlPvyKbGIU6gKQEGYGswqgZViiHRXD+jHJoWxS5AeSd6297IZkwJGcyhzHDLCMxIzEAk8yxnZlEhtEL+DkIESXqLL93qbaXUXL1ALgAxzWdwQs867Mo8gwEsNB8bJjgK3OIHYjoatPmMqhejeZugvraTXdYqN4TnV56mHTfizk&#x2F;OR0h&#x2F;4TrE9BB0kGuzxIV1p8fkH9I+lDW7EQo&#x2F;4gaZJmBLGk5XG&#x2F;K&#x2F;ib4Z4SI8YGq1AfFckomy4xjd64ojcXWqIHDh6KQe8vwbFt&#x2F;1&#x2F;W&#x2F;AS42wNEUUz5ymEUdklSJ&#x2F;HxpS1CPtHafAohAScnLVMbZYOEVSfH7cmStCs9qBdhW7kssGzVrUdtdwPRrn&#x2F;Wa7sfNeutdKHuDSviQCrnmGnQogr&#x2F;VrrMcVVSiKn6&#x2F;V0ZMqIN7UA0jlf4Jb9TB+RJqPT8BfgDKoGBCqetwmRe3Rk2dcdQ8EF4ph1mYjI99NZuJ1xZB3rNSNFBcYW9Y8jNUoEMDQqOzryfOCFLqi5yTPLFr2sDBUJs8K0Je4hzfm9reAi1dF4XVNfHdS4&#x2F;lvUCIx&#x2F;Uj7xXhvZKmX&#x2F;wsHrFomM8yUwPAqDf+CBEKdHXIMvvYQLCK4OoNjiqAW71oYvzH&#x2F;d2NH27IrcVcxniunRh63Y2+M9062daBad&#x2F;qWaMcbin2BpD3LC+QBlekyiUKXKTFkT4rmNmmqD+W5s0MhHMtnK2gpy5M+3NP19Klwt7y570isdcGynkB1G4BH3gvOAF&#x2F;5kem0&#x2F;Jkb&#x2F;LVPoupsF7eivNgY8QA6IVw3+dZyMaqeYtUus44+kfrXHuRQSNOOtY+T4OdfMAsr61RDjHbuC4phwn0UptcHKEb5XADyC+urAxPLOGiz23OVtlWG+VhPZpUDFxqtBldAV+0SFndFq60Lh5KcXgBRHCZecIVpZxuO&#x2F;GgB&#x2F;Q9UeDVx+m6OPA9jJ+rTKDzcoO0UpPjIoxee4oc3OgARnnpOlePai&#x2F;daXmdaZy3ZY&#x2F;aosclHuM&#x2F;4flDefp5HPWWTYca6WklRFQnX0edpNknAFkph4bQhkTOS8oh+vnJmXJIbpTDrQZ5T4oNAAPhR4c0t0mLRtnpkLg6l&#x2F;v+4ic&#x2F;T7ZHj&#x2F;LhmvkagNbi&#x2F;cV60ppm5Eq0wAtg+0cHFhcrCnw8&#x2F;b33j63RyGsN1ri8w+ksqtS8ZKRSa5QqMP4EUMRt53lHSD&#x2F;Ue10DP+G58Kz1A&#x2F;I3UD8s4f34mvLwE7JjV0tsFey5UWPwWeezNGrcEpQjKslkixaZBZPDhwS+H+DsReRYGDinX&#x2F;wGjhtA3pVtCTA45C4t0uwKbn0K3YMgVmW6aspeAbaELl9qKJ4U0tuvbe&#x2F;v0Ixcj4guRUq&#x2F;8DrujhoX4Mj1TH9VUJfXhTmuojAuK6iTp9W808&#x2F;pGPxo&#x2F;9HADwpNR+n39rtQ5Mv0E9CPEJmYwbKJUKjOTeIHdukdUh6Ojjwadp8hfHsuoza&#x2F;NnURZE85NJSmzKR4jslBL&#x2F;40p+c8u3VC2dLsLcW+cUwHQzBpRV6i1BKrZkWvAhG5SnBkej2wQFj0nMVL9beHDLB0FxCtR6C8opDWh1u8et+HI17Nf6UfTSSuKRf9QnDDe7af&#x2F;4FSNTkUlsu&#x2F;F7HbuGT8gPRDRd9RGbVR81YEcd+lYtG6cC3UR2HKvOeRnx8vYyaANDl8mP3cVKVHGefUlj6fjHv1lEOcUA5j3qJSDnlOOVzOjne75BZFbhHkrXUsvVySCmEIsXEAixN2LXLPdgitey1SpArDhg6DszZyULZJ3gpB&#x2F;AP0DB8LkW9H0Lce8NVxkL7Wx5XuKW+96Fuf1ZpP9cmsaf&#x2F;zNLKcf53g&#x2F;lFA7iM8YYpxFqraTp1txCeAz9Kk+ZzdCKvJlj4BfhQ&#x2F;mg+RH0opO0KJxyYsmyirpQ6767Ot3jONcjgCnggrg+W9cVeVOjtRWdkQbAPIG&#x2F;vZVMtTcpbmi6KWXUFPEMpgeO1el6FwwIN2TZURtgqGHo+J+iNmCqL9KfulLgeOa4IUd9c7vxKOr26+y7bggc&#x2F;lcqjIi+wirpQdyoSCilBtdRrU7C6oar7V7uPFbMs&#x2F;VOuQdS7SS0oNvMv1k8QHyANLnqGi&#x2F;B0dZ658Fyp86qU6eFXVozzAVcVviJ30WaUcpoQ0Zagq&#x2F;Ih1unI29+D8vUhbPXJLsa8daglggpDkytmVsxDlSBWKWeVe1+tFhEIVJINmWOmIXABijkHgBbiup5aXMGAtnb7Kb75jRrDLd4kVAP2Kx&#x2F;aFtJ9r9cCzzwCXZdxuybudamFeCrp1Qv+J1+WzbFkRlYhB8PeuW915WfsbXD&#x2F;k&#x2F;lOOyr3+aPcN+bM3SD+ZWCxaJRZfdU9Fe9mBnEqE11sfLb4zw8LUrVEOraMcYh7rqZTDMTjZ6j++Zskw5+ebeO4WQd4XfNlchnLPbp6DbghOgDKkCoAV+KYOEOMS95nm3wtQCoWfXbncF1q6p+oxrY50ClacIwC&#x2F;rHq93lPR12vyPZf7nojuDBx5G&#x2F;i&#x2F;ElryQRBffl4TgEM0Vprg7ZsiAnxrArgqzZg6BB4iE8WZsEaOsU3AG4U3GN58sAOP7vQYnTWPzvNAwrLDR4CTlzN0y4O7TnZUdyqfukWQyQoYxvNJDli4HFKOnIrRQk9H3TBwiyC&#x2F;DJDeJhjdhawpT8hyZA+Ac8Ul1HscLofcIWa4XFXRRyWylDug3M9PwiXJPQbScdua4BSI7klRydvD2LqVm19Jvy8yay7wyNeC0UfB8cuzerfkzZQhHcps4zty2CGERqPeI5Jsw95vcP8os40&#x2F;y0zkT7iX2qT&#x2F;lMKilZ5&#x2F;wvATAz4Bzco8EswVKjwk0hSdbPjcqFmQVde8W9lHnJztF8pRSAfMHTI713+89iltjZotgrwOkG3P9AxkTtmJKVNDFrKYTHAINJcj0+QQwycWdIgudy+iFg7BFQpABSgX6fac2N47GHlv1Cfdi4o3tv9CzVHL6FEP4dhXm1eX3tvFJ4oh8JpGR3f6DTVyjFnHn5VFI&#x2F;Bns0qIFPpH+92L1Bnwg8BPGd5IHQVTSJTNSt&#x2F;MQB4JJSJlx+feFm9dYi8n2kQr1r7&#x2F;3m2it5+xDGCHuUHDpbd6S7P1lR1sW&#x2F;+UANkFehLl2U3MdDM6RZeQSTocGSYXlANLmcGUIU0gs6RM9wxahinLPRfJs5BNE7KgieTw8LH+0H11G5BOjpJWrP&#x2F;VY4W38e&#x2F;+iIX333TmS3OpfIEM4KOkxAUcy5xim3FU52GNLv1W8bfWLEQBvcHwRuGHkr1DfigsK5CKkZsughQYnexjRH26MM5F1dmCK5RDF5jmRg1JYBKwDxOvwb0Nkfe1axXjpHaS3gbHN4C8ttwzOv0v1zFnuKZkyInIQIp0OiHTzUG5DJnQrA3pNsGKQC5V65BRl3SV26KmKSgTSHcNX+vO0HIBbCVpaxYSOhe2YH+AXHD3uxqVXgetGj3yEZC7J3q84Fixqux1&#x2F;lxTmU382YRuZ6Otny0iFH4KnSBFb7bVvKzxBvINxDtyflPiu5NHy9D6CUmojRqRSCWV9mEeyVHv7KEKoHOmUdXCm5qP65xymGfK4fBxBNLQTogxdB73g9Rqm3Fy3MBxA8iLmWme6dXumZMmZWTCMpyTgRNTngBkGSfCj4DtRE6ET6BNMGUIk8gj3ScwTQAmSZnABPEIqDRxlEHaXEj6hWjtCpNGrXZ4AqjX1Hr0x4EjHq09nukYLihDJ2k4V84fa42gdj1D+Kwd5qKwMxtnodgfFOMtAFXpe770s5BVscc9ZM6YjrXmSHX+2pxBLchVQLYASHNHHgg76Ezfk00kykBM867SUw5RTLzKiE9POczJQFejHDbxXGCjHG4A+diajgd0jn0OQ&#x2F;YjciYzwcmNE8mJ5BFAAKLziIQBwgRognyCpwxqAnmMtBtHiEcQA6QxHssD5AOEATBC&#x2F;EKbawXg1uwTqu5GL6rr54+V9Dg4XnBgXELZjZriqngElhxEXg4Hr0aMy+cN&#x2F;2pVCbKmwlNVed6KKviboDamM&#x2F;Os8R4ca48UO1LwN8rfNNibMg6QO8y6z25W766ZQhvvsfAotwnw0cCPE8ohZ1M19ba9RTy3Ug5dQBIw1fJIMuDoMfaThlURjF8vdG&#x2F;rnw4gzRZ0PGmfJ590yBNHJhtt4tGSHUCONBwhDBCPkI0AjqCOAI+AHyAbQB4AjIAGyA8SR9KOAA4QBpAHAWODxms776P7bXMrvGBw9WhkeAscb9EX7wTXu&#x2F;Jr3ik8fFpzlA6RVntnoOU&#x2F;OyCMlBuqArc&#x2F;CpMm6o3Bjvkp9+BdQz9p&#x2F;Jl3fPdkx+E9O0rNUJ2orcqsoTMhwVua7QmAEcPk+HxKJ5TDYol0Sjk8E8&#x2F;FarQcICwgoQ2UgyelmGX1eZGmb2sDyAuRDBoL0J45Zddxes8H5mnAYMndBjM7SjywGDRAGgsYDpAGkAnAIGAg9AlxgHEAeICQQAzl80rxWE8xwMbLc5CLTOi0qP4nrgcPGOICz&#x2F;rasPvddUlewNabfyfog9K7QmXnR5ldLDVIvEUUqR9t3rEOgwMlWvTCtVZT9SHxU4O9fb7sj8PxqDrAjVbuY9WVj2jQorACCZaFvLPSqPEis3fpZHiDcthVG3rKISeAY7gcRn2zcLlKOYaru9CWZv9pAdh&#x2F;+DewE1K9jILtTPbEo2M65Hw8ep6O7joKOkA6AjoKfoR0UMjxHyOS5IT+d7BeP8TvmK8HsB5XkY68EWndXVy96Xx6H2hxeVnW9hav9Rwc7zEi++qs41XKTy7gWFXA30ok+Napfhf2TBG&#x2F;rRYKYAXDD4jvIN5IvtP4DvJDg30AOnoaJM6RGlek406rsfQiB2VETVyaQ+FJFtDEKZqHdbNgby6HKtQDL40XpEI5lEod0mef9laHnMVza+OG3FLsLYK8BJCpYEkGPAvKDj8o03T0KR91nBIGH5X9aGYHSiOFI4QjpAPIMdJnpRpFImQmR8RITzq59BGnQRgf4yD7eQTQF6pCzRJAl14tfscJ64ZzLZKo6hVepkHqK6u0SpaTIvu5RV1Jh2+D4&#x2F;XokUtq4JXoEfPrlz6B2ljB+wyIeINY6o8VKFEB8Ue5&#x2F;hPgG4gfIH7WrjeMPwG8H16fDvvf38TSfcZCvduiRrj2VqoCngIUU6lJaiAsX+hkd99ri0wLi0rGkDkDoxmTyzYPCQAfEniY4ENnhV6637WTvcxKtihyA8iVdfjXDGXN7T0SNML2Non8lMs854E+JAgGcCincisgsgBARofaQCWI6ew+PTiiXpddract0m2WQeJaY7JFYwAxagSSptlOrB9U7529Cs+8DLVLXuKc3LjmTWuVA8g9yD2APaChhSc4bcqcyqytRJb31ijXujGXGzK50QCln3L9LDTBt6bLCP8RIz6oVMEy0tPMtspjUPQfY0DczT7pONYBbHOHm0HV0be4DKq6EGq2Kop0NywVzDEzanJ0soejA4PNJz7TiXhu7mTOLGqcRfvRpGj8TA4kgx0AEzANtkpG2GBwA8gHMzWGN3ayIPUbIxJIzPjUp78refaU3JO7zKCBgsV7ZwI4BFjIACVAKSLHiCzZgBEJ1Bg1SSUJicYR8AGw3dVUmVgfAm9KE5ogHYv81iel4H6H104uKtkZkiTl0ryYWgtbqHYRtUyQy8FlAeTcw7gH+AzwFeALyCcQewDDdeuGK1Ei76k13tGQYetUf0D+U1Fv&#x2F;H0xx+h6E&#x2F;QDrh9w&#x2F;xHRZXEYRBkUlxqLRmUwnEN6d&#x2F;BTxEQA9OBD2+SYdgYZYHUWsSspFJ3Qs8idLuQhIs90dBzGVKLO2dyItVZYT3onI1DMGcAAR0SiTfCi&#x2F;jl3KA3wByiH2jrZG0Cuptjf9pF6LJolpYa0t6zJP3VUgmsgMDD0ACvoDaIOhA0tfa7ptXAAkQQNEAZSR8A+y30MwqCsAw0DTLHttFmzLGkt&#x2F;a4jXfPC3vgJ11sHDB+QH1EiGwUYTp2fDjplovnZGq9czqAWDTQ8AfYMyGFGgAYpomdjKscoF2lhjVz6aPLOmirvUe9ZRpEO4VDYMT&#x2F;lTQn8Z2nKvKt0sQtjpjBlqiJ47WZjBkjgJ4kfMLzJcFBKGR5eB5wETwabMrDfwQ1IXVNr1k9WSSQc6shT5mU0x4poRerg6UR9aEE5vFCFRU0iFpRDL51smymHuEQ55Jcac9v6Z4kgB1sAUJy5rSqoCHtOBA5yHwAfIA2CDoRGQEeAB0BjRJI4SBjoOoA+QBzhPIJIcR0DoAMMQzRrcAA4wnEAtUcvaHi6w57vvI4A65n2xtaJrV3ZrAakcrhrBlZ1zyx0JmRepoIMxJPAEZBTRZ0I6iTdpBq+8bS5dNpx1u365FVw7G+z9n1lQMezUZ0yjlOYMe9AU+uZARKa02vgJ4g3gIVVo59I9gboE9PkTLtSqiPoGT6OSJ8HCPsyilNqf2ym6K3eSHZ+MKWTfUo5dLsAfxdcDufMogfXQjms2pB7BKMmd5TD2lnvKIdq8nnb4PgGkGsRi1tzf8NaFjvQkXDIP6fRjuloKR1gNpZ0NhoujkNJsweYjoKOhB0hHICIsiR8Ej6AVuYkIxKNmUgNBWCHs3BKOrtetFRj+Jkh66+Z8fEB4gPSm6KbPgNffX&#x2F;qxsNVwdFP7Wn34cwIsdjeloPSu6ZNGSDpEO4kCsc1Pch7ZiIv39cBHIoXTAXEt9aAKWM9wZrBO+roDvGjCEzUBs0PkOUEwzfQfmiwt2k3fI5vH4Ln9kLUWCvBhAGii131GC9mqDZ&#x2F;f32jZihA6olItenTzaxSpXBDCwZr525I96h5rlIOUTrZCePxABXKYYXTnnJYB9pZ&#x2F;G62tQHkCUAuR1eYYoSbsye2IOT8Nh3S5KOmHLONZCIYg+J1OFyqTZjobMfnM0I6lo72saTfE9i0I48gpjjgpbMuBMtZ3xcQfmwK1+UnAySrVcA7xA9An6hOjcX7W65KqSmhTGgVBTi2sGSAcQToJIv&#x2F;d&#x2F;sZYVGUJcLkjFgR&#x2F;+UFtYpbNcdbne2aVhd6YIkANfOq39rMY40U222In8TP0s0uQFnGfKSfID60Hw4AhcHiG+v&#x2F;fKfAba6QFzOfy8EkziiHmC0Q5OXrLN1vy8GdTodZPJeLv1XnIXPX2C5D6ClB2ZuJV6UcIntQDocl5bBXUfPVD3aLHjeAPN0tdqUx05lWRZBVSPwl1dZOx3z0Q8p5sJSOlEZAJRpkoRKiCueWmh+DfghGk4Q2FXAs98FEFn62MJXmzrr4I5u69CR5HVWpcv9lmLnS6BCG9q4PSBnRVS3FS69SMdXb+6SqxRhqJ6NSujh+OrfHCq88rYrdYsTgJEU8bbZqmZYT551qFF510P&#x2F;CnnUxyhOGWZFye40UP0paHXxqcjbZCguFNyS+6+ifcDmSNWYMWh2v&#x2F;J4DGC1neLJS&#x2F;zuRsOsGBqwCZG3ANMqhIU3RtOGHN8qhRNA6Xn1&#x2F;7llQDlvTO1L7QjnksbB5Unqw7bI1ajaAPEt&#x2F;xjib+orlaOXFZgmkO3zyacpMadKQJqoAG1QUyDFVdXEBmVGnm4qyT1XyqeCYQWQFMB5Zt0F2rrPYdtpJ0EfxPnmr3imK0ZYPyD&#x2F;g+pD0AffPApClm918vxEeOt6n2HMySFlMIDW8U&#x2F;vXW+vx3CTgOjhqCXr3oOip8Va8+ENT1AHepeoRow4gUeuRc+RYa47Ez8Ke+YFasyR&#x2F;YkhvMBx4cEd2YEgxYkOGBnJKc+&#x2F;JVTrZGXkYI62t84lpSTmsqkmt2VLFcwvlMGXH8ckWlMP60bI1as6jb0qXe1maTbxmyiHOND82yuEGkDeXuoo&#x2F;JMC9zEWWSwWKRAeR8zRNtJQ5DBMteYyX20RoghjRYWhEltEbjiFcoQmOCYYMx7HIo0XKHduPEAdQyyhyBjCH&#x2F;Aj3zwAJHOI6jnAcIP8soy7zBfgEkeGiFh1s1zzis5CwHnFufUsYCGOxsS0lx4U&#x2F;1q+6D14Ax6VKei7g+BOuH6pzi637rJ9FiOJHAcffw6O6Ct2q8KvrAHi5zfAG4kNDOgRGZKA0OVSEJeABmDV6s5zhYwCk2DdqOhGQEjGq6Yp1e1wG8o5RyzwI+jLlcAY+Wkc5ZEifcQfkZEhZpY7pG+VwA8gHAfJjmsGwP6MaYh6y7vxGgD5pOh5Rx2ZQABA6llriLrZzQti6TwxFn7HcfpRwJNsYUKTmWGyfAI1L5BAgHBWNoUMwRQIAJX0A&#x2F;gHwE&#x2F;JP1RSy1iIhL2XIiALdl+5VLK0AcQfaGKM8wMyjYU2t48JWo43Kvp0i3cnrfuj44xJAa70xhtirXNnvcP8x0wabX8xPQFGLDL717xB+LzXKSiX8CeB3CD9g&#x2F;ImU3ny0I4UJU1HVMQDZ54jKDJxyeTcsTRBH3o8Y8zHuZ5hZLJojyNZUOzFSYxHPdSt0pVKTpE4LFbPLYSCgt1vYpM&#x2F;KEHpJgpL3LodRpxwOEzSkGX85C2pYBXP55nK4AeTKymVEpR4cNVA6H1sRyMxRUUfMPinrSOoIV+hDUtGYCWm0yr3eYeZi95exu89A4oiafsfn2u+lh9AtxGLGr4i+Ric7+MY&#x2F;Cbwp0swfxcY0NxLbPPtYjr5m1r2DcZg1&#x2F;1mSLgOMmgGSABm+3&#x2F;H4akaW1hHwktzPnQrgdXB9LikEt1repchebA&#x2F;0ozVq4vI7gN9Lal3qjfoB8HcQP0F+YLCJoGTBSHEi6tFTLko8hTSg6SS99VIWDgBzsxhwXH8PbVMbxVE03dyIVBsuAzEUyuEseTajpWNp4qUTERMDka1SDg3M8R7yYOBneW8tID2hHK4IaG5rA8gIlHbDuRDDSgBED7NM7McJH9MROY+Y8hGDHeE8MJWONVrqXDrWOrYmTnVFjJbk1KJOICwboqFTHRRTY8nUCGhWtn6H8NbAEDPfWHNkVTyclVXVc+WnHRmV1zy07nR0q3P3OryAoXfujj43bOgPCWFcGxi3xWs71uaJvNNndMwzjkABxTLb6K1J86PMQv5YcK6JMNUCPpDdgx6IODlWsLESqVWhh3RBtrw0biog1fT2EuWw8amLTmdQDuMNh4kXMR6LFlTLm7UQzwVzVxuO59eYutGdSjlEa9R42iiHG0D+ykp2BoS1P8PTZoERGpn96Ee6T0l5gg8ZVtTD59pjdKZh4UnjPsGsNHSaN01YNsiatazMQ8k8ut+pdLc&#x2F;AH9XE3rFB1zvUjG5b+rX+igp+EfUH3UohvdBG3QthsPLAVMc6QvQRZLnnD28Z7&#x2F;vGRgdzdq2ejTyel62EAe&#x2F;aVZWxSaqNFk1yXqfU+ei0hP1xbkO2TNoajodohPxeOOHxnTgMftcuuCi9qdSYaAXsKqpfp07VKnzlREfmzKmfWqUQxWAPKMcVt58bb64kAtBNWUVyuFUSsGCnKX6cVKH7CJHypdVyp5y6EByx1Q72Xf0XjbK4QaQ50FL7vt4Xe2rCH7Hzt6lhYmuwbI+pknZM7JPNGVQM0gCAXJh3jXBLFPdOI8x6pOzp3ZElsIkKJNe&#x2F;G5wAPSpaL58QvqE+6GrRZbtOAj6BPDZcbIPAA6Kn3O9Mfo0zpD82UXdlLk5MJJFqIIdOCqHg6NUPL8FFnYO6Lfw8TprZsGn9tnKAL8rao0&#x2F;Oz71T0F1249gyhTmzMJjBm+AfofxB8AfSPah&#x2F;XBQknOSN+pdEZeNHcFQI0oC0OTBISqdbBR+c2tnucOHGPUBh0hXq&#x2F;oQTymHkR7n7sSQPGorbVzoaR2e5k725Q+1dZ87yiERjRokwJv02brLITfK4QaQF49dCwHTFimw7uhrgU6Zud7R&#x2F;ZOZk6Y0eFbyicaSNndAozrmozmKpAplD1O5Tx0Uz+Wxk4BjKZfPHWvUDjU+55&#x2F;4LKM+8wXNV6WaS310w+KuSPEowwhYIpBnsAt&#x2F;bzFUfCgKJhUQDNAUlja31bwsuu+PpdTz6E6uYhOaVXZ+j1qjfkgFNGv6XKLIOWLELFVGVJCs4PgOw6RkChHG3Im4FWfAEjkyR9SIMmyNrlGD0ghplMPs8GFAOh6j4dJRDtFFczEwXoyra6m2mnjBADPYMV7TLcqhmnJT9yF3lMO54VKAfsJMOZxCZGONctgAeKMcbgB5tvvt0gUFLp1V2VvzZs+MT59wKPau7i63ifQsWKZhAkszh8yQjiJHBqOmzDsiSzoyxnxi7CduOzanGLX6Y+vUqgLBzDn+0Qm+&#x2F;ixMkd9jkBo&#x2F;QHyUlBjK2RESgns4ExjIyVpjnIfAvTRswtHRTrbV6DLKZd7Cpjlpn+UGaxf3koxZiAp&#x2F;FKGJ9yYiESD4e0mr3zuLhBjVAWJ+EfwJlt&#x2F;lbyCjeUP8REqf8d69dXx7Be7WZVbt&#x2F;Hp8LAUgiVLXMwOmYwMmGcFjSbFr57qnHPqVWsMFyqF5NGpS73K4VLmbO+Id5dDkcFoTz50ph1ZMvKKTzUOGRps79AvKYc2hNsrhBpBn3cWVUZQKhqdSU01CUcIuTZ6niXk6YmIAHYYcpl08wD0sF5SGYtwVHWvHAEMRy2W1Ykhh5KVqYwdUybKQH&#x2F;sA8KNZlM4Uux+dkX0Flx+ztmGZDXSflCfAS1ods5klnGqgV2uKGVBudUir21BMySxHw6bVJ+N1XhAP77FzRtCYHyifyRukH&#x2F;LOWjXkx36H63dVemDxse7UeCqVcAZM4A3UTyR+Kg1HTkVBApESR&#x2F;eim0usxmaOiK5qt9oIHLzR9Joobi803I9ZqzZqfNEpPqUckieUQy9RI1kA0pA+Qhl80divDl2wEuTPlEPUIfaMVcohFaUASk3xeKMcbgD5QIrNfuZuPhBUpmLWbVLlO8uY0oGTUsqeYNmC2yVKSkQTzo04qyFumzCMU7Xq3krCdSyUippuF1TGISJJ&#x2F;WTzbW6c4zcFYLzP+ocxHK1Cs5PxSNIElY51bbjAyRK5ogAhkUurqgNA5jbqE6XZHC3WmadNzpI+yz7MWdpddSc&#x2F;K+BJ&#x2F;vv&#x2F;2t7V9cax5cYiT&#x2F;eMfDfJBkHy&#x2F;39dkJcAC3sszUf3YeWBPB89GvlugnvzsixA8FiS7RlrupqHxSoGoU9rEXgZ&#x2F;cZpZ4yP7rz3XTKNJBUfUL1S+BDSq96m&#x2F;hrGnOvsG+&#x2F;&#x2F;&#x2F;08&#x2F;fx2WQizq5Bk&#x2F;iIPlMAQZ3Q22SI899g7F85bDIFLRbjlUA+oSBBmWwxNdPe9LvCbLoak6TwLDclgNWF5ZDj1nSo1DqPmFhvZKrkkkQaKPBxq+3hkt4ndpUUDj11Iql+2G6wZsFsPmpqDGEmThRIQa&#x2F;R7x012vKoxN4TR7+GUaPcpYfTDNDm9xzLyOAAbeYjD6NoQMu4K80uwGq1cAV57XTXZZoVKc5NQAWAx7N8NwRVs3JTEjOX+dJPr8Y1MT&#x2F;HXKU8P2FytZW0TbdeyLsZhZ7MnfXlG2FastqWfYBb1iVLkA+BDgnaVcAdxRZIeFVfATC0xZHLOzZc4vKuLVZMt3rwasxas+CcIs2v8az3Ms0Lqjrs1y2KyJOinZrfrjYYhcjdjFe+DLbth+myyHc4RjE2qeHTXyYn&#x2F;kcyfD3HJobfaxizKvCsW0HCZBPl83ez0SoQioJVw0BZzdNNPFRhJyWkxE7&#x2F;W6sWzWqMT85h9bjdkrEvd5kQS15+cEBT4AKiXcLl5hHYePSAuXzS1UaxdlYnNfe0yzCKkIoixyExoJlilwAuI9xzbw7aM6GiM77NXiUAlcufavuSjQxoIYqvgUCnm4+jgJUN4q8JCJUKLtfQgyuLIn8OAC8scQXPARARN+&#x2F;FZXp+23012u24baQziexItJkCEH2fW5HnbxhdpixIIhnx01Zu5IibOqVvtsOexHW&#x2F;RVsEP2OFoO2xIvqleQVHmhVj&#x2F;VeS+Ku5nUDpZDhPC0ArUULO21Vet&#x2F;UbcKpOUwCfLl225Z&#x2F;UijGsO4+qnv+Kqq7BfVIrWe17vKJrRKmAxnTjteGemOFJVICFKhRWQLbiB9tUGM4ThB0qZ8xpb0TQA76eM&#x2F;MPuA8RKpPje2QWnwHcL3el5udtLtdDMxKEEbA96zfRBzlYgh3LSESM+FRA+s8IO2QKWZjeWT88gvvBrq+w3Ala5EX7oThu33&#x2F;MlWKbog03qNP4AgSeEVIu&#x2F;xcbWl3Ki6q6o3NHaO2Ju+2AqHRO3WK8Qs1Ng0ky8K2A6WEGr2I0Fir2OHdRChnRec6uNoOayfhKjPwjBjDKeF58aXrUgfu+F0j2qWQ0YfclgO4zXE0bptOSzmHm&#x2F;Z&#x2F;a3HpUDuD1hZnDw5LIe+uoHdcpijPkmQk4r99kSA&#x2F;GX7hc9dGnomOJflbtedhUZYrVAYqfTVWVJBMRh9pKZWUmSL0KuWzK2hKVaANxg2F0u8XoWItbWzMGwC3tiO24Ir4Z5sAW5U3MWw72fd67nwdDcV9ZyJXoeQU1+UfuXFDhoRicfxIVLiPFdi1YL0ZWQq&#x2F;v3H814kfbvy3N0ubXwn5htjedYlfNM&#x2F;ew&#x2F;Sj9Q&#x2F;AX73X+VdRK4+siMPQva6ngiaB9c+Dft3IWR2kUQMJosc2ojHcFrpfTyoeGgFJ6FmJo0DmYzB8e40AL+wHHJYDqOK9C2HEtmQ7qhheTr+t2AgUShsshzGjKYWYJ8sh5t1JbtZGeX6dAOLYzf06bzyOccu8Q&#x2F;bg&#x2F;zFnZJPup6EAaU&#x2F;ji&#x2F;6amOpOJW7VewKbKA9hHaVqu9c8AbRM0ROEC7i1sNCgRn4gKAKpIrRKKgg7lTuVLGISNtgMAEqBcYTSBEDsSuxoaJSQVsLuVU73WEQwXo3qBd7AmGBShEnQlfRPWjCfy+d6BQaBDk+BCoqUAmCDEIUFVXt1xRaxWi3WHz1AzWGvSPxuy&#x2F;OQh&#x2F;2bip080239O8LIBcUuXBd7lyXB24P27XgZEatFbUUoO5dRBlhYd7K9dZGWAaDxA5K+izUEE60XagJD3azHKq+Prq3SqwarCnXk4BztBxOS7xCQW&#x2F;ZkKu45dBWgdyj1&#x2F;nKctie+7TCQo2oImN0pz0&#x2F;lUmo0S&#x2F;lmEQS5K858unN0lVGweFeKl+pfu34pGImYjBUtfrx+Ouy1DeV8w+LQCtTCtRUhQUGwSaGXSopoNgqShGiyGZCEwK607VlFewnH1zU4tPc2OkFSVwoPBV3FN5DXTVC72yySqvyIomik2OrFqNtJfPnYqshopJEGStrpUh77K2BD4A3GtwSSbuA&#x2F;N5aAGOZFhpBjrEl4OLH6e6Z&#x2F;gmRDyzLhwgeti7GtxXl+hjzgI0IdgKrfp5vfnXfo40fpE7HAE6WQ5Wj5bDGUgyVrkuN+HlfvcBSUMywLQqW2HLYwiAOlsMnJZuecWGL&#x2F;7taif1cAO5dqHm2HPZcyTajo3EzkC8shxzP0eaAi5eNzPlhUmcSJHx2bEQPEvKLa4y&#x2F;w7JT0opJBfZvpW7&#x2F;suB8uaOqop78QrKpiJmb7BYXZ7t4ugVMSDH67pwWEdFOzO1ardPOZSVsWfvFqY9NYaZh5ShRUpW2Lwf49DF2eRMFisXX14qvtKX4LKeKq9KMpCGzdxg+YHyH2QXghd5vfA8xZqxCYFuLwAtELhBcAPmA4Iql3LmWh&#x2F;37P9vyX9&#x2F;pA9xy3H562CLYKj4OkjN87vtZOwoH6cgQasYbQnr1JxKWw1PshVF30HBZRkFYrYfn4rxENJm0UKRPlkNBHNnj2at5cjJVvILU1yM2Q8l+rvtGn&#x2F;Ol5TDeG1jgA+M2hWZgCDTWyBXyxShC4h+SIFfhJ&#x2F;L7P7enZYQSUIH1suP2b+sYreDrcpWRUi3H5MBR6XzlzJBXcfxAXRcnWLe9KSoH8am2x4uvbVUF4NWg+lEbbX2tf659X&#x2F;HSSAjVHYKrLweLY7XZO5vNUXiF4gcMPwD8iNTuadCbF0gE2raUndPyjmp3nIuhokZuJbAUSBvbKXGEfCJIXy&#x2F;g7pZP7ZMuOERKz3xE&#x2F;sJyqHv07GbLoWpXgH3PY&#x2F;Qhd4O9LVgeDxBvo1+5W6&#x2F;WPlsOx&#x2F;NTa1sOFcqwHJZZ5JmbkOwC07PlUF5ZDs3XDckOyJuH5667jVbCZDls&#x2F;09Hy2EiRZo&#x2F;thzt7zuKYLmbX5fFL7rf5dev9CF5+vqwUhxegZi5lxiGcucQwQmgLCJFWzJ4FLzhq9CwGWqp0wykQWQXwQbRe5TYG0R&#x2F;Ts&#x2F;Jwn5yR5EPMdypvIPyAcN3KP8mJt+hbcOgfGDRd8B+Anpl0TvWcofIXv&#x2F;jX&#x2F;fyn&#x2F;9NOStwoxNM9Tgv2asfWZcC2W2IHOY3I4ldLNhqDzzvQk3zWE+OGivlF5ZDBWzzJZMHyyE+Ww7Fd1tX1ch5xPD1&#x2F;96baxKODpZDErUIFmMfJejH85jR9JavHSyHQLh5wmreXjeLTEJNgT521LX45kMMy6HJk0STFWQS5J8KAXQjJOL1deexx8OD+vMkVeJpNUFcwMaRTwgee00x2lKqoLxXsEjkGRZj0U0hdxRViBYAqhJVZJ+BkeqhGSKxfOzDY6tbD5LFa1R7RJL61lPVgQcgV4CbgBvBW&#x2F;ijf2DVd+pyheABq5vsVqnrg0UqBGQp3j7YK3BagccDKAWyAdirE+SHzxxy8WAHU0GJ3poVhVY77jfvQkbbRTCtJujOmaiedAgm3ntUHFZJWFgO8cJy+LzE0ax7sjvxfmU5bCERfLIc7m45xM1dPAfLYQ+tkGPLtVWLbW9OO8Yz5h73seXwuGsd3XKIlG+SIP8&#x2F;SLG3hMSDC8rdUM+C9d2DA+bj0fNBRuaRPBkdJxeMpy13h0GMoYwKFpSq4D+th0xCCDZ5e3vH9e6rIlQegNwiJ&#x2F;HUeosCFgrWMQYpTvEiuwA7jBU0Tz5XqVQxz7zEQ8gHRYzW9kxpRdG7lWXzz1TI3cTKAn77jVIfwOMeJ&#x2F;wgw&#x2F;MJ8uMGfIs9zlsFz6u&#x2F;4r3C1oLCR8SGEQrDJotXmqclqJ5jsL&#x2F;aMB+Hkv3Zcng8wf7SctjCLvhiy2FUk7YoqNUPExyTjJhWkwvaCE6zHPp4jy&#x2F;xIrZVIB8Vgs+WQ4G5UDO3VVQh+94th4XA3m6ecap3JVv+l5bDRBLkH6&#x2F;6RNq0Xz&#x2F;lWrF&#x2F;8&#x2F;FGCcVSnm7iLUdwVIife0DsjXrBPPHB3oeU+HFwJHPP1slS9kjeeUDlHYIikMWrRHfVmKgRpkrxIXbFAyoGwmBEPa9ENUqt7DtppqdoywKaQR97PAeOPSo+s+clU&#x2F;WAhd4BEIFsO&#x2F;i2An+zsfpiq+Bfzi6YVAPfTsOhMis0babv7zkWPlsOD5+fxmPMWyMC+HF&#x2F;Le6FboPZZTlYDlkKyl7dctiFmhgRmpRsQkevr&#x2F;chg9BCqHmc9XjT5bGC&#x2F;Luqu2fLYcuGjNxLfrUZsSf7JJIg&#x2F;4SGpr&#x2F;xgrgUWD4qHn9dQd1iWZN6ehifK85hESZfVKXyC7HmUAJ98bzMIKoGFdJtP9N2Kb9eawxc624vpXxfAuVN&#x2F;&#x2F;CAHKJ6JBTduTqW6SYAVU90a1sCp2Oo7BX2l2&#x2F;HP7jXQx7jc0jnEGqmER3j1JrAi7nFZ8thzOabQYovAmeJf09jT1FkQTpxayjZ6NKvVoOd&#x2F;PhPOY9tiC8sh17sz8&#x2F;JCbJbDreIO&#x2F;tqkSEm0n1auCvTCaVbDsMB6q4dwBbFEq0A1OEzbJkYmlfxH3uoZFqSEolE4ssDZSKRSCSSIBOJRCIJMpFIJJIgE4lEIgkykUgkkiATiUQiCTKRSCSSIBOJRCIJMpFIJJIgE4lEIgkykUgkkiATiUQikQSZSCQSSZCJRCKRBJlIJBJJkIlEIpEEmUgkEkmQiUQikQSZSCQSSZCJRCKRBJlIJBJJkIlEIpEEmUgkEokkyEQikUiCTCQSiSTIRCKRSIJMJBKJJMhEIpFIgkwkEokkyEQikUiCTCQSiSTIRCKRSIJMJBKJJMhEIpFIJEEmEolEEmQikUgkQSYSiUQSZCKRSPzZ+B+GrlwhibMxxQAAAABJRU5ErkJggg&#x3D;&#x3D;&quot;;function Sakura(x, y, s, r, fn) &#123;    this.x &#x3D; x;    this.y &#x3D; y;    this.s &#x3D; s;    this.r &#x3D; r;    this.fn &#x3D; fn;&#125;Sakura.prototype.draw &#x3D; function (cxt) &#123;    cxt.save();    var xc &#x3D; 40 * this.s &#x2F; 4;    cxt.translate(this.x, this.y);    cxt.rotate(this.r);    cxt.drawImage(img, 0, 0, 40 * this.s, 40 * this.s)    cxt.restore();&#125;Sakura.prototype.update &#x3D; function () &#123;    this.x &#x3D; this.fn.x(this.x, this.y);    this.y &#x3D; this.fn.y(this.y, this.y);    this.r &#x3D; this.fn.r(this.r);    if (this.x &gt; window.innerWidth || this.x &lt; 0 || this.y &gt; window.innerHeight || this.y &lt; 0) &#123;        this.r &#x3D; getRandom(&#39;fnr&#39;);        if (Math.random() &gt; 0.4) &#123;            this.x &#x3D; getRandom(&#39;x&#39;);            this.y &#x3D; 0;            this.s &#x3D; getRandom(&#39;s&#39;);            this.r &#x3D; getRandom(&#39;r&#39;);        &#125; else &#123;            this.x &#x3D; window.innerWidth;            this.y &#x3D; getRandom(&#39;y&#39;);            this.s &#x3D; getRandom(&#39;s&#39;);            this.r &#x3D; getRandom(&#39;r&#39;);        &#125;    &#125;&#125;SakuraList &#x3D; function () &#123;    this.list &#x3D; [];&#125;SakuraList.prototype.push &#x3D; function (sakura) &#123;    this.list.push(sakura);&#125;SakuraList.prototype.update &#x3D; function () &#123;    for (var i &#x3D; 0, len &#x3D; this.list.length; i &lt; len; i++) &#123;        this.list[i].update();    &#125;&#125;SakuraList.prototype.draw &#x3D; function (cxt) &#123;    for (var i &#x3D; 0, len &#x3D; this.list.length; i &lt; len; i++) &#123;        this.list[i].draw(cxt);    &#125;&#125;SakuraList.prototype.get &#x3D; function (i) &#123;    return this.list[i];&#125;SakuraList.prototype.size &#x3D; function () &#123;    return this.list.length;&#125;function getRandom(option) &#123;    var ret, random;    switch (option) &#123;        case &#39;x&#39;:            ret &#x3D; Math.random() * window.innerWidth;            break;        case &#39;y&#39;:            ret &#x3D; Math.random() * window.innerHeight;            break;        case &#39;s&#39;:            ret &#x3D; Math.random();            break;        case &#39;r&#39;:            ret &#x3D; Math.random() * 6;            break;        case &#39;fnx&#39;:            random &#x3D; -0.5 + Math.random() * 1;            ret &#x3D; function (x, y) &#123;                return x + 0.5 * random - 1.7;            &#125;;            break;        case &#39;fny&#39;:            random &#x3D; 1.5 + Math.random() * 0.7            ret &#x3D; function (x, y) &#123;                return y + random;            &#125;;            break;        case &#39;fnr&#39;:            random &#x3D; Math.random() * 0.03;            ret &#x3D; function (r) &#123;                return r + random;            &#125;;            break;    &#125;    return ret;&#125;function startSakura() &#123;    requestAnimationFrame &#x3D; window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame ||        window.msRequestAnimationFrame || window.oRequestAnimationFrame;    var canvas &#x3D; document.createElement(&#39;canvas&#39;),        cxt;    staticx &#x3D; true;    canvas.height &#x3D; window.innerHeight;    canvas.width &#x3D; window.innerWidth;    canvas.setAttribute(&#39;style&#39;, &#39;position: fixed;left: 0;top: 0;pointer-events: none;&#39;);    canvas.setAttribute(&#39;id&#39;, &#39;canvas_sakura&#39;);    document.getElementsByTagName(&#39;body&#39;)[0].appendChild(canvas);    cxt &#x3D; canvas.getContext(&#39;2d&#39;);    var sakuraList &#x3D; new SakuraList();    for (var i &#x3D; 0; i &lt; 50; i++) &#123;        var sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;        randomX &#x3D; getRandom(&#39;x&#39;);        randomY &#x3D; getRandom(&#39;y&#39;);        randomR &#x3D; getRandom(&#39;r&#39;);        randomS &#x3D; getRandom(&#39;s&#39;);        randomFnx &#x3D; getRandom(&#39;fnx&#39;);        randomFny &#x3D; getRandom(&#39;fny&#39;);        randomFnR &#x3D; getRandom(&#39;fnr&#39;);        sakura &#x3D; new Sakura(randomX, randomY, randomS, randomR, &#123;            x: randomFnx,            y: randomFny,            r: randomFnR        &#125;);        sakura.draw(cxt);        sakuraList.push(sakura);    &#125;    stop &#x3D; requestAnimationFrame(function () &#123;        cxt.clearRect(0, 0, canvas.width, canvas.height);        sakuraList.update();        sakuraList.draw(cxt);        stop &#x3D; requestAnimationFrame(arguments.callee);    &#125;)&#125;window.onresize &#x3D; function () &#123;    var canvasSnow &#x3D; document.getElementById(&#39;canvas_snow&#39;);&#125;img.onload &#x3D; function () &#123;    startSakura();&#125;function stopp() &#123;    if (staticx) &#123;        var child &#x3D; document.getElementById(&quot;canvas_sakura&quot;);        child.parentNode.removeChild(child);        window.cancelAnimationFrame(stop);        staticx &#x3D; false;    &#125; else &#123;        startSakura();    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> JSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并查集</title>
      <link href="/2021/04/17/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2021/04/17/%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Union-Find-并查集"><a href="#Union-Find-并查集" class="headerlink" title="Union-Find 并查集"></a>Union-Find 并查集</h1><blockquote><p>Union-Find 算法 也就是并查集，主要解决图论中的 【动态连通性】 问题。</p></blockquote><h2 id="🍖关键代码"><a href="#🍖关键代码" class="headerlink" title="🍖关键代码"></a>🍖<strong>关键代码</strong></h2><p>🎈<em>模板①</em></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">&#123;</span>    int<span class="token punctuation">[</span><span class="token punctuation">]</span> parents<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">UnionFind</span><span class="token punctuation">(</span><span class="token parameter">int totalNodes</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        parents <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>totalNodes<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>int i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> totalNodes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            parents<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token comment">// 合并连通区域是通过find来操作的, 即看这两个节点是不是在一个连通区域内.</span>    boolean <span class="token function">union</span><span class="token punctuation">(</span><span class="token parameter">int node1<span class="token punctuation">,</span> int node2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        int root1 <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span><span class="token punctuation">;</span>        int root2 <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>node2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>root1 <span class="token operator">!=</span> root2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            parents<span class="token punctuation">[</span>root2<span class="token punctuation">]</span> <span class="token operator">=</span> root1<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//连接成功 返回true,说明这两个节点当前并没有相连</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//已经相连 ，返回 false</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    int <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">int node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>parents<span class="token punctuation">[</span>node<span class="token punctuation">]</span> <span class="token operator">!=</span> node<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 当前节点的父节点 指向父节点的父节点.</span>            <span class="token comment">// 保证一个连通区域最终的parents只有一个.</span>            parents<span class="token punctuation">[</span>node<span class="token punctuation">]</span> <span class="token operator">=</span> parents<span class="token punctuation">[</span>parents<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            node <span class="token operator">=</span> parents<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> node<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>🎈<em>模板②</em></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">&#123;</span><span class="token comment">//用于不确定节点数的并查集</span>        <span class="token keyword">private</span> Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> parent<span class="token punctuation">;</span>        <span class="token keyword">private</span> int count<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">UnionFind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token keyword">public</span> int <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> count<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> int <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">int x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>parent<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                parent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 并查集集中新加入一个结点，结点的父亲结点是它自己，所以连通分量的总数 +1</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> parent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                parent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token function">find</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> parent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token parameter">int x<span class="token punctuation">,</span> int y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            int rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>            int rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">==</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            parent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>rootX<span class="token punctuation">,</span> rootY<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 两个连通分量合并成为一个，连通分量的总数 -1</span>            count<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="🍔食用方法"><a href="#🍔食用方法" class="headerlink" title="🍔食用方法"></a>🍔食用方法</h2><hr><ul><li>被围绕的区域</li></ul><p><img src="https://cdn.jsdelivr.net/gh/HsDodo/blogImage/images/20210417233759.png"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">solve</span><span class="token punctuation">(</span><span class="token parameter">char<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        int n<span class="token operator">=</span>board<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        int m<span class="token operator">=</span>board<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        UnionFind uf<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span>m<span class="token operator">*</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        int dummy<span class="token operator">=</span>m<span class="token operator">*</span>n<span class="token punctuation">;</span>        int<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dir<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>int j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'O'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>i<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token operator">||</span>j<span class="token operator">==</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        uf<span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span>i<span class="token operator">*</span>m<span class="token operator">+</span>j<span class="token punctuation">,</span>dummy<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span>int k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        int x<span class="token operator">=</span>i<span class="token operator">+</span>dir<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        int y<span class="token operator">=</span>j<span class="token operator">+</span>dir<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isArea</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>n<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>board<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'O'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            uf<span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span>i<span class="token operator">*</span>m<span class="token operator">+</span>j<span class="token punctuation">,</span>x<span class="token operator">*</span>m<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>int j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'O'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>uf<span class="token punctuation">.</span><span class="token function">isConnected</span><span class="token punctuation">(</span>i<span class="token operator">*</span>m<span class="token operator">+</span>j<span class="token punctuation">,</span>dummy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'X'</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    boolean <span class="token function">isArea</span><span class="token punctuation">(</span><span class="token parameter">int x<span class="token punctuation">,</span>int y<span class="token punctuation">,</span>int row<span class="token punctuation">,</span>int colum</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> x<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>x<span class="token operator">&lt;</span>row<span class="token operator">&amp;&amp;</span>y<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>y<span class="token operator">&lt;</span>colum<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 并查集 </tag>
            
            <tag> Union-Find </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建</title>
      <link href="/2021/04/17/Hexo%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/04/17/Hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="Page-Font-matter"><a href="#Page-Font-matter" class="headerlink" title="Page Font-matter"></a>Page Font-matter</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">---title:date:updated:type:comments:description:keywords:top_img:mathjax:katex:aside:aplayer:highlight_shrink:---</code></pre><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><h2 id="Post-Font-matter"><a href="#Post-Font-matter" class="headerlink" title="Post Font-matter"></a>Post Font-matter</h2><table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center"> title</td><td style="text-align:center">【必需】文章标题</td></tr><tr><td style="text-align:center"> date</td><td style="text-align:center">【必需】文章创建日期</td></tr><tr><td style="text-align:center"> updated</td><td style="text-align:center">【可选】文章更新日期</td></tr><tr><td style="text-align:center"> tags</td><td style="text-align:center">【可选】文章标籤</td></tr><tr><td style="text-align:center"> categories</td><td style="text-align:center">【可选】文章分类</td></tr><tr><td style="text-align:center"> keywords</td><td style="text-align:center">【可选】文章关键字</td></tr><tr><td style="text-align:center"> description</td><td style="text-align:center">【可选】文章描述</td></tr><tr><td style="text-align:center"> top_img</td><td style="text-align:center">【可选】文章顶部图片</td></tr><tr><td style="text-align:center"> cover</td><td style="text-align:center">【可选】文章缩略图 (如果没有设置 top_img, 文章页顶部将显示缩略图，可设为 false / 图片地址 / 留空)</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示文章评论模块 (默认 true)</td></tr><tr><td style="text-align:center">toc</td><td style="text-align:center">【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td style="text-align:center">toc_number</td><td style="text-align:center">【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td style="text-align:center">copyright</td><td style="text-align:center">【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td style="text-align:center">copyright_author</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td style="text-align:center">copyright_author_href</td><td style="text-align:center">【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td style="text-align:center"> copyright_url</td><td style="text-align:center">【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td style="text-align:center"> copyright_info</td><td style="text-align:center">【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td style="text-align:center"> mathjax</td><td style="text-align:center">【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td style="text-align:center"> highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:center">hide</td><td style="text-align:center">【可选】隐藏文章</td></tr><tr><td style="text-align:center"> sticky</td><td style="text-align:center">【可选】文章置顶，值越大越考上</td></tr></tbody></table><h2 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h2><p>参考:<a href="https://www.antmoe.com/posts/3b43914f/#%E6%96%87%E4%BB%B6%E5%A4%B4">小康的 butterfly 主题使用文档 | 小康博客 (antmoe.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Morris遍历</title>
      <link href="/2020/10/11/Morris%E9%81%8D%E5%8E%86/"/>
      <url>/2020/10/11/Morris%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Morris遍历"><a href="#Morris遍历" class="headerlink" title="Morris遍历"></a><font color='#ff7f50'>Morris遍历</font></h2><blockquote><p>通常，实现二叉树的前序( preorder )、中序( inorder )、后序( postorder )遍历有两种常用方法: ① 递归  ② 栈 。这两种方法都是O(n)的空间复杂度 ( 递归本身占用 stack 空间 或者用户自定义的stack ),而Morri遍历可以使用O(1)的空间,而且可以在同样O(n)时间内完成.</p></blockquote><hr><h6 id="🦌中序遍历"><a href="#🦌中序遍历" class="headerlink" title="🦌中序遍历"></a>🦌<strong>中序遍历</strong></h6><blockquote><p>步骤 :</p><p>①如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。</p><p>②如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。</p><p>​     a) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。</p><p>​      b) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）。输出当前节点（这里输出是因为是第二次到cur节点了 所以直接打印）。当前节点    更新为当前节点的右孩子。</p><p>③重复以上1、2直到当前节点为空。</p></blockquote><img src="/medias/images/Morris_in.jpg" style="zoom:80%;" /><h6 id="🐑前序遍历"><a href="#🐑前序遍历" class="headerlink" title="🐑前序遍历"></a>🐑<strong>前序遍历</strong></h6><p>​    </p><blockquote><p>步骤 :</p><p>​    前序与中序就一行输出代码不同 其他相似</p><p>①如果当前节点的左孩子为空，则输出当前节点并将其右孩子作为当前节点。</p><p>②如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。</p><p>​     a) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点,输出当前节点(这里与中序不同)。当前节点更新为当前节点的左孩子。</p><p>​      b) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空（恢复树的形状）,当前节点    更新为当前节点的右孩子。</p><p>③重复以上1、2直到当前节点为空。</p><p>如图所示( 从左到右 ，从上到下 ), cur 代表当前节点,深色节点表示该节点已经输出</p></blockquote><img src="/medias/images/Morris_pre.jpg" style="zoom:80%;" /><h6 id="🐫后序遍历"><a href="#🐫后序遍历" class="headerlink" title="🐫后序遍历"></a>🐫<strong>后序遍历</strong></h6><blockquote><p>步骤 : </p><p>后续遍历稍显复杂，需要建立一个临时节点dump，令其左孩子是root。并且还需要一个子过程，就是倒序输出某两个节点之间路径上的各个节点。</p><p>当前节点设置为临时节点dump。</p><p>① 如果当前节点的左孩子为空，则将其右孩子作为当前节点。</p><p>②如果当前节点的左孩子不为空，在当前节点的左子树中找到当前节点在中序遍历下的前驱节点。</p><p>​        a) 如果前驱节点的右孩子为空，将它的右孩子设置为当前节点。当前节点更新为当前节点的左孩子。</p><p>​        b) 如果前驱节点的右孩子为当前节点，将它的右孩子重新设为空。倒序输出从当前节点的左孩子到该前驱节点这条路径上的所有节点。当前节点更新为当前节点的右孩子。</p><p>③重复以上1、2直到当前节点为空。<br>图示：</p></blockquote><img src="/medias/images/Morris_pos.jpg" style="zoom:80%;" /><hr><pre class="line-numbers language-java" data-language="java"><code class="language-java">package Morris遍历;import java.awt.*;&#x2F;** * @作者 森 * @日期 2020-09-28 *&#x2F;public class MorrisTraversal &#123;    &#x2F;&#x2F;二叉树节点的定义    public static class Node&#123;        int val;        Node left;        Node right;        public Node(int val) &#123;            this.val &#x3D; val;        &#125;    &#125;    public static Node getMostRight(Node root)&#123; &#x2F;&#x2F;获取root左分支的最右节点,也就是中序遍历的前驱节点        if(root&#x3D;&#x3D;null) return null;        Node p&#x3D;root.left;        while(p.right!&#x3D;null &amp;&amp; p.right!&#x3D;root)&#123;               p&#x3D;p.right;        &#125;        return p;    &#125;        &#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Morris中序遍历&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;    public static void morrisInorder(Node root)&#123;        Node cur&#x3D;root;        while (cur!&#x3D;null)&#123;            if(cur.left&#x3D;&#x3D;null)&#123;                System.out.print(cur.val+&quot; &quot;);                cur&#x3D;cur.right;            &#125;else&#123;                Node cur2&#x3D;getMostRight(cur);                if(cur2.right&#x3D;&#x3D;null)&#123;                    cur2.right&#x3D;cur;                    cur&#x3D;cur.left;                &#125;else&#123;                    cur2.right&#x3D;null;                    System.out.print(cur.val+&quot; &quot;);                    cur&#x3D;cur.right;                &#125;            &#125;        &#125;    &#125;        &#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Morris前序遍历&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;     public static void morrisPre(Node root)&#123;        Node cur&#x3D;root;        while (cur!&#x3D;null)&#123;            if(cur.left&#x3D;&#x3D;null)&#123;                &#x2F;&#x2F;如果左子树为空的话直接打印当前节点 ,并把当前节点设置为右节点                System.out.print(cur.val+&quot; &quot;);                cur&#x3D;cur.right;            &#125;else&#123;                Node cur2&#x3D;getMostRight(cur);                if(cur2.right&#x3D;&#x3D;null)&#123;&#x2F;&#x2F;前序遍历在第一次到一个节点的时候打印出来                    cur2.right&#x3D;cur;&#x2F;&#x2F;这里cur2.right&#x3D;&#x3D;null说明是第一次到cur                    System.out.print(cur.val+&quot; &quot;);                    cur&#x3D;cur.left;                &#125;else&#123;                    cur2.right&#x3D;null;                    cur&#x3D;cur.right;                &#125;            &#125;        &#125;         &#125;       &#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Morris 后序遍历&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;                &#x2F;&#x2F;后序比较麻烦一点    public static void morrisPos(Node root)&#123;Node cur&#x3D;root;        while (cur!&#x3D;null)&#123;            if(cur.left&#x3D;&#x3D;null)&#123;                cur&#x3D;cur.right;            &#125;else&#123;                Node cur2&#x3D;getMostRight(cur);                if(cur2.right&#x3D;&#x3D;null)&#123;                    cur2.right&#x3D;cur;&#x2F;&#x2F;这里cur2.right&#x3D;&#x3D;null说明是第一次到cur                    cur&#x3D;cur.left;                &#125;else&#123;                    cur2.right&#x3D;null;                    printRightEdg(cur.left);&#x2F;&#x2F;第二次回到cur节点,要打印cur左子树的右边界                    cur&#x3D;cur.right;                &#125;            &#125;        &#125;        printRightEdg(root);    &#125;    public static void printRightEdg(Node root)&#123;&#x2F;&#x2F;逆序打印root 的右边界if(root&#x3D;&#x3D;null) return;        Node tail&#x3D;reverse(root);&#x2F;&#x2F;反转一次        Node p&#x3D;tail;        while(p!&#x3D;null)&#123;            System.out.print(p.val+&quot; &quot;);            p&#x3D;p.right;        &#125;     reverse(tail);&#x2F;&#x2F;恢复    &#125;    public static Node reverse(Node root)&#123; &#x2F;&#x2F;反转 root的右边界        if(root &#x3D;&#x3D; null) return null;        Node pre&#x3D;null;        Node from&#x3D;null;        Node next&#x3D;root;        while(next!&#x3D;null)&#123;            from&#x3D;next;            next&#x3D;next.right;            from.right&#x3D;pre;            pre&#x3D;from;        &#125;        return from;    &#125;&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;       public static void main(String[] args) &#123;        Node root&#x3D;new Node(6);        root.left&#x3D;new Node(2);        root.right&#x3D;new Node(7);        root.left.left&#x3D;new Node(1);        root.left.right&#x3D;new Node(4);        root.right.right&#x3D;new Node(9);        root.right.right.left&#x3D;new Node(8);        root.left.right.left&#x3D;new Node(3);        root.left.right.right&#x3D;new Node(5);        morrisInorder(root);        System.out.println();        morrisPre(root);        System.out.println();       morrisPos(root);    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Morris遍历 </tag>
            
            <tag> 二叉树遍历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字典树/前缀树(Trie Tree)</title>
      <link href="/2020/09/24/%E5%89%8D%E7%BC%80%E6%A0%91(Trie%20Tree)/"/>
      <url>/2020/09/24/%E5%89%8D%E7%BC%80%E6%A0%91(Trie%20Tree)/</url>
      
        <content type="html"><![CDATA[<h3 id="字典树-前缀树-单词查找树-Trie-Tree"><a href="#字典树-前缀树-单词查找树-Trie-Tree" class="headerlink" title="字典树/前缀树/单词查找树 (Trie Tree)"></a>字典树/前缀树/单词查找树 (Trie Tree)</h3><div class="note green icon modern"><i class="note-icon fas fa-fan"></i><p>简简单单前缀树。</p></div><h4 id="三向字典树-TST"><a href="#三向字典树-TST" class="headerlink" title="三向字典树(TST)  "></a><font color='#ff7f50'>三向字典树(TST)  </font></h4><blockquote><p>字典树又叫单词查找树,三向单词查找树中，每个节点都含有一个字符，三条链接和一个值。这三条链接分别对应着当前字母小于，等于和大于节点字母的所有键。三向单词查找树可以避免R向单词查找树过度的空间消耗.查找和插入时，首先比较键的首字母和根节点的字母，如果键的首字母较小，就选择左链接；如果较大，就选择右链接；如果相等就选择中链接。然后递归的使用相同的算法。查找时，如果遇到一个空链接或者当前键结束时节点的值为空，那么未命中；如果键结束时节点的值非空则查找命中。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">package 字典树;import java.util.ArrayList;import java.util.List;&#x2F;** * @作者 森 * * @日期 2020-09-24 * 三向单词查找树 *&#x2F;public class TST &#123;    Node head&#x3D;null;    class Node&#123;&#x2F;&#x2F;节点        char ch;        Node left,mid,right;&#x2F;&#x2F;左中右分支        int val;      Node()&#123;          this.val&#x3D;-1;      &#125;      Node(char ch)&#123;          this.ch&#x3D;ch;          this.val&#x3D;-1;      &#125;    &#125;    public void put(String[] words)&#123;        for(int i&#x3D;0;i&lt;words.length;i++)&#123;            head&#x3D;put(head,words[i],0,i);        &#125;    &#125;    private Node put(Node root,String word,int index,int value)&#123;        &#x2F;&#x2F;index表示该单词的第几个字符,value表示这个单词在单词表中第几个位置        int len&#x3D;word.length();        char c&#x3D;word.charAt(index);        if(root &#x3D;&#x3D;null)&#123;            root&#x3D;new Node(c);        &#125;        if(c&lt;root.ch)&#123;            root.left&#x3D;put(root.left,word,index,value);        &#125;else if(c&gt;root.ch)&#123;            root.right&#x3D;put(root.right,word,index,value);        &#125;else if(index&lt;len-1)&#123;            root.mid&#x3D;put(root.mid,word,index+1,value);        &#125;else &#123;            root.val&#x3D;value;        &#125;        return root;    &#125;    public int get(String word)&#123;        Node node&#x3D;get(this.tree.get(0),word,0);        if(node&#x3D;&#x3D;null) return -1;        return node.val;    &#125;    public Node get(Node root,String word,int index)&#123;        int len&#x3D;word.length();        char ch&#x3D;word.charAt(index);        if(root&#x3D;&#x3D;null) return null;        if(ch&lt;root.ch)&#123;&#x2F;&#x2F;字符小于该节点字符  则从该节点右子节点查找            return get(root.left,word,index);        &#125;else if(ch&gt;root.ch)&#123;&#x2F;&#x2F;字符大于该节点字符  则从该节点左子节点查找            return get(root.right,word,index);        &#125;else if(index&lt;len-1)&#123;&#x2F;&#x2F;该字符等于该节点字符  则取该字符的下一个字符 从中间节点继续查找            return get(root.mid,word,index+1);        &#125;else &#123;            &#x2F;&#x2F;走到单词最末尾            return root;        &#125;    &#125;    public static void main(String[] args) &#123;        TST t&#x3D;new TST();        String[] words&#x3D;&#123;&quot;pig&quot;,&quot;dog&quot;,&quot;Java&quot;,&quot;apple&quot;&#125;;        t.put(words);        System.out.println(t.get(&quot;Java&quot;));    &#125;&#125;</code></pre><img src="/medias/images/TrieTree1.jpg" style="zoom:35%;" /><img src="/medias/images/TrieTree2.jpg" style="zoom:67%;" /><hr><h4 id="R向字典树"><a href="#R向字典树" class="headerlink" title="R向字典树"></a><font color='#ff7f50'>R向字典树</font></h4><p>💫模板①</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">package 字典树;import java.awt.*;import java.util.ArrayList;import java.util.List;&#x2F;** * @作者 森 * @日期 2020-09-21 *&#x2F;public class TrieTree &#123;    public List&lt;Node&gt; tree&#x3D;new ArrayList&lt;&gt;(); &#x2F;&#x2F;存放节点的集合，可看作一个展开成一条线的树    public  void insert(String word, int index)&#123;&#x2F;&#x2F;往字典树里插单词        int len&#x3D;word.length(),cursor&#x3D;0;&#x2F;&#x2F;从字典树最开头的那个node节点开始往下存        for(int i&#x3D;0;i&lt;len;i++)&#123;            int x&#x3D;word.charAt(i)-&#39;a&#39;;&#x2F;&#x2F;取当个字符，一个一个取            if(tree.get(cursor).ch[x]&#x3D;&#x3D;0)&#123;&#x2F;&#x2F;如果这个字符节点没有的话就创建一个 0表示没有该节点的索引                tree.add(new Node());                tree.get(cursor).ch[x]&#x3D;tree.size()-1;                cursor&#x3D;tree.size()-1;            &#125;else &#123;                cursor &#x3D; tree.get(cursor).ch[x];            &#125;        &#125;        tree.get(cursor).flag&#x3D;index;    &#125;    public int search(String word)&#123;        int cursor&#x3D;0;        int len&#x3D;word.length();        StringBuffer sb&#x3D;new StringBuffer();        for (int i&#x3D;0;i&lt;len;i++)&#123;            char t&#x3D;word.charAt(i);            sb.append(t);            int x&#x3D;word.charAt(i)-&#39;a&#39;;&#x2F;&#x2F;将字符转为对应数字            if(tree.get(cursor).ch[x]!&#x3D;0)&#123;                cursor&#x3D;tree.get(cursor).ch[x];            &#125;else &#123;                return -1;            &#125;            if(i&#x3D;&#x3D;len-1)&#123;                System.out.println(sb.toString());                return tree.get(cursor).flag;            &#125;        &#125;        return -1;    &#125;    public void printTree()&#123;    &#125;    public static void main(String[] args) &#123;        String[] words&#x3D;&#123;&quot;like&quot;,&quot;pig&quot;,&quot;dog&quot;,&quot;bird&quot;&#125;;        TrieTree test&#x3D;new TrieTree();        test.tree.add(new Node());        for(int i&#x3D;0;i&lt;words.length;i++)&#123;            test.insert(words[i],i);        &#125;        System.out.println(test.search(&quot;bird&quot;));    &#125;&#125;class Node&#123;&#x2F;&#x2F;单个字符节点    int[] ch&#x3D;new int[26];    int flag;    public Node() &#123;        this.flag &#x3D; -1;&#x2F;&#x2F;flag &#x3D;-1表示没有到该字符结尾的单词    &#125;&#125;</code></pre><p>💫模板② ( 更好理解 )</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">class Trie &#123;    Trie[] childrens;    boolean isEnd;    &#x2F;** Initialize your data structure here. *&#x2F;    public Trie() &#123;        childrens &#x3D; new Trie[26];        isEnd&#x3D;false;    &#125;        &#x2F;** Inserts a word into the trie. *&#x2F;    public void insert(String word) &#123;        Trie cur&#x3D;this;        int len&#x3D;word.length();        for(int i&#x3D;0;i&lt;len;i++)&#123;            char ch&#x3D;word.charAt(i);            int index&#x3D;ch-&#39;a&#39;;            if(cur.childrens[index]&#x3D;&#x3D;null)&#123;                cur.childrens[index]&#x3D;new Trie();            &#125;            cur&#x3D;cur.childrens[index];            if(i&#x3D;&#x3D;len-1)&#123;                cur.isEnd&#x3D;true;            &#125;        &#125;    &#125;        &#x2F;** Returns if the word is in the trie. *&#x2F;    public boolean search(String word) &#123;        Trie cur&#x3D;this;        int len&#x3D;word.length();        for(int i&#x3D;0;i&lt;len;i++)&#123;            char ch&#x3D;word.charAt(i);            int index&#x3D;ch-&#39;a&#39;;            if(cur.childrens[index]&#x3D;&#x3D;null)&#123;                return false;            &#125;else&#123;                cur&#x3D;cur.childrens[index];            &#125;            if(i&#x3D;&#x3D;len-1)&#123;                return cur.isEnd;            &#125;        &#125;        return cur.isEnd;    &#125;        &#x2F;** Returns if there is any word in the trie that starts with the given prefix. *&#x2F;    public boolean startsWith(String prefix) &#123;        Trie cur&#x3D;this;        int len&#x3D;prefix.length();        for(int i&#x3D;0;i&lt;len;i++)&#123;            char ch&#x3D;prefix.charAt(i);            int index&#x3D;ch-&#39;a&#39;;            if(cur.childrens[index]&#x3D;&#x3D;null)&#123;                return false;            &#125;            cur&#x3D;cur.childrens[index];        &#125;        return true;    &#125;&#125;&#x2F;** * Your Trie object will be instantiated and called as such: * Trie obj &#x3D; new Trie(); * obj.insert(word); * boolean param_2 &#x3D; obj.search(word); * boolean param_3 &#x3D; obj.startsWith(prefix); *&#x2F;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> Trie Tree </tag>
            
            <tag> 前缀树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语句子摘抄</title>
      <link href="/2020/09/09/%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90%E6%91%98%E6%8A%84/"/>
      <url>/2020/09/09/%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<div class="note green icon modern"><i class="note-icon fas fa-rocket"></i><p>🎈<a href="/2021/04/27/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/">考研英语</a> - 📚 <a href="/2021/05/09/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/">英语生词</a></p></div><hr><h3 id="💫学习与发展"><a href="#💫学习与发展" class="headerlink" title="💫学习与发展"></a><font color='#ff7f50'>💫学习与发展</font></h3><blockquote><ul><li>In this <strong>rapidly</strong> changing knowledge economy, one of the most important and difficult decisions we have to make <strong>repeatedly</strong> is what to learn next.<br> 在这个瞬息万变的知识经济体系中，我们必须反复做出的最重要和最困难的决定之一就是下一步要学什么。</li></ul><ul><li><p>You can <strong>stumble upon</strong> ideas in books that give you AHA moments ,and hence lead to a different experience for your life.</p><p>你会在书中偶然发现让你恍然大悟的点子，从而给你的生活带来不一样的体验。</p><p>​                                                                </p></li><li><p><strong>Taking a nap</strong> after a heavy study session would allow your brain some time to rest.</p><p>在刻苦学习一段时间后打个盹，可以给大脑一些时间休息。</p><p>​        </p></li></ul></blockquote><h3 id="💫其他"><a href="#💫其他" class="headerlink" title="💫其他"></a><font color='#ff7f50'>💫其他</font></h3><blockquote><ul><li><p>Don’t let life <strong>slip through</strong> your fingers by always living in the past.</p><p>不要总怀念过去而让生命从你指尖溜走。</p></li></ul><ul><li><p>Try to free yourself  from the  culture of excess and learn to <strong>be content with</strong> fewer possessions and greater simplicity.</p><p>尽力把自己从无节制的文化中解放出来吧，学会满足于更少的物质财富，享受更加简朴的生活。</p></li></ul><ul><li><p>Likewise ,starting your morning <strong>on purpose</strong> 30 minutes early will likely inject at least 30 additional productive minutes into your day.</p><p>同样，每天早晨早起30分钟相当于给你每天的生活额外添加了至少30分钟的高效时间。</p></li></ul><ul><li><p>To be sure ,the future is not all rosy.</p><p>诚然，未来并不完全是美好的。</p></li></ul><ul><li><p>When our time of mourning is over ,we <strong>press forward</strong> , stronger with a greater understanding and respect for life.</p><p>哀伤过后，我们要努力向前，我们会因为对生活的更多理解和敬重而变得愈加坚强。</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中Swing的removeAll()的问题</title>
      <link href="/2020/09/06/Java%20%E4%B8%ADSwing%E7%9A%84removeAll()%E6%96%B9%E6%B3%95/"/>
      <url>/2020/09/06/Java%20%E4%B8%ADSwing%E7%9A%84removeAll()%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>之前在做一个小游戏的时候，我有一步是点击按钮之后游戏重置,一开始我给按钮加的监听是Frame.remove()，结果点击按钮之后</p><p>没有东西显示，再添加组件也没得显示</p><p><strong>原因：</strong></p><p>焦点切换问题。</p><p>要是调用Frame中的removeAll()方法,可能会把contentpane remove掉,其他的一些glasspane, rootpane, layerdpane,什么的也可能被移除掉</p><p><strong>解决办法</strong></p><p>尽量不要用Frame的removeAll() 用Frame中的contentpane.removeAll()</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">frame.getContentPane().removeAll();</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Swing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中Swing的焦点的问题</title>
      <link href="/2020/09/05/Java%20%E4%B8%ADSwing%E7%9A%84%E7%84%A6%E7%82%B9%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/05/Java%20%E4%B8%ADSwing%E7%9A%84%E7%84%A6%E7%82%B9%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>之前在做一个小游戏的时候，我给按钮加上了监听，但开始游戏之后点了按钮，键盘监听就失效了，按了没反应</p><p><strong>原因：</strong></p><p>焦点切换问题。</p><p>点击按钮后，焦点就到了按钮上，现在按键盘只能被按钮接收到，而不会被面板接收到。</p><p>焦点其实是很基础的一个问题，但是没有系统的学习过swing，这就是后果，gg。</p><p><strong>解决办法</strong></p><p>①每次鼠标点击按钮后，把用requestFocus方法重新把焦点放到主面板上，<br>如下:</p><pre class="line-numbers language-none"><code class="language-none">panel.requestFocus();</code></pre><p>②为你的主面板设置焦点</p><pre class="line-numbers language-none"><code class="language-none">panel.setFocusable(true);</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swing </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
